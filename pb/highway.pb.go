// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: highway.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CSDataHighwayHead
type Highway struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Highway) Reset() {
	*x = Highway{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway) ProtoMessage() {}

func (x *Highway) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway.ProtoReflect.Descriptor instead.
func (*Highway) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0}
}

// C2CCommonExtendinfo
type Highway_C2CCommonExtendinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InfoId           uint32                    `protobuf:"varint,1,opt,name=info_id,json=infoId,proto3" json:"info_id,omitempty"`                                // "uint32_info_id"
	FilterExtendInfo *Highway_FilterExtendInfo `protobuf:"bytes,2,opt,name=filter_extend_info,json=filterExtendInfo,proto3" json:"filter_extend_info,omitempty"` // "msg_filter_extendinfo"
}

func (x *Highway_C2CCommonExtendinfo) Reset() {
	*x = Highway_C2CCommonExtendinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway_C2CCommonExtendinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway_C2CCommonExtendinfo) ProtoMessage() {}

func (x *Highway_C2CCommonExtendinfo) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway_C2CCommonExtendinfo.ProtoReflect.Descriptor instead.
func (*Highway_C2CCommonExtendinfo) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Highway_C2CCommonExtendinfo) GetInfoId() uint32 {
	if x != nil {
		return x.InfoId
	}
	return 0
}

func (x *Highway_C2CCommonExtendinfo) GetFilterExtendInfo() *Highway_FilterExtendInfo {
	if x != nil {
		return x.FilterExtendInfo
	}
	return nil
}

// DataHighwayHead
type Highway_BaseHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version      uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`                              // "uint32_version"
	Uin          string `protobuf:"bytes,2,opt,name=uin,proto3" json:"uin,omitempty"`                                       // "bytes_uin"
	Command      string `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`                               // "bytes_command"
	Seq          uint32 `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`                                      // "uint32_seq"
	RetryTimes   uint32 `protobuf:"varint,5,opt,name=retry_times,json=retryTimes,proto3" json:"retry_times,omitempty"`      // "uint32_retry_times"
	AppId        uint32 `protobuf:"varint,6,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`                     // "uint32_appid"
	DataFlag     uint32 `protobuf:"varint,7,opt,name=data_flag,json=dataFlag,proto3" json:"data_flag,omitempty"`            // "uint32_dataflag"
	CommandId    uint32 `protobuf:"varint,8,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`         // "uint32_command_id"
	BuildVersion string `protobuf:"bytes,9,opt,name=build_version,json=buildVersion,proto3" json:"build_version,omitempty"` // "bytes_build_ver"
	LocaleId     uint32 `protobuf:"varint,10,opt,name=locale_id,json=localeId,proto3" json:"locale_id,omitempty"`           // "locale_id"
	EnvId        uint32 `protobuf:"varint,11,opt,name=env_id,json=envId,proto3" json:"env_id,omitempty"`                    // "env_id"
}

func (x *Highway_BaseHead) Reset() {
	*x = Highway_BaseHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway_BaseHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway_BaseHead) ProtoMessage() {}

func (x *Highway_BaseHead) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway_BaseHead.ProtoReflect.Descriptor instead.
func (*Highway_BaseHead) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Highway_BaseHead) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Highway_BaseHead) GetUin() string {
	if x != nil {
		return x.Uin
	}
	return ""
}

func (x *Highway_BaseHead) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Highway_BaseHead) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *Highway_BaseHead) GetRetryTimes() uint32 {
	if x != nil {
		return x.RetryTimes
	}
	return 0
}

func (x *Highway_BaseHead) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *Highway_BaseHead) GetDataFlag() uint32 {
	if x != nil {
		return x.DataFlag
	}
	return 0
}

func (x *Highway_BaseHead) GetCommandId() uint32 {
	if x != nil {
		return x.CommandId
	}
	return 0
}

func (x *Highway_BaseHead) GetBuildVersion() string {
	if x != nil {
		return x.BuildVersion
	}
	return ""
}

func (x *Highway_BaseHead) GetLocaleId() uint32 {
	if x != nil {
		return x.LocaleId
	}
	return 0
}

func (x *Highway_BaseHead) GetEnvId() uint32 {
	if x != nil {
		return x.EnvId
	}
	return 0
}

// DataHole
type Highway_DataHole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Begin uint64 `protobuf:"varint,1,opt,name=begin,proto3" json:"begin,omitempty"` // "uint64_begin"
	End   uint64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`     // "uint64_end"
}

func (x *Highway_DataHole) Reset() {
	*x = Highway_DataHole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway_DataHole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway_DataHole) ProtoMessage() {}

func (x *Highway_DataHole) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway_DataHole.ProtoReflect.Descriptor instead.
func (*Highway_DataHole) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Highway_DataHole) GetBegin() uint64 {
	if x != nil {
		return x.Begin
	}
	return 0
}

func (x *Highway_DataHole) GetEnd() uint64 {
	if x != nil {
		return x.End
	}
	return 0
}

// FilterExtendinfo
type Highway_FilterExtendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilterFlag         uint32                      `protobuf:"varint,1,opt,name=filter_flag,json=filterFlag,proto3" json:"filter_flag,omitempty"`                          // "uint32_filter_flag"
	ImageFilterRequest *Highway_ImageFilterRequest `protobuf:"bytes,2,opt,name=image_filter_request,json=imageFilterRequest,proto3" json:"image_filter_request,omitempty"` // "msg_image_filter_request"
}

func (x *Highway_FilterExtendInfo) Reset() {
	*x = Highway_FilterExtendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway_FilterExtendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway_FilterExtendInfo) ProtoMessage() {}

func (x *Highway_FilterExtendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway_FilterExtendInfo.ProtoReflect.Descriptor instead.
func (*Highway_FilterExtendInfo) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Highway_FilterExtendInfo) GetFilterFlag() uint32 {
	if x != nil {
		return x.FilterFlag
	}
	return 0
}

func (x *Highway_FilterExtendInfo) GetImageFilterRequest() *Highway_ImageFilterRequest {
	if x != nil {
		return x.ImageFilterRequest
	}
	return nil
}

// FilterStyle
type Highway_FilterStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StyleId   uint32 `protobuf:"varint,1,opt,name=style_id,json=styleId,proto3" json:"style_id,omitempty"`      // "style_id"
	StyleName []byte `protobuf:"bytes,2,opt,name=style_name,json=styleName,proto3" json:"style_name,omitempty"` // "style_name"
}

func (x *Highway_FilterStyle) Reset() {
	*x = Highway_FilterStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway_FilterStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway_FilterStyle) ProtoMessage() {}

func (x *Highway_FilterStyle) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway_FilterStyle.ProtoReflect.Descriptor instead.
func (*Highway_FilterStyle) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Highway_FilterStyle) GetStyleId() uint32 {
	if x != nil {
		return x.StyleId
	}
	return 0
}

func (x *Highway_FilterStyle) GetStyleName() []byte {
	if x != nil {
		return x.StyleName
	}
	return nil
}

// ImageFilterRequest
type Highway_ImageFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId []byte               `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // "session_id"
	ClientIp  uint32               `protobuf:"varint,2,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`   // "client_ip"
	Uin       uint64               `protobuf:"varint,3,opt,name=uin,proto3" json:"uin,omitempty"`                             // "uin"
	Style     *Highway_FilterStyle `protobuf:"bytes,4,opt,name=style,proto3" json:"style,omitempty"`                          // "style"
	Width     uint32               `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`                         // "width"
	Height    uint32               `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`                       // "height"
	ImageData []byte               `protobuf:"bytes,7,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"` // "image_data"
}

func (x *Highway_ImageFilterRequest) Reset() {
	*x = Highway_ImageFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway_ImageFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway_ImageFilterRequest) ProtoMessage() {}

func (x *Highway_ImageFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway_ImageFilterRequest.ProtoReflect.Descriptor instead.
func (*Highway_ImageFilterRequest) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Highway_ImageFilterRequest) GetSessionId() []byte {
	if x != nil {
		return x.SessionId
	}
	return nil
}

func (x *Highway_ImageFilterRequest) GetClientIp() uint32 {
	if x != nil {
		return x.ClientIp
	}
	return 0
}

func (x *Highway_ImageFilterRequest) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *Highway_ImageFilterRequest) GetStyle() *Highway_FilterStyle {
	if x != nil {
		return x.Style
	}
	return nil
}

func (x *Highway_ImageFilterRequest) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Highway_ImageFilterRequest) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Highway_ImageFilterRequest) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

// ImageFilterResponse
type Highway_ImageFilterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode   int32  `protobuf:"varint,1,opt,name=ret_code,json=retCode,proto3" json:"ret_code,omitempty"`      // "ret_code"
	ImageData []byte `protobuf:"bytes,2,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"` // "image_data"
	CostTime  uint32 `protobuf:"varint,3,opt,name=cost_time,json=costTime,proto3" json:"cost_time,omitempty"`   // "cost_time"
}

func (x *Highway_ImageFilterResponse) Reset() {
	*x = Highway_ImageFilterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway_ImageFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway_ImageFilterResponse) ProtoMessage() {}

func (x *Highway_ImageFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway_ImageFilterResponse.ProtoReflect.Descriptor instead.
func (*Highway_ImageFilterResponse) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Highway_ImageFilterResponse) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *Highway_ImageFilterResponse) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

func (x *Highway_ImageFilterResponse) GetCostTime() uint32 {
	if x != nil {
		return x.CostTime
	}
	return 0
}

// LoginSigHead
type Highway_LoginSigHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginsigType uint32 `protobuf:"varint,1,opt,name=loginsig_type,json=loginsigType,proto3" json:"loginsig_type,omitempty"` // "uint32_loginsig_type"
	Loginsig     []byte `protobuf:"bytes,2,opt,name=loginsig,proto3" json:"loginsig,omitempty"`                              // "bytes_loginsig"
}

func (x *Highway_LoginSigHead) Reset() {
	*x = Highway_LoginSigHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway_LoginSigHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway_LoginSigHead) ProtoMessage() {}

func (x *Highway_LoginSigHead) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway_LoginSigHead.ProtoReflect.Descriptor instead.
func (*Highway_LoginSigHead) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Highway_LoginSigHead) GetLoginsigType() uint32 {
	if x != nil {
		return x.LoginsigType
	}
	return 0
}

func (x *Highway_LoginSigHead) GetLoginsig() []byte {
	if x != nil {
		return x.Loginsig
	}
	return nil
}

// NewServiceTicket
type Highway_NewServiceTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"` // "bytes_signature"
	Ukey      []byte `protobuf:"bytes,2,opt,name=ukey,proto3" json:"ukey,omitempty"`           // "bytes_ukey"
}

func (x *Highway_NewServiceTicket) Reset() {
	*x = Highway_NewServiceTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway_NewServiceTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway_NewServiceTicket) ProtoMessage() {}

func (x *Highway_NewServiceTicket) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway_NewServiceTicket.ProtoReflect.Descriptor instead.
func (*Highway_NewServiceTicket) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0, 8}
}

func (x *Highway_NewServiceTicket) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Highway_NewServiceTicket) GetUkey() []byte {
	if x != nil {
		return x.Ukey
	}
	return nil
}

// PicInfoExt
type Highway_PicInfoExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PicWidth            uint32 `protobuf:"varint,1,opt,name=pic_width,json=picWidth,proto3" json:"pic_width,omitempty"`                                      // "uint32_pic_width"
	PicHeight           uint32 `protobuf:"varint,2,opt,name=pic_height,json=picHeight,proto3" json:"pic_height,omitempty"`                                   // "uint32_pic_height"
	PicFlag             uint32 `protobuf:"varint,3,opt,name=pic_flag,json=picFlag,proto3" json:"pic_flag,omitempty"`                                         // "uint32_pic_flag"
	BusiType            uint32 `protobuf:"varint,4,opt,name=busi_type,json=busiType,proto3" json:"busi_type,omitempty"`                                      // "uint32_busi_type"
	SrcTerm             uint32 `protobuf:"varint,5,opt,name=src_term,json=srcTerm,proto3" json:"src_term,omitempty"`                                         // "uint32_src_term"
	PlatType            uint32 `protobuf:"varint,6,opt,name=plat_type,json=platType,proto3" json:"plat_type,omitempty"`                                      // "uint32_plat_type"
	NetType             uint32 `protobuf:"varint,7,opt,name=net_type,json=netType,proto3" json:"net_type,omitempty"`                                         // "uint32_net_type"
	ImgType             uint32 `protobuf:"varint,8,opt,name=img_type,json=imgType,proto3" json:"img_type,omitempty"`                                         // "uint32_img_type"
	AppPicType          uint32 `protobuf:"varint,9,opt,name=app_pic_type,json=appPicType,proto3" json:"app_pic_type,omitempty"`                              // "uint32_app_pic_type"
	EchoCreatedByServer []byte `protobuf:"bytes,10,opt,name=echo_created_by_server,json=echoCreatedByServer,proto3" json:"echo_created_by_server,omitempty"` // "bytes_echo_created_by_server"
	QqmeetGuildId       uint64 `protobuf:"varint,11,opt,name=qqmeet_guild_id,json=qqmeetGuildId,proto3" json:"qqmeet_guild_id,omitempty"`                    // "uint64_qqmeet_guild_id"
	QqmeetChannelId     uint64 `protobuf:"varint,12,opt,name=qqmeet_channel_id,json=qqmeetChannelId,proto3" json:"qqmeet_channel_id,omitempty"`              // "uint64_qqmeet_channel_id"
}

func (x *Highway_PicInfoExt) Reset() {
	*x = Highway_PicInfoExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway_PicInfoExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway_PicInfoExt) ProtoMessage() {}

func (x *Highway_PicInfoExt) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway_PicInfoExt.ProtoReflect.Descriptor instead.
func (*Highway_PicInfoExt) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0, 9}
}

func (x *Highway_PicInfoExt) GetPicWidth() uint32 {
	if x != nil {
		return x.PicWidth
	}
	return 0
}

func (x *Highway_PicInfoExt) GetPicHeight() uint32 {
	if x != nil {
		return x.PicHeight
	}
	return 0
}

func (x *Highway_PicInfoExt) GetPicFlag() uint32 {
	if x != nil {
		return x.PicFlag
	}
	return 0
}

func (x *Highway_PicInfoExt) GetBusiType() uint32 {
	if x != nil {
		return x.BusiType
	}
	return 0
}

func (x *Highway_PicInfoExt) GetSrcTerm() uint32 {
	if x != nil {
		return x.SrcTerm
	}
	return 0
}

func (x *Highway_PicInfoExt) GetPlatType() uint32 {
	if x != nil {
		return x.PlatType
	}
	return 0
}

func (x *Highway_PicInfoExt) GetNetType() uint32 {
	if x != nil {
		return x.NetType
	}
	return 0
}

func (x *Highway_PicInfoExt) GetImgType() uint32 {
	if x != nil {
		return x.ImgType
	}
	return 0
}

func (x *Highway_PicInfoExt) GetAppPicType() uint32 {
	if x != nil {
		return x.AppPicType
	}
	return 0
}

func (x *Highway_PicInfoExt) GetEchoCreatedByServer() []byte {
	if x != nil {
		return x.EchoCreatedByServer
	}
	return nil
}

func (x *Highway_PicInfoExt) GetQqmeetGuildId() uint64 {
	if x != nil {
		return x.QqmeetGuildId
	}
	return 0
}

func (x *Highway_PicInfoExt) GetQqmeetChannelId() uint64 {
	if x != nil {
		return x.QqmeetChannelId
	}
	return 0
}

// PicRspExtInfo
type Highway_PicRspExtInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skey      []byte `protobuf:"bytes,1,opt,name=skey,proto3" json:"skey,omitempty"`                             // "bytes_skey"
	ClientIp  uint32 `protobuf:"varint,2,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`    // "uint32_client_ip"
	UpOffset  uint64 `protobuf:"varint,3,opt,name=up_offset,json=upOffset,proto3" json:"up_offset,omitempty"`    // "uint64_up_offset"
	BlockSize uint64 `protobuf:"varint,4,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"` // "uint64_block_size"
}

func (x *Highway_PicRspExtInfo) Reset() {
	*x = Highway_PicRspExtInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway_PicRspExtInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway_PicRspExtInfo) ProtoMessage() {}

func (x *Highway_PicRspExtInfo) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway_PicRspExtInfo.ProtoReflect.Descriptor instead.
func (*Highway_PicRspExtInfo) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0, 10}
}

func (x *Highway_PicRspExtInfo) GetSkey() []byte {
	if x != nil {
		return x.Skey
	}
	return nil
}

func (x *Highway_PicRspExtInfo) GetClientIp() uint32 {
	if x != nil {
		return x.ClientIp
	}
	return 0
}

func (x *Highway_PicRspExtInfo) GetUpOffset() uint64 {
	if x != nil {
		return x.UpOffset
	}
	return 0
}

func (x *Highway_PicRspExtInfo) GetBlockSize() uint64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

// QueryHoleRsp
type Highway_QueryHole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result   uint32              `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                     // "uint32_result"
	DataHole []*Highway_DataHole `protobuf:"bytes,2,rep,name=data_hole,json=dataHole,proto3" json:"data_hole,omitempty"`  // "rpt_data_hole"
	CompFlag bool                `protobuf:"varint,3,opt,name=comp_flag,json=compFlag,proto3" json:"comp_flag,omitempty"` // "bool_comp_flag"
}

func (x *Highway_QueryHole) Reset() {
	*x = Highway_QueryHole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway_QueryHole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway_QueryHole) ProtoMessage() {}

func (x *Highway_QueryHole) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway_QueryHole.ProtoReflect.Descriptor instead.
func (*Highway_QueryHole) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0, 11}
}

func (x *Highway_QueryHole) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Highway_QueryHole) GetDataHole() []*Highway_DataHole {
	if x != nil {
		return x.DataHole
	}
	return nil
}

func (x *Highway_QueryHole) GetCompFlag() bool {
	if x != nil {
		return x.CompFlag
	}
	return false
}

// ReqDataHighwayHead
type Highway_RequestHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseHead     *Highway_BaseHead     `protobuf:"bytes,1,opt,name=base_head,json=baseHead,proto3" json:"base_head,omitempty"`               // "msg_basehead"
	SegmentHead  *Highway_SegmentHead  `protobuf:"bytes,2,opt,name=segment_head,json=segmentHead,proto3" json:"segment_head,omitempty"`      // "msg_seghead"
	ExtendInfo   []byte                `protobuf:"bytes,3,opt,name=extend_info,json=extendInfo,proto3" json:"extend_info,omitempty"`         // "bytes_req_extendinfo"
	Timestamp    uint64                `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                            // "uint64_timestamp"
	LoginSigHead *Highway_LoginSigHead `protobuf:"bytes,5,opt,name=login_sig_head,json=loginSigHead,proto3" json:"login_sig_head,omitempty"` // "msg_login_sig_head"
}

func (x *Highway_RequestHead) Reset() {
	*x = Highway_RequestHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway_RequestHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway_RequestHead) ProtoMessage() {}

func (x *Highway_RequestHead) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway_RequestHead.ProtoReflect.Descriptor instead.
func (*Highway_RequestHead) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0, 12}
}

func (x *Highway_RequestHead) GetBaseHead() *Highway_BaseHead {
	if x != nil {
		return x.BaseHead
	}
	return nil
}

func (x *Highway_RequestHead) GetSegmentHead() *Highway_SegmentHead {
	if x != nil {
		return x.SegmentHead
	}
	return nil
}

func (x *Highway_RequestHead) GetExtendInfo() []byte {
	if x != nil {
		return x.ExtendInfo
	}
	return nil
}

func (x *Highway_RequestHead) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Highway_RequestHead) GetLoginSigHead() *Highway_LoginSigHead {
	if x != nil {
		return x.LoginSigHead
	}
	return nil
}

// RspBody
type Highway_ResponseBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryHole *Highway_QueryHole `protobuf:"bytes,1,opt,name=query_hole,json=queryHole,proto3" json:"query_hole,omitempty"` // "msg_query_hole_rsp"
}

func (x *Highway_ResponseBody) Reset() {
	*x = Highway_ResponseBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway_ResponseBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway_ResponseBody) ProtoMessage() {}

func (x *Highway_ResponseBody) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway_ResponseBody.ProtoReflect.Descriptor instead.
func (*Highway_ResponseBody) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0, 13}
}

func (x *Highway_ResponseBody) GetQueryHole() *Highway_QueryHole {
	if x != nil {
		return x.QueryHole
	}
	return nil
}

// RspDataHighwayHead
type Highway_ResponseHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseHead    *Highway_BaseHead    `protobuf:"bytes,1,opt,name=base_head,json=baseHead,proto3" json:"base_head,omitempty"`          // "msg_basehead"
	SegmentHead *Highway_SegmentHead `protobuf:"bytes,2,opt,name=segment_head,json=segmentHead,proto3" json:"segment_head,omitempty"` // "msg_seghead"
	ErrorCode   uint32               `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`      // "uint32_error_code"
	AllowRetry  uint32               `protobuf:"varint,4,opt,name=allow_retry,json=allowRetry,proto3" json:"allow_retry,omitempty"`   // "uint32_allow_retry"
	CacheCost   uint32               `protobuf:"varint,5,opt,name=cache_cost,json=cacheCost,proto3" json:"cache_cost,omitempty"`      // "uint32_cachecost"
	HtCost      uint32               `protobuf:"varint,6,opt,name=ht_cost,json=htCost,proto3" json:"ht_cost,omitempty"`               // "uint32_htcost"
	ExtendInfo  []byte               `protobuf:"bytes,7,opt,name=extend_info,json=extendInfo,proto3" json:"extend_info,omitempty"`    // "bytes_rsp_extendinfo"
	Timestamp   uint64               `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                       // "uint64_timestamp"
	Range       uint64               `protobuf:"varint,9,opt,name=range,proto3" json:"range,omitempty"`                               // "uint64_range"
	IsReset     uint32               `protobuf:"varint,10,opt,name=is_reset,json=isReset,proto3" json:"is_reset,omitempty"`           // "uint32_is_reset"
}

func (x *Highway_ResponseHead) Reset() {
	*x = Highway_ResponseHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway_ResponseHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway_ResponseHead) ProtoMessage() {}

func (x *Highway_ResponseHead) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway_ResponseHead.ProtoReflect.Descriptor instead.
func (*Highway_ResponseHead) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0, 14}
}

func (x *Highway_ResponseHead) GetBaseHead() *Highway_BaseHead {
	if x != nil {
		return x.BaseHead
	}
	return nil
}

func (x *Highway_ResponseHead) GetSegmentHead() *Highway_SegmentHead {
	if x != nil {
		return x.SegmentHead
	}
	return nil
}

func (x *Highway_ResponseHead) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *Highway_ResponseHead) GetAllowRetry() uint32 {
	if x != nil {
		return x.AllowRetry
	}
	return 0
}

func (x *Highway_ResponseHead) GetCacheCost() uint32 {
	if x != nil {
		return x.CacheCost
	}
	return 0
}

func (x *Highway_ResponseHead) GetHtCost() uint32 {
	if x != nil {
		return x.HtCost
	}
	return 0
}

func (x *Highway_ResponseHead) GetExtendInfo() []byte {
	if x != nil {
		return x.ExtendInfo
	}
	return nil
}

func (x *Highway_ResponseHead) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Highway_ResponseHead) GetRange() uint64 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *Highway_ResponseHead) GetIsReset() uint32 {
	if x != nil {
		return x.IsReset
	}
	return 0
}

// SegHead
type Highway_SegmentHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId     uint32 `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`                // "uint32_serviceid"
	FileSize      uint64 `protobuf:"varint,2,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`                   // "uint64_filesize"
	DataOffset    uint64 `protobuf:"varint,3,opt,name=data_offset,json=dataOffset,proto3" json:"data_offset,omitempty"`             // "uint64_dataoffset"
	DataLength    uint32 `protobuf:"varint,4,opt,name=data_length,json=dataLength,proto3" json:"data_length,omitempty"`             // "uint32_datalength"
	ReturnCode    uint32 `protobuf:"varint,5,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"`             // "uint32_rtcode"
	ServiceTicket []byte `protobuf:"bytes,6,opt,name=service_ticket,json=serviceTicket,proto3" json:"service_ticket,omitempty"`     // "bytes_serviceticket"
	Flag          uint32 `protobuf:"varint,7,opt,name=flag,proto3" json:"flag,omitempty"`                                           // "uint32_flag"
	Md5           []byte `protobuf:"bytes,8,opt,name=md5,proto3" json:"md5,omitempty"`                                              // "bytes_md5"
	FileMd5       []byte `protobuf:"bytes,9,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                       // "bytes_file_md5"
	CacheAddress  uint32 `protobuf:"varint,10,opt,name=cache_address,json=cacheAddress,proto3" json:"cache_address,omitempty"`      // "uint32_cache_addr"
	QueryTimes    uint32 `protobuf:"varint,11,opt,name=query_times,json=queryTimes,proto3" json:"query_times,omitempty"`            // "uint32_query_times"
	UpdateCacheIp uint32 `protobuf:"varint,12,opt,name=update_cache_ip,json=updateCacheIp,proto3" json:"update_cache_ip,omitempty"` // "uint32_update_cacheip"
	CachePort     uint32 `protobuf:"varint,13,opt,name=cache_port,json=cachePort,proto3" json:"cache_port,omitempty"`               // "uint32_cache_port"
}

func (x *Highway_SegmentHead) Reset() {
	*x = Highway_SegmentHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_highway_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Highway_SegmentHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Highway_SegmentHead) ProtoMessage() {}

func (x *Highway_SegmentHead) ProtoReflect() protoreflect.Message {
	mi := &file_highway_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Highway_SegmentHead.ProtoReflect.Descriptor instead.
func (*Highway_SegmentHead) Descriptor() ([]byte, []int) {
	return file_highway_proto_rawDescGZIP(), []int{0, 15}
}

func (x *Highway_SegmentHead) GetServiceId() uint32 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *Highway_SegmentHead) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Highway_SegmentHead) GetDataOffset() uint64 {
	if x != nil {
		return x.DataOffset
	}
	return 0
}

func (x *Highway_SegmentHead) GetDataLength() uint32 {
	if x != nil {
		return x.DataLength
	}
	return 0
}

func (x *Highway_SegmentHead) GetReturnCode() uint32 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *Highway_SegmentHead) GetServiceTicket() []byte {
	if x != nil {
		return x.ServiceTicket
	}
	return nil
}

func (x *Highway_SegmentHead) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *Highway_SegmentHead) GetMd5() []byte {
	if x != nil {
		return x.Md5
	}
	return nil
}

func (x *Highway_SegmentHead) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *Highway_SegmentHead) GetCacheAddress() uint32 {
	if x != nil {
		return x.CacheAddress
	}
	return 0
}

func (x *Highway_SegmentHead) GetQueryTimes() uint32 {
	if x != nil {
		return x.QueryTimes
	}
	return 0
}

func (x *Highway_SegmentHead) GetUpdateCacheIp() uint32 {
	if x != nil {
		return x.UpdateCacheIp
	}
	return 0
}

func (x *Highway_SegmentHead) GetCachePort() uint32 {
	if x != nil {
		return x.CachePort
	}
	return 0
}

var File_highway_proto protoreflect.FileDescriptor

var file_highway_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x68, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xe3, 0x16, 0x0a, 0x07, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x1a, 0x77, 0x0a, 0x13, 0x43,
	0x32, 0x43, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x6e, 0x66, 0x6f, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x12, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61,
	0x79, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x10, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xaf, 0x02, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74,
	0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x72, 0x65, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x65, 0x6e, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x1a, 0x32, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x48, 0x6f,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x1a, 0x82, 0x01, 0x0a, 0x10, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67,
	0x12, 0x4d, 0x0a, 0x14, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x12, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x47, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x79,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xdb, 0x01, 0x0a, 0x12, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x2a, 0x0a,
	0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x48,
	0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x6c, 0x0a, 0x13, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x1a, 0x4f, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x69, 0x67,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x73, 0x69, 0x67,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x73, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x73, 0x69, 0x67, 0x1a, 0x44, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x6b, 0x65, 0x79, 0x1a, 0x99, 0x03, 0x0a, 0x0a,
	0x50, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69,
	0x63, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x69, 0x63, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x63, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x69, 0x63,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x5f, 0x66, 0x6c,
	0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x69, 0x63, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x73, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x73, 0x72, 0x63, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c,
	0x61, 0x70, 0x70, 0x5f, 0x70, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x50, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33,
	0x0a, 0x16, 0x65, 0x63, 0x68, 0x6f, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13,
	0x65, 0x63, 0x68, 0x6f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x71, 0x71, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x71, 0x71,
	0x6d, 0x65, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x71,
	0x71, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x71, 0x71, 0x6d, 0x65, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x7c, 0x0a, 0x0d, 0x50, 0x69, 0x63, 0x52, 0x73,
	0x70, 0x45, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x75, 0x70,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x53, 0x69, 0x7a, 0x65, 0x1a, 0x70, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x68, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x6f, 0x6c, 0x65,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x48, 0x6f, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63,
	0x6f, 0x6d, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x1a, 0xf2, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x2e, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x48, 0x69, 0x67,
	0x68, 0x77, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x08, 0x62,
	0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x52, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x3b, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x69, 0x67, 0x5f, 0x68, 0x65, 0x61,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61,
	0x79, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x69, 0x67, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0c,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x69, 0x67, 0x48, 0x65, 0x61, 0x64, 0x1a, 0x41, 0x0a, 0x0c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x31, 0x0a, 0x0a,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x68, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x48, 0x6f, 0x6c, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x48, 0x6f, 0x6c, 0x65, 0x1a,
	0xdf, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x2e, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x37, 0x0a, 0x0c, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79,
	0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x74, 0x5f, 0x63,
	0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x74, 0x43, 0x6f, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x73, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x1a, 0xa1, 0x03, 0x0a, 0x0b, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x64, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x63, 0x61, 0x63, 0x68, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x69,
	0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x49, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x50, 0x6f, 0x72, 0x74, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_highway_proto_rawDescOnce sync.Once
	file_highway_proto_rawDescData = file_highway_proto_rawDesc
)

func file_highway_proto_rawDescGZIP() []byte {
	file_highway_proto_rawDescOnce.Do(func() {
		file_highway_proto_rawDescData = protoimpl.X.CompressGZIP(file_highway_proto_rawDescData)
	})
	return file_highway_proto_rawDescData
}

var file_highway_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_highway_proto_goTypes = []interface{}{
	(*Highway)(nil),                     // 0: Highway
	(*Highway_C2CCommonExtendinfo)(nil), // 1: Highway.C2CCommonExtendinfo
	(*Highway_BaseHead)(nil),            // 2: Highway.BaseHead
	(*Highway_DataHole)(nil),            // 3: Highway.DataHole
	(*Highway_FilterExtendInfo)(nil),    // 4: Highway.FilterExtendInfo
	(*Highway_FilterStyle)(nil),         // 5: Highway.FilterStyle
	(*Highway_ImageFilterRequest)(nil),  // 6: Highway.ImageFilterRequest
	(*Highway_ImageFilterResponse)(nil), // 7: Highway.ImageFilterResponse
	(*Highway_LoginSigHead)(nil),        // 8: Highway.LoginSigHead
	(*Highway_NewServiceTicket)(nil),    // 9: Highway.NewServiceTicket
	(*Highway_PicInfoExt)(nil),          // 10: Highway.PicInfoExt
	(*Highway_PicRspExtInfo)(nil),       // 11: Highway.PicRspExtInfo
	(*Highway_QueryHole)(nil),           // 12: Highway.QueryHole
	(*Highway_RequestHead)(nil),         // 13: Highway.RequestHead
	(*Highway_ResponseBody)(nil),        // 14: Highway.ResponseBody
	(*Highway_ResponseHead)(nil),        // 15: Highway.ResponseHead
	(*Highway_SegmentHead)(nil),         // 16: Highway.SegmentHead
}
var file_highway_proto_depIdxs = []int32{
	4,  // 0: Highway.C2CCommonExtendinfo.filter_extend_info:type_name -> Highway.FilterExtendInfo
	6,  // 1: Highway.FilterExtendInfo.image_filter_request:type_name -> Highway.ImageFilterRequest
	5,  // 2: Highway.ImageFilterRequest.style:type_name -> Highway.FilterStyle
	3,  // 3: Highway.QueryHole.data_hole:type_name -> Highway.DataHole
	2,  // 4: Highway.RequestHead.base_head:type_name -> Highway.BaseHead
	16, // 5: Highway.RequestHead.segment_head:type_name -> Highway.SegmentHead
	8,  // 6: Highway.RequestHead.login_sig_head:type_name -> Highway.LoginSigHead
	12, // 7: Highway.ResponseBody.query_hole:type_name -> Highway.QueryHole
	2,  // 8: Highway.ResponseHead.base_head:type_name -> Highway.BaseHead
	16, // 9: Highway.ResponseHead.segment_head:type_name -> Highway.SegmentHead
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_highway_proto_init() }
func file_highway_proto_init() {
	if File_highway_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_highway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway_C2CCommonExtendinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway_BaseHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway_DataHole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway_FilterExtendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway_FilterStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highway_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway_ImageFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highway_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway_ImageFilterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highway_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway_LoginSigHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highway_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway_NewServiceTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highway_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway_PicInfoExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highway_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway_PicRspExtInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highway_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway_QueryHole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highway_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway_RequestHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highway_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway_ResponseBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highway_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway_ResponseHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_highway_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Highway_SegmentHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_highway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_highway_proto_goTypes,
		DependencyIndexes: file_highway_proto_depIdxs,
		MessageInfos:      file_highway_proto_msgTypes,
	}.Build()
	File_highway_proto = out.File
	file_highway_proto_rawDesc = nil
	file_highway_proto_goTypes = nil
	file_highway_proto_depIdxs = nil
}
