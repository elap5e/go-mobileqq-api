// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: cmd.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// cmd0x388
type Cmd0388 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cmd0388) Reset() {
	*x = Cmd0388{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388) ProtoMessage() {}

func (x *Cmd0388) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388.ProtoReflect.Descriptor instead.
func (*Cmd0388) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0}
}

// DelImgReq
type Cmd0388_DeleteImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcUin          uint64 `protobuf:"varint,1,opt,name=src_uin,json=srcUin,proto3" json:"src_uin,omitempty"`                              // "uint64_src_uin"
	DstUin          uint64 `protobuf:"varint,2,opt,name=dst_uin,json=dstUin,proto3" json:"dst_uin,omitempty"`                              // "uint64_dst_uin"
	ReqTerm         uint32 `protobuf:"varint,3,opt,name=req_term,json=reqTerm,proto3" json:"req_term,omitempty"`                           // "uint32_req_term"
	ReqPlatformType uint32 `protobuf:"varint,4,opt,name=req_platform_type,json=reqPlatformType,proto3" json:"req_platform_type,omitempty"` // "uint32_req_platform_type"
	BuType          uint32 `protobuf:"varint,5,opt,name=bu_type,json=buType,proto3" json:"bu_type,omitempty"`                              // "uint32_bu_type"
	BuildVer        []byte `protobuf:"bytes,6,opt,name=build_ver,json=buildVer,proto3" json:"build_ver,omitempty"`                         // "bytes_build_ver"
	FileResid       []byte `protobuf:"bytes,7,opt,name=file_resid,json=fileResid,proto3" json:"file_resid,omitempty"`                      // "bytes_file_resid"
	PicWidth        uint32 `protobuf:"varint,8,opt,name=pic_width,json=picWidth,proto3" json:"pic_width,omitempty"`                        // "uint32_pic_width"
	PicHeight       uint32 `protobuf:"varint,9,opt,name=pic_height,json=picHeight,proto3" json:"pic_height,omitempty"`                     // "uint32_pic_height"
}

func (x *Cmd0388_DeleteImageRequest) Reset() {
	*x = Cmd0388_DeleteImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_DeleteImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_DeleteImageRequest) ProtoMessage() {}

func (x *Cmd0388_DeleteImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_DeleteImageRequest.ProtoReflect.Descriptor instead.
func (*Cmd0388_DeleteImageRequest) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Cmd0388_DeleteImageRequest) GetSrcUin() uint64 {
	if x != nil {
		return x.SrcUin
	}
	return 0
}

func (x *Cmd0388_DeleteImageRequest) GetDstUin() uint64 {
	if x != nil {
		return x.DstUin
	}
	return 0
}

func (x *Cmd0388_DeleteImageRequest) GetReqTerm() uint32 {
	if x != nil {
		return x.ReqTerm
	}
	return 0
}

func (x *Cmd0388_DeleteImageRequest) GetReqPlatformType() uint32 {
	if x != nil {
		return x.ReqPlatformType
	}
	return 0
}

func (x *Cmd0388_DeleteImageRequest) GetBuType() uint32 {
	if x != nil {
		return x.BuType
	}
	return 0
}

func (x *Cmd0388_DeleteImageRequest) GetBuildVer() []byte {
	if x != nil {
		return x.BuildVer
	}
	return nil
}

func (x *Cmd0388_DeleteImageRequest) GetFileResid() []byte {
	if x != nil {
		return x.FileResid
	}
	return nil
}

func (x *Cmd0388_DeleteImageRequest) GetPicWidth() uint32 {
	if x != nil {
		return x.PicWidth
	}
	return 0
}

func (x *Cmd0388_DeleteImageRequest) GetPicHeight() uint32 {
	if x != nil {
		return x.PicHeight
	}
	return 0
}

// DelImgRsp
type Cmd0388_DeleteImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result      uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                             // "uint32_result"
	FailMessage []byte `protobuf:"bytes,2,opt,name=fail_message,json=failMessage,proto3" json:"fail_message,omitempty"` // "bytes_fail_msg"
	FileResid   []byte `protobuf:"bytes,3,opt,name=file_resid,json=fileResid,proto3" json:"file_resid,omitempty"`       // "bytes_file_resid"
}

func (x *Cmd0388_DeleteImageResponse) Reset() {
	*x = Cmd0388_DeleteImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_DeleteImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_DeleteImageResponse) ProtoMessage() {}

func (x *Cmd0388_DeleteImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_DeleteImageResponse.ProtoReflect.Descriptor instead.
func (*Cmd0388_DeleteImageResponse) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Cmd0388_DeleteImageResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Cmd0388_DeleteImageResponse) GetFailMessage() []byte {
	if x != nil {
		return x.FailMessage
	}
	return nil
}

func (x *Cmd0388_DeleteImageResponse) GetFileResid() []byte {
	if x != nil {
		return x.FileResid
	}
	return nil
}

// ExpRoamExtendInfo
type Cmd0388_ExpRoamExtendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resid []byte `protobuf:"bytes,1,opt,name=resid,proto3" json:"resid,omitempty"` // "bytes_resid"
}

func (x *Cmd0388_ExpRoamExtendInfo) Reset() {
	*x = Cmd0388_ExpRoamExtendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_ExpRoamExtendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_ExpRoamExtendInfo) ProtoMessage() {}

func (x *Cmd0388_ExpRoamExtendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_ExpRoamExtendInfo.ProtoReflect.Descriptor instead.
func (*Cmd0388_ExpRoamExtendInfo) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Cmd0388_ExpRoamExtendInfo) GetResid() []byte {
	if x != nil {
		return x.Resid
	}
	return nil
}

// ExpRoamPicInfo
type Cmd0388_ExpRoamPicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopFlag uint32 `protobuf:"varint,1,opt,name=shop_flag,json=shopFlag,proto3" json:"shop_flag,omitempty"` // "uint32_shop_flag"
	PkgId    uint32 `protobuf:"varint,2,opt,name=pkg_id,json=pkgId,proto3" json:"pkg_id,omitempty"`          // "uint32_pkg_id"
	PicId    []byte `protobuf:"bytes,3,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`           // "bytes_pic_id"
}

func (x *Cmd0388_ExpRoamPicInfo) Reset() {
	*x = Cmd0388_ExpRoamPicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_ExpRoamPicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_ExpRoamPicInfo) ProtoMessage() {}

func (x *Cmd0388_ExpRoamPicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_ExpRoamPicInfo.ProtoReflect.Descriptor instead.
func (*Cmd0388_ExpRoamPicInfo) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Cmd0388_ExpRoamPicInfo) GetShopFlag() uint32 {
	if x != nil {
		return x.ShopFlag
	}
	return 0
}

func (x *Cmd0388_ExpRoamPicInfo) GetPkgId() uint32 {
	if x != nil {
		return x.PkgId
	}
	return 0
}

func (x *Cmd0388_ExpRoamPicInfo) GetPicId() []byte {
	if x != nil {
		return x.PicId
	}
	return nil
}

// ExtensionCommPicTryUp
type Cmd0388_ExtensionCommPicTryUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Extinfo []string `protobuf:"bytes,1,rep,name=extinfo,proto3" json:"extinfo,omitempty"` // "rpt_bytes_extinfo"
}

func (x *Cmd0388_ExtensionCommPicTryUp) Reset() {
	*x = Cmd0388_ExtensionCommPicTryUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_ExtensionCommPicTryUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_ExtensionCommPicTryUp) ProtoMessage() {}

func (x *Cmd0388_ExtensionCommPicTryUp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_ExtensionCommPicTryUp.ProtoReflect.Descriptor instead.
func (*Cmd0388_ExtensionCommPicTryUp) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Cmd0388_ExtensionCommPicTryUp) GetExtinfo() []string {
	if x != nil {
		return x.Extinfo
	}
	return nil
}

// ExtensionExpRoamTryUp
type Cmd0388_ExtensionExpRoamTryUp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgExproamPicInfo []*Cmd0388_ExpRoamPicInfo `protobuf:"bytes,1,rep,name=msg_exproam_pic_info,json=msgExproamPicInfo,proto3" json:"msg_exproam_pic_info,omitempty"` // "rpt_msg_exproam_pic_info"
}

func (x *Cmd0388_ExtensionExpRoamTryUp) Reset() {
	*x = Cmd0388_ExtensionExpRoamTryUp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_ExtensionExpRoamTryUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_ExtensionExpRoamTryUp) ProtoMessage() {}

func (x *Cmd0388_ExtensionExpRoamTryUp) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_ExtensionExpRoamTryUp.ProtoReflect.Descriptor instead.
func (*Cmd0388_ExtensionExpRoamTryUp) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Cmd0388_ExtensionExpRoamTryUp) GetMsgExproamPicInfo() []*Cmd0388_ExpRoamPicInfo {
	if x != nil {
		return x.MsgExproamPicInfo
	}
	return nil
}

// GetImgUrlReq
type Cmd0388_GetImageURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode              uint64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`                                           // "uint64_group_code"
	DstUin                 uint64 `protobuf:"varint,2,opt,name=dst_uin,json=dstUin,proto3" json:"dst_uin,omitempty"`                                                    // "uint64_dst_uin"
	FileId0                uint64 `protobuf:"varint,3,opt,name=file_id0,json=fileId0,proto3" json:"file_id0,omitempty"`                                                 // "uint64_fileid"
	FileMd5                []byte `protobuf:"bytes,4,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                                                  // "bytes_file_md5"
	UrlFlag                uint32 `protobuf:"varint,5,opt,name=url_flag,json=urlFlag,proto3" json:"url_flag,omitempty"`                                                 // "uint32_url_flag"
	UrlType                uint32 `protobuf:"varint,6,opt,name=url_type,json=urlType,proto3" json:"url_type,omitempty"`                                                 // "uint32_url_type"
	ReqTerm                uint32 `protobuf:"varint,7,opt,name=req_term,json=reqTerm,proto3" json:"req_term,omitempty"`                                                 // "uint32_req_term"
	ReqPlatformType        uint32 `protobuf:"varint,8,opt,name=req_platform_type,json=reqPlatformType,proto3" json:"req_platform_type,omitempty"`                       // "uint32_req_platform_type"
	InnerIp                uint32 `protobuf:"varint,9,opt,name=inner_ip,json=innerIp,proto3" json:"inner_ip,omitempty"`                                                 // "uint32_inner_ip"
	BuType                 uint32 `protobuf:"varint,10,opt,name=bu_type,json=buType,proto3" json:"bu_type,omitempty"`                                                   // "uint32_bu_type"
	BuildVersion           []byte `protobuf:"bytes,11,opt,name=build_version,json=buildVersion,proto3" json:"build_version,omitempty"`                                  // "bytes_build_ver"
	FileId                 uint64 `protobuf:"varint,12,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`                                                   // "uint64_file_id"
	FileSize               uint64 `protobuf:"varint,13,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`                                             // "uint64_file_size"
	OriginalPicture        uint32 `protobuf:"varint,14,opt,name=original_picture,json=originalPicture,proto3" json:"original_picture,omitempty"`                        // "uint32_original_pic"
	RetryRequest           uint32 `protobuf:"varint,15,opt,name=retry_request,json=retryRequest,proto3" json:"retry_request,omitempty"`                                 // "uint32_retry_req"
	FileHeight             uint32 `protobuf:"varint,16,opt,name=file_height,json=fileHeight,proto3" json:"file_height,omitempty"`                                       // "uint32_file_height"
	FileWidth              uint32 `protobuf:"varint,17,opt,name=file_width,json=fileWidth,proto3" json:"file_width,omitempty"`                                          // "uint32_file_width"
	PictureType            uint32 `protobuf:"varint,18,opt,name=picture_type,json=pictureType,proto3" json:"picture_type,omitempty"`                                    // "uint32_pic_type"
	PictureUploadTimestamp uint32 `protobuf:"varint,19,opt,name=picture_upload_timestamp,json=pictureUploadTimestamp,proto3" json:"picture_upload_timestamp,omitempty"` // "uint32_pic_up_timestamp"
	ReqTransferType        uint32 `protobuf:"varint,20,opt,name=req_transfer_type,json=reqTransferType,proto3" json:"req_transfer_type,omitempty"`                      // "uint32_req_transfer_type"
	QqmeetGuildId          uint64 `protobuf:"varint,21,opt,name=qqmeet_guild_id,json=qqmeetGuildId,proto3" json:"qqmeet_guild_id,omitempty"`                            // "uint64_qqmeet_guild_id"
	QqmeetChannelId        uint64 `protobuf:"varint,22,opt,name=qqmeet_channel_id,json=qqmeetChannelId,proto3" json:"qqmeet_channel_id,omitempty"`                      // "uint64_qqmeet_channel_id"
	DownloadIndex          []byte `protobuf:"bytes,23,opt,name=download_index,json=downloadIndex,proto3" json:"download_index,omitempty"`                               // "bytes_download_index"
}

func (x *Cmd0388_GetImageURLRequest) Reset() {
	*x = Cmd0388_GetImageURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_GetImageURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_GetImageURLRequest) ProtoMessage() {}

func (x *Cmd0388_GetImageURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_GetImageURLRequest.ProtoReflect.Descriptor instead.
func (*Cmd0388_GetImageURLRequest) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Cmd0388_GetImageURLRequest) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetDstUin() uint64 {
	if x != nil {
		return x.DstUin
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetFileId0() uint64 {
	if x != nil {
		return x.FileId0
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *Cmd0388_GetImageURLRequest) GetUrlFlag() uint32 {
	if x != nil {
		return x.UrlFlag
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetUrlType() uint32 {
	if x != nil {
		return x.UrlType
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetReqTerm() uint32 {
	if x != nil {
		return x.ReqTerm
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetReqPlatformType() uint32 {
	if x != nil {
		return x.ReqPlatformType
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetInnerIp() uint32 {
	if x != nil {
		return x.InnerIp
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetBuType() uint32 {
	if x != nil {
		return x.BuType
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetBuildVersion() []byte {
	if x != nil {
		return x.BuildVersion
	}
	return nil
}

func (x *Cmd0388_GetImageURLRequest) GetFileId() uint64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetOriginalPicture() uint32 {
	if x != nil {
		return x.OriginalPicture
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetRetryRequest() uint32 {
	if x != nil {
		return x.RetryRequest
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetFileHeight() uint32 {
	if x != nil {
		return x.FileHeight
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetFileWidth() uint32 {
	if x != nil {
		return x.FileWidth
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetPictureType() uint32 {
	if x != nil {
		return x.PictureType
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetPictureUploadTimestamp() uint32 {
	if x != nil {
		return x.PictureUploadTimestamp
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetReqTransferType() uint32 {
	if x != nil {
		return x.ReqTransferType
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetQqmeetGuildId() uint64 {
	if x != nil {
		return x.QqmeetGuildId
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetQqmeetChannelId() uint64 {
	if x != nil {
		return x.QqmeetChannelId
	}
	return 0
}

func (x *Cmd0388_GetImageURLRequest) GetDownloadIndex() []byte {
	if x != nil {
		return x.DownloadIndex
	}
	return nil
}

// GetImgUrlRsp
type Cmd0388_GetImageURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId0          uint64              `protobuf:"varint,1,opt,name=file_id0,json=fileId0,proto3" json:"file_id0,omitempty"`                                // "uint64_fileid"
	FileMd5          []byte              `protobuf:"bytes,2,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                                 // "bytes_file_md5"
	Result           uint32              `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`                                                 // "uint32_result"
	FailMessage      []byte              `protobuf:"bytes,4,opt,name=fail_message,json=failMessage,proto3" json:"fail_message,omitempty"`                     // "bytes_fail_msg"
	ImageInfo        *Cmd0388_ImageInfo  `protobuf:"bytes,5,opt,name=image_info,json=imageInfo,proto3" json:"image_info,omitempty"`                           // "msg_img_info"
	ThumbDownUrl     []string            `protobuf:"bytes,6,rep,name=thumb_down_url,json=thumbDownUrl,proto3" json:"thumb_down_url,omitempty"`                // "rpt_bytes_thumb_down_url"
	OriginalDownUrl  []string            `protobuf:"bytes,7,rep,name=original_down_url,json=originalDownUrl,proto3" json:"original_down_url,omitempty"`       // "rpt_bytes_original_down_url"
	BigDownUrl       []string            `protobuf:"bytes,8,rep,name=big_down_url,json=bigDownUrl,proto3" json:"big_down_url,omitempty"`                      // "rpt_bytes_big_down_url"
	DownIp           []uint32            `protobuf:"varint,9,rep,packed,name=down_ip,json=downIp,proto3" json:"down_ip,omitempty"`                            // "rpt_uint32_down_ip"
	DownPort         []uint32            `protobuf:"varint,10,rep,packed,name=down_port,json=downPort,proto3" json:"down_port,omitempty"`                     // "rpt_uint32_down_port"
	DownDomain       []byte              `protobuf:"bytes,11,opt,name=down_domain,json=downDomain,proto3" json:"down_domain,omitempty"`                       // "bytes_down_domain"
	ThumbDownPara    []byte              `protobuf:"bytes,12,opt,name=thumb_down_para,json=thumbDownPara,proto3" json:"thumb_down_para,omitempty"`            // "bytes_thumb_down_para"
	OriginalDownPara []byte              `protobuf:"bytes,13,opt,name=original_down_para,json=originalDownPara,proto3" json:"original_down_para,omitempty"`   // "bytes_original_down_para"
	BigDownPara      []byte              `protobuf:"bytes,14,opt,name=big_down_para,json=bigDownPara,proto3" json:"big_down_para,omitempty"`                  // "bytes_big_down_para"
	FileId           uint64              `protobuf:"varint,15,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`                                  // "uint64_file_id"
	AutoDownType     uint32              `protobuf:"varint,16,opt,name=auto_down_type,json=autoDownType,proto3" json:"auto_down_type,omitempty"`              // "uint32_auto_down_type"
	OrderDownType    []uint32            `protobuf:"varint,17,rep,packed,name=order_down_type,json=orderDownType,proto3" json:"order_down_type,omitempty"`    // "rpt_uint32_order_down_type"
	BigThumbDownPara []byte              `protobuf:"bytes,19,opt,name=big_thumb_down_para,json=bigThumbDownPara,proto3" json:"big_thumb_down_para,omitempty"` // "bytes_big_thumb_down_para"
	HttpsUrlFlag     uint32              `protobuf:"varint,20,opt,name=https_url_flag,json=httpsUrlFlag,proto3" json:"https_url_flag,omitempty"`              // "uint32_https_url_flag"
	MsgDownIp6       []*Cmd0388_IPv6Info `protobuf:"bytes,26,rep,name=msg_down_ip6,json=msgDownIp6,proto3" json:"msg_down_ip6,omitempty"`                     // "rpt_msg_down_ip6"
	ClientIp6        []byte              `protobuf:"bytes,27,opt,name=client_ip6,json=clientIp6,proto3" json:"client_ip6,omitempty"`                          // "bytes_client_ip6"
}

func (x *Cmd0388_GetImageURLResponse) Reset() {
	*x = Cmd0388_GetImageURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_GetImageURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_GetImageURLResponse) ProtoMessage() {}

func (x *Cmd0388_GetImageURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_GetImageURLResponse.ProtoReflect.Descriptor instead.
func (*Cmd0388_GetImageURLResponse) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Cmd0388_GetImageURLResponse) GetFileId0() uint64 {
	if x != nil {
		return x.FileId0
	}
	return 0
}

func (x *Cmd0388_GetImageURLResponse) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *Cmd0388_GetImageURLResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Cmd0388_GetImageURLResponse) GetFailMessage() []byte {
	if x != nil {
		return x.FailMessage
	}
	return nil
}

func (x *Cmd0388_GetImageURLResponse) GetImageInfo() *Cmd0388_ImageInfo {
	if x != nil {
		return x.ImageInfo
	}
	return nil
}

func (x *Cmd0388_GetImageURLResponse) GetThumbDownUrl() []string {
	if x != nil {
		return x.ThumbDownUrl
	}
	return nil
}

func (x *Cmd0388_GetImageURLResponse) GetOriginalDownUrl() []string {
	if x != nil {
		return x.OriginalDownUrl
	}
	return nil
}

func (x *Cmd0388_GetImageURLResponse) GetBigDownUrl() []string {
	if x != nil {
		return x.BigDownUrl
	}
	return nil
}

func (x *Cmd0388_GetImageURLResponse) GetDownIp() []uint32 {
	if x != nil {
		return x.DownIp
	}
	return nil
}

func (x *Cmd0388_GetImageURLResponse) GetDownPort() []uint32 {
	if x != nil {
		return x.DownPort
	}
	return nil
}

func (x *Cmd0388_GetImageURLResponse) GetDownDomain() []byte {
	if x != nil {
		return x.DownDomain
	}
	return nil
}

func (x *Cmd0388_GetImageURLResponse) GetThumbDownPara() []byte {
	if x != nil {
		return x.ThumbDownPara
	}
	return nil
}

func (x *Cmd0388_GetImageURLResponse) GetOriginalDownPara() []byte {
	if x != nil {
		return x.OriginalDownPara
	}
	return nil
}

func (x *Cmd0388_GetImageURLResponse) GetBigDownPara() []byte {
	if x != nil {
		return x.BigDownPara
	}
	return nil
}

func (x *Cmd0388_GetImageURLResponse) GetFileId() uint64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *Cmd0388_GetImageURLResponse) GetAutoDownType() uint32 {
	if x != nil {
		return x.AutoDownType
	}
	return 0
}

func (x *Cmd0388_GetImageURLResponse) GetOrderDownType() []uint32 {
	if x != nil {
		return x.OrderDownType
	}
	return nil
}

func (x *Cmd0388_GetImageURLResponse) GetBigThumbDownPara() []byte {
	if x != nil {
		return x.BigThumbDownPara
	}
	return nil
}

func (x *Cmd0388_GetImageURLResponse) GetHttpsUrlFlag() uint32 {
	if x != nil {
		return x.HttpsUrlFlag
	}
	return 0
}

func (x *Cmd0388_GetImageURLResponse) GetMsgDownIp6() []*Cmd0388_IPv6Info {
	if x != nil {
		return x.MsgDownIp6
	}
	return nil
}

func (x *Cmd0388_GetImageURLResponse) GetClientIp6() []byte {
	if x != nil {
		return x.ClientIp6
	}
	return nil
}

// GetPttUrlReq
type Cmd0388_GetPTTURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode       uint64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`                      // "uint64_group_code"
	DstUin          uint64 `protobuf:"varint,2,opt,name=dst_uin,json=dstUin,proto3" json:"dst_uin,omitempty"`                               // "uint64_dst_uin"
	FileId0         uint64 `protobuf:"varint,3,opt,name=file_id0,json=fileId0,proto3" json:"file_id0,omitempty"`                            // "uint64_fileid"
	FileMd5         []byte `protobuf:"bytes,4,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                             // "bytes_file_md5"
	ReqTerm         uint32 `protobuf:"varint,5,opt,name=req_term,json=reqTerm,proto3" json:"req_term,omitempty"`                            // "uint32_req_term"
	ReqPlatformType uint32 `protobuf:"varint,6,opt,name=req_platform_type,json=reqPlatformType,proto3" json:"req_platform_type,omitempty"`  // "uint32_req_platform_type"
	InnerIp         uint32 `protobuf:"varint,7,opt,name=inner_ip,json=innerIp,proto3" json:"inner_ip,omitempty"`                            // "uint32_inner_ip"
	BuType          uint32 `protobuf:"varint,8,opt,name=bu_type,json=buType,proto3" json:"bu_type,omitempty"`                               // "uint32_bu_type"
	BuildVer        []byte `protobuf:"bytes,9,opt,name=build_ver,json=buildVer,proto3" json:"build_ver,omitempty"`                          // "bytes_build_ver"
	FileId          uint64 `protobuf:"varint,10,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`                              // "uint64_file_id"
	FileKey         []byte `protobuf:"bytes,11,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`                            // "bytes_file_key"
	Codec           uint32 `protobuf:"varint,12,opt,name=codec,proto3" json:"codec,omitempty"`                                              // "uint32_codec"
	BuId            uint32 `protobuf:"varint,13,opt,name=bu_id,json=buId,proto3" json:"bu_id,omitempty"`                                    // "uint32_bu_id"
	ReqTransferType uint32 `protobuf:"varint,14,opt,name=req_transfer_type,json=reqTransferType,proto3" json:"req_transfer_type,omitempty"` // "uint32_req_transfer_type"
	IsAuto          uint32 `protobuf:"varint,15,opt,name=is_auto,json=isAuto,proto3" json:"is_auto,omitempty"`                              // "uint32_is_auto"
}

func (x *Cmd0388_GetPTTURLRequest) Reset() {
	*x = Cmd0388_GetPTTURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_GetPTTURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_GetPTTURLRequest) ProtoMessage() {}

func (x *Cmd0388_GetPTTURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_GetPTTURLRequest.ProtoReflect.Descriptor instead.
func (*Cmd0388_GetPTTURLRequest) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 8}
}

func (x *Cmd0388_GetPTTURLRequest) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *Cmd0388_GetPTTURLRequest) GetDstUin() uint64 {
	if x != nil {
		return x.DstUin
	}
	return 0
}

func (x *Cmd0388_GetPTTURLRequest) GetFileId0() uint64 {
	if x != nil {
		return x.FileId0
	}
	return 0
}

func (x *Cmd0388_GetPTTURLRequest) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *Cmd0388_GetPTTURLRequest) GetReqTerm() uint32 {
	if x != nil {
		return x.ReqTerm
	}
	return 0
}

func (x *Cmd0388_GetPTTURLRequest) GetReqPlatformType() uint32 {
	if x != nil {
		return x.ReqPlatformType
	}
	return 0
}

func (x *Cmd0388_GetPTTURLRequest) GetInnerIp() uint32 {
	if x != nil {
		return x.InnerIp
	}
	return 0
}

func (x *Cmd0388_GetPTTURLRequest) GetBuType() uint32 {
	if x != nil {
		return x.BuType
	}
	return 0
}

func (x *Cmd0388_GetPTTURLRequest) GetBuildVer() []byte {
	if x != nil {
		return x.BuildVer
	}
	return nil
}

func (x *Cmd0388_GetPTTURLRequest) GetFileId() uint64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *Cmd0388_GetPTTURLRequest) GetFileKey() []byte {
	if x != nil {
		return x.FileKey
	}
	return nil
}

func (x *Cmd0388_GetPTTURLRequest) GetCodec() uint32 {
	if x != nil {
		return x.Codec
	}
	return 0
}

func (x *Cmd0388_GetPTTURLRequest) GetBuId() uint32 {
	if x != nil {
		return x.BuId
	}
	return 0
}

func (x *Cmd0388_GetPTTURLRequest) GetReqTransferType() uint32 {
	if x != nil {
		return x.ReqTransferType
	}
	return 0
}

func (x *Cmd0388_GetPTTURLRequest) GetIsAuto() uint32 {
	if x != nil {
		return x.IsAuto
	}
	return 0
}

// GetPttUrlRsp
type Cmd0388_GetPTTURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId0      uint64              `protobuf:"varint,1,opt,name=file_id0,json=fileId0,proto3" json:"file_id0,omitempty"`                 // "uint64_fileid"
	FileMd5      []byte              `protobuf:"bytes,2,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                  // "bytes_file_md5"
	Result       uint32              `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`                                  // "uint32_result"
	FailMessage  []byte              `protobuf:"bytes,4,opt,name=fail_message,json=failMessage,proto3" json:"fail_message,omitempty"`      // "bytes_fail_msg"
	DownUrl      []string            `protobuf:"bytes,5,rep,name=down_url,json=downUrl,proto3" json:"down_url,omitempty"`                  // "rpt_bytes_down_url"
	DownIp       []uint32            `protobuf:"varint,6,rep,packed,name=down_ip,json=downIp,proto3" json:"down_ip,omitempty"`             // "rpt_uint32_down_ip"
	DownPort     []uint32            `protobuf:"varint,7,rep,packed,name=down_port,json=downPort,proto3" json:"down_port,omitempty"`       // "rpt_uint32_down_port"
	DownDomain   []byte              `protobuf:"bytes,8,opt,name=down_domain,json=downDomain,proto3" json:"down_domain,omitempty"`         // "bytes_down_domain"
	DownPara     []byte              `protobuf:"bytes,9,opt,name=down_para,json=downPara,proto3" json:"down_para,omitempty"`               // "bytes_down_para"
	FileId       uint64              `protobuf:"varint,10,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`                   // "uint64_file_id"
	TransferType uint32              `protobuf:"varint,11,opt,name=transfer_type,json=transferType,proto3" json:"transfer_type,omitempty"` // "uint32_transfer_type"
	AllowRetry   uint32              `protobuf:"varint,12,opt,name=allow_retry,json=allowRetry,proto3" json:"allow_retry,omitempty"`       // "uint32_allow_retry"
	MsgDownIp6   []*Cmd0388_IPv6Info `protobuf:"bytes,26,rep,name=msg_down_ip6,json=msgDownIp6,proto3" json:"msg_down_ip6,omitempty"`      // "rpt_msg_down_ip6"
	ClientIp6    []byte              `protobuf:"bytes,27,opt,name=client_ip6,json=clientIp6,proto3" json:"client_ip6,omitempty"`           // "bytes_client_ip6"
	Domain       string              `protobuf:"bytes,28,opt,name=domain,proto3" json:"domain,omitempty"`                                  // "rpt_str_domain"
}

func (x *Cmd0388_GetPTTURLResponse) Reset() {
	*x = Cmd0388_GetPTTURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_GetPTTURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_GetPTTURLResponse) ProtoMessage() {}

func (x *Cmd0388_GetPTTURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_GetPTTURLResponse.ProtoReflect.Descriptor instead.
func (*Cmd0388_GetPTTURLResponse) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 9}
}

func (x *Cmd0388_GetPTTURLResponse) GetFileId0() uint64 {
	if x != nil {
		return x.FileId0
	}
	return 0
}

func (x *Cmd0388_GetPTTURLResponse) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *Cmd0388_GetPTTURLResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Cmd0388_GetPTTURLResponse) GetFailMessage() []byte {
	if x != nil {
		return x.FailMessage
	}
	return nil
}

func (x *Cmd0388_GetPTTURLResponse) GetDownUrl() []string {
	if x != nil {
		return x.DownUrl
	}
	return nil
}

func (x *Cmd0388_GetPTTURLResponse) GetDownIp() []uint32 {
	if x != nil {
		return x.DownIp
	}
	return nil
}

func (x *Cmd0388_GetPTTURLResponse) GetDownPort() []uint32 {
	if x != nil {
		return x.DownPort
	}
	return nil
}

func (x *Cmd0388_GetPTTURLResponse) GetDownDomain() []byte {
	if x != nil {
		return x.DownDomain
	}
	return nil
}

func (x *Cmd0388_GetPTTURLResponse) GetDownPara() []byte {
	if x != nil {
		return x.DownPara
	}
	return nil
}

func (x *Cmd0388_GetPTTURLResponse) GetFileId() uint64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *Cmd0388_GetPTTURLResponse) GetTransferType() uint32 {
	if x != nil {
		return x.TransferType
	}
	return 0
}

func (x *Cmd0388_GetPTTURLResponse) GetAllowRetry() uint32 {
	if x != nil {
		return x.AllowRetry
	}
	return 0
}

func (x *Cmd0388_GetPTTURLResponse) GetMsgDownIp6() []*Cmd0388_IPv6Info {
	if x != nil {
		return x.MsgDownIp6
	}
	return nil
}

func (x *Cmd0388_GetPTTURLResponse) GetClientIp6() []byte {
	if x != nil {
		return x.ClientIp6
	}
	return nil
}

func (x *Cmd0388_GetPTTURLResponse) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// IPv6Info
type Cmd0388_IPv6Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip6  []byte `protobuf:"bytes,1,opt,name=ip6,proto3" json:"ip6,omitempty"`    // "bytes_ip6"
	Port uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"` // "uint32_port"
}

func (x *Cmd0388_IPv6Info) Reset() {
	*x = Cmd0388_IPv6Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_IPv6Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_IPv6Info) ProtoMessage() {}

func (x *Cmd0388_IPv6Info) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_IPv6Info.ProtoReflect.Descriptor instead.
func (*Cmd0388_IPv6Info) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 10}
}

func (x *Cmd0388_IPv6Info) GetIp6() []byte {
	if x != nil {
		return x.Ip6
	}
	return nil
}

func (x *Cmd0388_IPv6Info) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// ImgInfo
type Cmd0388_ImageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileMd5    []byte `protobuf:"bytes,1,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`           // "bytes_file_md5"
	FileType   uint32 `protobuf:"varint,2,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`       // "uint32_file_type"
	FileSize   uint64 `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`       // "uint64_file_size"
	FileWidth  uint32 `protobuf:"varint,4,opt,name=file_width,json=fileWidth,proto3" json:"file_width,omitempty"`    // "uint32_file_width"
	FileHeight uint32 `protobuf:"varint,5,opt,name=file_height,json=fileHeight,proto3" json:"file_height,omitempty"` // "uint32_file_height"
}

func (x *Cmd0388_ImageInfo) Reset() {
	*x = Cmd0388_ImageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_ImageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_ImageInfo) ProtoMessage() {}

func (x *Cmd0388_ImageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_ImageInfo.ProtoReflect.Descriptor instead.
func (*Cmd0388_ImageInfo) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 11}
}

func (x *Cmd0388_ImageInfo) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *Cmd0388_ImageInfo) GetFileType() uint32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *Cmd0388_ImageInfo) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Cmd0388_ImageInfo) GetFileWidth() uint32 {
	if x != nil {
		return x.FileWidth
	}
	return 0
}

func (x *Cmd0388_ImageInfo) GetFileHeight() uint32 {
	if x != nil {
		return x.FileHeight
	}
	return 0
}

// PicSize
type Cmd0388_PicSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Original uint32 `protobuf:"varint,1,opt,name=original,proto3" json:"original,omitempty"` // "uint32_original"
	Thumb    uint32 `protobuf:"varint,2,opt,name=thumb,proto3" json:"thumb,omitempty"`       // "uint32_thumb"
	High     uint32 `protobuf:"varint,3,opt,name=high,proto3" json:"high,omitempty"`         // "uint32_high"
}

func (x *Cmd0388_PicSize) Reset() {
	*x = Cmd0388_PicSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_PicSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_PicSize) ProtoMessage() {}

func (x *Cmd0388_PicSize) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_PicSize.ProtoReflect.Descriptor instead.
func (*Cmd0388_PicSize) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 12}
}

func (x *Cmd0388_PicSize) GetOriginal() uint32 {
	if x != nil {
		return x.Original
	}
	return 0
}

func (x *Cmd0388_PicSize) GetThumb() uint32 {
	if x != nil {
		return x.Thumb
	}
	return 0
}

func (x *Cmd0388_PicSize) GetHigh() uint32 {
	if x != nil {
		return x.High
	}
	return 0
}

// ReqBody
type Cmd0388_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetType        uint32                           `protobuf:"varint,1,opt,name=net_type,json=netType,proto3" json:"net_type,omitempty"`                       // "uint32_net_type"
	SubCmd         uint32                           `protobuf:"varint,2,opt,name=sub_cmd,json=subCmd,proto3" json:"sub_cmd,omitempty"`                          // "uint32_subcmd"
	TryUploadImage []*Cmd0388_TryUploadImageRequest `protobuf:"bytes,3,rep,name=try_upload_image,json=tryUploadImage,proto3" json:"try_upload_image,omitempty"` // "rpt_msg_tryup_img_req"
	GetImageUrl    []*Cmd0388_GetImageURLRequest    `protobuf:"bytes,4,rep,name=get_image_url,json=getImageUrl,proto3" json:"get_image_url,omitempty"`          // "rpt_msg_getimg_url_req"
	TryUploadPtt   []*Cmd0388_TryUploadPTTRequest   `protobuf:"bytes,5,rep,name=try_upload_ptt,json=tryUploadPtt,proto3" json:"try_upload_ptt,omitempty"`       // "rpt_msg_tryup_ptt_req"
	GetPttUrl      []*Cmd0388_GetPTTURLRequest      `protobuf:"bytes,6,rep,name=get_ptt_url,json=getPttUrl,proto3" json:"get_ptt_url,omitempty"`                // "rpt_msg_getptt_url_req"
	CommandId      uint32                           `protobuf:"varint,7,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`                 // "uint32_command_id"
	DeleteImage    []*Cmd0388_DeleteImageRequest    `protobuf:"bytes,8,rep,name=delete_image,json=deleteImage,proto3" json:"delete_image,omitempty"`            // "rpt_msg_del_img_req"
	Extension      []byte                           `protobuf:"bytes,1001,opt,name=extension,proto3" json:"extension,omitempty"`                                // "bytes_extension"
}

func (x *Cmd0388_Request) Reset() {
	*x = Cmd0388_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_Request) ProtoMessage() {}

func (x *Cmd0388_Request) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_Request.ProtoReflect.Descriptor instead.
func (*Cmd0388_Request) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 13}
}

func (x *Cmd0388_Request) GetNetType() uint32 {
	if x != nil {
		return x.NetType
	}
	return 0
}

func (x *Cmd0388_Request) GetSubCmd() uint32 {
	if x != nil {
		return x.SubCmd
	}
	return 0
}

func (x *Cmd0388_Request) GetTryUploadImage() []*Cmd0388_TryUploadImageRequest {
	if x != nil {
		return x.TryUploadImage
	}
	return nil
}

func (x *Cmd0388_Request) GetGetImageUrl() []*Cmd0388_GetImageURLRequest {
	if x != nil {
		return x.GetImageUrl
	}
	return nil
}

func (x *Cmd0388_Request) GetTryUploadPtt() []*Cmd0388_TryUploadPTTRequest {
	if x != nil {
		return x.TryUploadPtt
	}
	return nil
}

func (x *Cmd0388_Request) GetGetPttUrl() []*Cmd0388_GetPTTURLRequest {
	if x != nil {
		return x.GetPttUrl
	}
	return nil
}

func (x *Cmd0388_Request) GetCommandId() uint32 {
	if x != nil {
		return x.CommandId
	}
	return 0
}

func (x *Cmd0388_Request) GetDeleteImage() []*Cmd0388_DeleteImageRequest {
	if x != nil {
		return x.DeleteImage
	}
	return nil
}

func (x *Cmd0388_Request) GetExtension() []byte {
	if x != nil {
		return x.Extension
	}
	return nil
}

// RspBody
type Cmd0388_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientIp       uint32                            `protobuf:"varint,1,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`                    // "uint32_client_ip"
	SubCmd         uint32                            `protobuf:"varint,2,opt,name=sub_cmd,json=subCmd,proto3" json:"sub_cmd,omitempty"`                          // "uint32_subcmd"
	TryUploadImage []*Cmd0388_TryUploadImageResponse `protobuf:"bytes,3,rep,name=try_upload_image,json=tryUploadImage,proto3" json:"try_upload_image,omitempty"` // "rpt_msg_tryup_img_rsp"
	GetImageUrl    []*Cmd0388_GetImageURLResponse    `protobuf:"bytes,4,rep,name=get_image_url,json=getImageUrl,proto3" json:"get_image_url,omitempty"`          // "rpt_msg_getimg_url_rsp"
	TryUploadPtt   []*Cmd0388_TryUploadPTTResponse   `protobuf:"bytes,5,rep,name=try_upload_ptt,json=tryUploadPtt,proto3" json:"try_upload_ptt,omitempty"`       // "rpt_msg_tryup_ptt_rsp"
	GetPttUrl      []*Cmd0388_GetPTTURLResponse      `protobuf:"bytes,6,rep,name=get_ptt_url,json=getPttUrl,proto3" json:"get_ptt_url,omitempty"`                // "rpt_msg_getptt_url_rsp"
	DelImage       []*Cmd0388_DeleteImageResponse    `protobuf:"bytes,7,rep,name=del_image,json=delImage,proto3" json:"del_image,omitempty"`                     // "rpt_msg_del_img_rsp"
}

func (x *Cmd0388_Response) Reset() {
	*x = Cmd0388_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_Response) ProtoMessage() {}

func (x *Cmd0388_Response) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_Response.ProtoReflect.Descriptor instead.
func (*Cmd0388_Response) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 14}
}

func (x *Cmd0388_Response) GetClientIp() uint32 {
	if x != nil {
		return x.ClientIp
	}
	return 0
}

func (x *Cmd0388_Response) GetSubCmd() uint32 {
	if x != nil {
		return x.SubCmd
	}
	return 0
}

func (x *Cmd0388_Response) GetTryUploadImage() []*Cmd0388_TryUploadImageResponse {
	if x != nil {
		return x.TryUploadImage
	}
	return nil
}

func (x *Cmd0388_Response) GetGetImageUrl() []*Cmd0388_GetImageURLResponse {
	if x != nil {
		return x.GetImageUrl
	}
	return nil
}

func (x *Cmd0388_Response) GetTryUploadPtt() []*Cmd0388_TryUploadPTTResponse {
	if x != nil {
		return x.TryUploadPtt
	}
	return nil
}

func (x *Cmd0388_Response) GetGetPttUrl() []*Cmd0388_GetPTTURLResponse {
	if x != nil {
		return x.GetPttUrl
	}
	return nil
}

func (x *Cmd0388_Response) GetDelImage() []*Cmd0388_DeleteImageResponse {
	if x != nil {
		return x.DelImage
	}
	return nil
}

// TryUpImgReq
type Cmd0388_TryUploadImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode       int64  `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`                      // "uint64_group_code"
	SrcUin          int64  `protobuf:"varint,2,opt,name=src_uin,json=srcUin,proto3" json:"src_uin,omitempty"`                               // "uint64_src_uin"
	FileId          int64  `protobuf:"varint,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`                               // "uint64_file_id"
	FileMd5         []byte `protobuf:"bytes,4,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                             // "bytes_file_md5"
	FileSize        int64  `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`                         // "uint64_file_size"
	Filename        string `protobuf:"bytes,6,opt,name=filename,proto3" json:"filename,omitempty"`                                          // "bytes_file_name"
	SrcTerm         int32  `protobuf:"varint,7,opt,name=src_term,json=srcTerm,proto3" json:"src_term,omitempty"`                            // "uint32_src_term"
	PlatformType    int32  `protobuf:"varint,8,opt,name=platform_type,json=platformType,proto3" json:"platform_type,omitempty"`             // "uint32_platform_type"
	BuType          int32  `protobuf:"varint,9,opt,name=bu_type,json=buType,proto3" json:"bu_type,omitempty"`                               // "uint32_bu_type"
	PictureWidth    int32  `protobuf:"varint,10,opt,name=picture_width,json=pictureWidth,proto3" json:"picture_width,omitempty"`            // "uint32_pic_width"
	PictureHeight   int32  `protobuf:"varint,11,opt,name=picture_height,json=pictureHeight,proto3" json:"picture_height,omitempty"`         // "uint32_pic_height"
	PictureType     int32  `protobuf:"varint,12,opt,name=picture_type,json=pictureType,proto3" json:"picture_type,omitempty"`               // "uint32_pic_type"
	BuildVersion    string `protobuf:"bytes,13,opt,name=build_version,json=buildVersion,proto3" json:"build_version,omitempty"`             // "bytes_build_ver"
	InnerIp         int32  `protobuf:"varint,14,opt,name=inner_ip,json=innerIp,proto3" json:"inner_ip,omitempty"`                           // "uint32_inner_ip"
	AppPictureType  int32  `protobuf:"varint,15,opt,name=app_picture_type,json=appPictureType,proto3" json:"app_picture_type,omitempty"`    // "uint32_app_pic_type"
	OriginalPicture int32  `protobuf:"varint,16,opt,name=original_picture,json=originalPicture,proto3" json:"original_picture,omitempty"`   // "uint32_original_pic"
	FileIndex       []byte `protobuf:"bytes,17,opt,name=file_index,json=fileIndex,proto3" json:"file_index,omitempty"`                      // "bytes_file_index"
	DstUin          int64  `protobuf:"varint,18,opt,name=dst_uin,json=dstUin,proto3" json:"dst_uin,omitempty"`                              // "uint64_dst_uin"
	ServerUpload    int32  `protobuf:"varint,19,opt,name=server_upload,json=serverUpload,proto3" json:"server_upload,omitempty"`            // "uint32_srv_upload"
	TransferUrl     string `protobuf:"bytes,20,opt,name=transfer_url,json=transferUrl,proto3" json:"transfer_url,omitempty"`                // "bytes_transfer_url"
	QqmeetGuildId   int64  `protobuf:"varint,21,opt,name=qqmeet_guild_id,json=qqmeetGuildId,proto3" json:"qqmeet_guild_id,omitempty"`       // "uint64_qqmeet_guild_id"
	QqmeetChannelId int64  `protobuf:"varint,22,opt,name=qqmeet_channel_id,json=qqmeetChannelId,proto3" json:"qqmeet_channel_id,omitempty"` // "uint64_qqmeet_channel_id"
}

func (x *Cmd0388_TryUploadImageRequest) Reset() {
	*x = Cmd0388_TryUploadImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_TryUploadImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_TryUploadImageRequest) ProtoMessage() {}

func (x *Cmd0388_TryUploadImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_TryUploadImageRequest.ProtoReflect.Descriptor instead.
func (*Cmd0388_TryUploadImageRequest) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 15}
}

func (x *Cmd0388_TryUploadImageRequest) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *Cmd0388_TryUploadImageRequest) GetSrcUin() int64 {
	if x != nil {
		return x.SrcUin
	}
	return 0
}

func (x *Cmd0388_TryUploadImageRequest) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *Cmd0388_TryUploadImageRequest) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *Cmd0388_TryUploadImageRequest) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Cmd0388_TryUploadImageRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Cmd0388_TryUploadImageRequest) GetSrcTerm() int32 {
	if x != nil {
		return x.SrcTerm
	}
	return 0
}

func (x *Cmd0388_TryUploadImageRequest) GetPlatformType() int32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

func (x *Cmd0388_TryUploadImageRequest) GetBuType() int32 {
	if x != nil {
		return x.BuType
	}
	return 0
}

func (x *Cmd0388_TryUploadImageRequest) GetPictureWidth() int32 {
	if x != nil {
		return x.PictureWidth
	}
	return 0
}

func (x *Cmd0388_TryUploadImageRequest) GetPictureHeight() int32 {
	if x != nil {
		return x.PictureHeight
	}
	return 0
}

func (x *Cmd0388_TryUploadImageRequest) GetPictureType() int32 {
	if x != nil {
		return x.PictureType
	}
	return 0
}

func (x *Cmd0388_TryUploadImageRequest) GetBuildVersion() string {
	if x != nil {
		return x.BuildVersion
	}
	return ""
}

func (x *Cmd0388_TryUploadImageRequest) GetInnerIp() int32 {
	if x != nil {
		return x.InnerIp
	}
	return 0
}

func (x *Cmd0388_TryUploadImageRequest) GetAppPictureType() int32 {
	if x != nil {
		return x.AppPictureType
	}
	return 0
}

func (x *Cmd0388_TryUploadImageRequest) GetOriginalPicture() int32 {
	if x != nil {
		return x.OriginalPicture
	}
	return 0
}

func (x *Cmd0388_TryUploadImageRequest) GetFileIndex() []byte {
	if x != nil {
		return x.FileIndex
	}
	return nil
}

func (x *Cmd0388_TryUploadImageRequest) GetDstUin() int64 {
	if x != nil {
		return x.DstUin
	}
	return 0
}

func (x *Cmd0388_TryUploadImageRequest) GetServerUpload() int32 {
	if x != nil {
		return x.ServerUpload
	}
	return 0
}

func (x *Cmd0388_TryUploadImageRequest) GetTransferUrl() string {
	if x != nil {
		return x.TransferUrl
	}
	return ""
}

func (x *Cmd0388_TryUploadImageRequest) GetQqmeetGuildId() int64 {
	if x != nil {
		return x.QqmeetGuildId
	}
	return 0
}

func (x *Cmd0388_TryUploadImageRequest) GetQqmeetChannelId() int64 {
	if x != nil {
		return x.QqmeetChannelId
	}
	return 0
}

// TryUpImgRsp
type Cmd0388_TryUploadImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId0       int64                           `protobuf:"varint,1,opt,name=file_id0,json=fileId0,proto3" json:"file_id0,omitempty"`                      // "uint64_file_id"
	Result        int32                           `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`                                       // "uint32_result"
	FailMessage   []byte                          `protobuf:"bytes,3,opt,name=fail_message,json=failMessage,proto3" json:"fail_message,omitempty"`           // "bytes_fail_msg"
	FileExist     bool                            `protobuf:"varint,4,opt,name=file_exist,json=fileExist,proto3" json:"file_exist,omitempty"`                // "bool_file_exit"
	ImageInfo     *Cmd0388_ImageInfo              `protobuf:"bytes,5,opt,name=image_info,json=imageInfo,proto3" json:"image_info,omitempty"`                 // "msg_img_info"
	UploadIp      []uint32                        `protobuf:"varint,6,rep,packed,name=upload_ip,json=uploadIp,proto3" json:"upload_ip,omitempty"`            // "rpt_uint32_up_ip"
	UploadPort    []uint32                        `protobuf:"varint,7,rep,packed,name=upload_port,json=uploadPort,proto3" json:"upload_port,omitempty"`      // "rpt_uint32_up_port"
	UploadKey     []byte                          `protobuf:"bytes,8,opt,name=upload_key,json=uploadKey,proto3" json:"upload_key,omitempty"`                 // "bytes_up_ukey"
	FileId        int64                           `protobuf:"varint,9,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`                         // "uint64_fileid"
	UploadOffset  int64                           `protobuf:"varint,10,opt,name=upload_offset,json=uploadOffset,proto3" json:"upload_offset,omitempty"`      // "uint64_up_offset"
	BlockSize     int64                           `protobuf:"varint,11,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`               // "uint64_block_size"
	NewBigChannel bool                            `protobuf:"varint,12,opt,name=new_big_channel,json=newBigChannel,proto3" json:"new_big_channel,omitempty"` // "bool_new_big_chan"
	UploadIp6     []*Cmd0388_IPv6Info             `protobuf:"bytes,26,rep,name=upload_ip6,json=uploadIp6,proto3" json:"upload_ip6,omitempty"`                // "rpt_msg_up_ip6"
	ClientIp6     []byte                          `protobuf:"bytes,27,opt,name=client_ip6,json=clientIp6,proto3" json:"client_ip6,omitempty"`                // "bytes_client_ip6"
	DownloadIndex []byte                          `protobuf:"bytes,28,opt,name=download_index,json=downloadIndex,proto3" json:"download_index,omitempty"`    // "bytes_download_index"
	UploadInfo    *Cmd0388_TryUploadInfo4Business `protobuf:"bytes,1001,opt,name=upload_info,json=uploadInfo,proto3" json:"upload_info,omitempty"`           // "msg_info4busi"
}

func (x *Cmd0388_TryUploadImageResponse) Reset() {
	*x = Cmd0388_TryUploadImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_TryUploadImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_TryUploadImageResponse) ProtoMessage() {}

func (x *Cmd0388_TryUploadImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_TryUploadImageResponse.ProtoReflect.Descriptor instead.
func (*Cmd0388_TryUploadImageResponse) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 16}
}

func (x *Cmd0388_TryUploadImageResponse) GetFileId0() int64 {
	if x != nil {
		return x.FileId0
	}
	return 0
}

func (x *Cmd0388_TryUploadImageResponse) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Cmd0388_TryUploadImageResponse) GetFailMessage() []byte {
	if x != nil {
		return x.FailMessage
	}
	return nil
}

func (x *Cmd0388_TryUploadImageResponse) GetFileExist() bool {
	if x != nil {
		return x.FileExist
	}
	return false
}

func (x *Cmd0388_TryUploadImageResponse) GetImageInfo() *Cmd0388_ImageInfo {
	if x != nil {
		return x.ImageInfo
	}
	return nil
}

func (x *Cmd0388_TryUploadImageResponse) GetUploadIp() []uint32 {
	if x != nil {
		return x.UploadIp
	}
	return nil
}

func (x *Cmd0388_TryUploadImageResponse) GetUploadPort() []uint32 {
	if x != nil {
		return x.UploadPort
	}
	return nil
}

func (x *Cmd0388_TryUploadImageResponse) GetUploadKey() []byte {
	if x != nil {
		return x.UploadKey
	}
	return nil
}

func (x *Cmd0388_TryUploadImageResponse) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *Cmd0388_TryUploadImageResponse) GetUploadOffset() int64 {
	if x != nil {
		return x.UploadOffset
	}
	return 0
}

func (x *Cmd0388_TryUploadImageResponse) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *Cmd0388_TryUploadImageResponse) GetNewBigChannel() bool {
	if x != nil {
		return x.NewBigChannel
	}
	return false
}

func (x *Cmd0388_TryUploadImageResponse) GetUploadIp6() []*Cmd0388_IPv6Info {
	if x != nil {
		return x.UploadIp6
	}
	return nil
}

func (x *Cmd0388_TryUploadImageResponse) GetClientIp6() []byte {
	if x != nil {
		return x.ClientIp6
	}
	return nil
}

func (x *Cmd0388_TryUploadImageResponse) GetDownloadIndex() []byte {
	if x != nil {
		return x.DownloadIndex
	}
	return nil
}

func (x *Cmd0388_TryUploadImageResponse) GetUploadInfo() *Cmd0388_TryUploadInfo4Business {
	if x != nil {
		return x.UploadInfo
	}
	return nil
}

// TryUpInfo4Busi
type Cmd0388_TryUploadInfo4Business struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownDomain          []byte `protobuf:"bytes,1,opt,name=down_domain,json=downDomain,proto3" json:"down_domain,omitempty"`                              // "bytes_down_domain"
	ThumbDownloadUrl    []byte `protobuf:"bytes,2,opt,name=thumb_download_url,json=thumbDownloadUrl,proto3" json:"thumb_download_url,omitempty"`          // "bytes_thumb_down_url"
	OriginalDownloadUrl []byte `protobuf:"bytes,3,opt,name=original_download_url,json=originalDownloadUrl,proto3" json:"original_download_url,omitempty"` // "bytes_original_down_url"
	BigDownloadUrl      []byte `protobuf:"bytes,4,opt,name=big_download_url,json=bigDownloadUrl,proto3" json:"big_download_url,omitempty"`                // "bytes_big_down_url"
	FileResid           []byte `protobuf:"bytes,5,opt,name=file_resid,json=fileResid,proto3" json:"file_resid,omitempty"`                                 // "bytes_file_resid"
}

func (x *Cmd0388_TryUploadInfo4Business) Reset() {
	*x = Cmd0388_TryUploadInfo4Business{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_TryUploadInfo4Business) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_TryUploadInfo4Business) ProtoMessage() {}

func (x *Cmd0388_TryUploadInfo4Business) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_TryUploadInfo4Business.ProtoReflect.Descriptor instead.
func (*Cmd0388_TryUploadInfo4Business) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 17}
}

func (x *Cmd0388_TryUploadInfo4Business) GetDownDomain() []byte {
	if x != nil {
		return x.DownDomain
	}
	return nil
}

func (x *Cmd0388_TryUploadInfo4Business) GetThumbDownloadUrl() []byte {
	if x != nil {
		return x.ThumbDownloadUrl
	}
	return nil
}

func (x *Cmd0388_TryUploadInfo4Business) GetOriginalDownloadUrl() []byte {
	if x != nil {
		return x.OriginalDownloadUrl
	}
	return nil
}

func (x *Cmd0388_TryUploadInfo4Business) GetBigDownloadUrl() []byte {
	if x != nil {
		return x.BigDownloadUrl
	}
	return nil
}

func (x *Cmd0388_TryUploadInfo4Business) GetFileResid() []byte {
	if x != nil {
		return x.FileResid
	}
	return nil
}

// TryUpPttReq
type Cmd0388_TryUploadPTTRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode    uint64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`          // "uint64_group_code"
	SrcUin       uint64 `protobuf:"varint,2,opt,name=src_uin,json=srcUin,proto3" json:"src_uin,omitempty"`                   // "uint64_src_uin"
	FileId       uint64 `protobuf:"varint,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`                   // "uint64_file_id"
	FileMd5      []byte `protobuf:"bytes,4,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                 // "bytes_file_md5"
	FileSize     uint64 `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`             // "uint64_file_size"
	FileName     []byte `protobuf:"bytes,6,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`              // "bytes_file_name"
	SrcTerm      uint32 `protobuf:"varint,7,opt,name=src_term,json=srcTerm,proto3" json:"src_term,omitempty"`                // "uint32_src_term"
	PlatformType uint32 `protobuf:"varint,8,opt,name=platform_type,json=platformType,proto3" json:"platform_type,omitempty"` // "uint32_platform_type"
	BuType       uint32 `protobuf:"varint,9,opt,name=bu_type,json=buType,proto3" json:"bu_type,omitempty"`                   // "uint32_bu_type"
	BuildVer     []byte `protobuf:"bytes,10,opt,name=build_ver,json=buildVer,proto3" json:"build_ver,omitempty"`             // "bytes_build_ver"
	InnerIp      uint32 `protobuf:"varint,11,opt,name=inner_ip,json=innerIp,proto3" json:"inner_ip,omitempty"`               // "uint32_inner_ip"
	VoiceLength  uint32 `protobuf:"varint,12,opt,name=voice_length,json=voiceLength,proto3" json:"voice_length,omitempty"`   // "uint32_voice_length"
	NewUpChan    bool   `protobuf:"varint,13,opt,name=new_up_chan,json=newUpChan,proto3" json:"new_up_chan,omitempty"`       // "bool_new_up_chan"
	Codec        uint32 `protobuf:"varint,14,opt,name=codec,proto3" json:"codec,omitempty"`                                  // "uint32_codec"
	VoiceType    uint32 `protobuf:"varint,15,opt,name=voice_type,json=voiceType,proto3" json:"voice_type,omitempty"`         // "uint32_voice_type"
	BuId         uint32 `protobuf:"varint,16,opt,name=bu_id,json=buId,proto3" json:"bu_id,omitempty"`                        // "uint32_bu_id"
}

func (x *Cmd0388_TryUploadPTTRequest) Reset() {
	*x = Cmd0388_TryUploadPTTRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_TryUploadPTTRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_TryUploadPTTRequest) ProtoMessage() {}

func (x *Cmd0388_TryUploadPTTRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_TryUploadPTTRequest.ProtoReflect.Descriptor instead.
func (*Cmd0388_TryUploadPTTRequest) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 18}
}

func (x *Cmd0388_TryUploadPTTRequest) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTRequest) GetSrcUin() uint64 {
	if x != nil {
		return x.SrcUin
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTRequest) GetFileId() uint64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTRequest) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *Cmd0388_TryUploadPTTRequest) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTRequest) GetFileName() []byte {
	if x != nil {
		return x.FileName
	}
	return nil
}

func (x *Cmd0388_TryUploadPTTRequest) GetSrcTerm() uint32 {
	if x != nil {
		return x.SrcTerm
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTRequest) GetPlatformType() uint32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTRequest) GetBuType() uint32 {
	if x != nil {
		return x.BuType
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTRequest) GetBuildVer() []byte {
	if x != nil {
		return x.BuildVer
	}
	return nil
}

func (x *Cmd0388_TryUploadPTTRequest) GetInnerIp() uint32 {
	if x != nil {
		return x.InnerIp
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTRequest) GetVoiceLength() uint32 {
	if x != nil {
		return x.VoiceLength
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTRequest) GetNewUpChan() bool {
	if x != nil {
		return x.NewUpChan
	}
	return false
}

func (x *Cmd0388_TryUploadPTTRequest) GetCodec() uint32 {
	if x != nil {
		return x.Codec
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTRequest) GetVoiceType() uint32 {
	if x != nil {
		return x.VoiceType
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTRequest) GetBuId() uint32 {
	if x != nil {
		return x.BuId
	}
	return 0
}

// TryUpPttRsp
type Cmd0388_TryUploadPTTResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId0     uint64              `protobuf:"varint,1,opt,name=file_id0,json=fileId0,proto3" json:"file_id0,omitempty"`              // "uint64_file_id"
	Result      uint32              `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`                               // "uint32_result"
	FailMessage []byte              `protobuf:"bytes,3,opt,name=fail_message,json=failMessage,proto3" json:"fail_message,omitempty"`   // "bytes_fail_msg"
	FileExit    bool                `protobuf:"varint,4,opt,name=file_exit,json=fileExit,proto3" json:"file_exit,omitempty"`           // "bool_file_exit"
	UpIp        []uint32            `protobuf:"varint,5,rep,packed,name=up_ip,json=upIp,proto3" json:"up_ip,omitempty"`                // "rpt_uint32_up_ip"
	UpPort      []uint32            `protobuf:"varint,6,rep,packed,name=up_port,json=upPort,proto3" json:"up_port,omitempty"`          // "rpt_uint32_up_port"
	UpUkey      []byte              `protobuf:"bytes,7,opt,name=up_ukey,json=upUkey,proto3" json:"up_ukey,omitempty"`                  // "bytes_up_ukey"
	FileId      uint64              `protobuf:"varint,8,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`                 // "uint64_fileid"
	UpOffset    uint64              `protobuf:"varint,9,opt,name=up_offset,json=upOffset,proto3" json:"up_offset,omitempty"`           // "uint64_up_offset"
	BlockSize   uint64              `protobuf:"varint,10,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`       // "uint64_block_size"
	FileKey     []byte              `protobuf:"bytes,11,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`              // "bytes_file_key"
	ChannelType uint32              `protobuf:"varint,12,opt,name=channel_type,json=channelType,proto3" json:"channel_type,omitempty"` // "uint32_channel_type"
	MsgUpIp6    []*Cmd0388_IPv6Info `protobuf:"bytes,26,rep,name=msg_up_ip6,json=msgUpIp6,proto3" json:"msg_up_ip6,omitempty"`         // "rpt_msg_up_ip6"
	ClientIp6   []byte              `protobuf:"bytes,27,opt,name=client_ip6,json=clientIp6,proto3" json:"client_ip6,omitempty"`        // "bytes_client_ip6"
}

func (x *Cmd0388_TryUploadPTTResponse) Reset() {
	*x = Cmd0388_TryUploadPTTResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0388_TryUploadPTTResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0388_TryUploadPTTResponse) ProtoMessage() {}

func (x *Cmd0388_TryUploadPTTResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0388_TryUploadPTTResponse.ProtoReflect.Descriptor instead.
func (*Cmd0388_TryUploadPTTResponse) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0, 19}
}

func (x *Cmd0388_TryUploadPTTResponse) GetFileId0() uint64 {
	if x != nil {
		return x.FileId0
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTResponse) GetFailMessage() []byte {
	if x != nil {
		return x.FailMessage
	}
	return nil
}

func (x *Cmd0388_TryUploadPTTResponse) GetFileExit() bool {
	if x != nil {
		return x.FileExit
	}
	return false
}

func (x *Cmd0388_TryUploadPTTResponse) GetUpIp() []uint32 {
	if x != nil {
		return x.UpIp
	}
	return nil
}

func (x *Cmd0388_TryUploadPTTResponse) GetUpPort() []uint32 {
	if x != nil {
		return x.UpPort
	}
	return nil
}

func (x *Cmd0388_TryUploadPTTResponse) GetUpUkey() []byte {
	if x != nil {
		return x.UpUkey
	}
	return nil
}

func (x *Cmd0388_TryUploadPTTResponse) GetFileId() uint64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTResponse) GetUpOffset() uint64 {
	if x != nil {
		return x.UpOffset
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTResponse) GetBlockSize() uint64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTResponse) GetFileKey() []byte {
	if x != nil {
		return x.FileKey
	}
	return nil
}

func (x *Cmd0388_TryUploadPTTResponse) GetChannelType() uint32 {
	if x != nil {
		return x.ChannelType
	}
	return 0
}

func (x *Cmd0388_TryUploadPTTResponse) GetMsgUpIp6() []*Cmd0388_IPv6Info {
	if x != nil {
		return x.MsgUpIp6
	}
	return nil
}

func (x *Cmd0388_TryUploadPTTResponse) GetClientIp6() []byte {
	if x != nil {
		return x.ClientIp6
	}
	return nil
}

var File_cmd_proto protoreflect.FileDescriptor

var file_cmd_proto_rawDesc = []byte{
	0x0a, 0x09, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2, 0x35, 0x0a, 0x07,
	0x43, 0x6d, 0x64, 0x30, 0x33, 0x38, 0x38, 0x1a, 0x9e, 0x02, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x72, 0x63, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x73, 0x72, 0x63, 0x55, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x73, 0x74, 0x5f, 0x75,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x73, 0x74, 0x55, 0x69, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x71, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x72,
	0x65, 0x71, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x75, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x69, 0x63, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x69, 0x63, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x63,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70,
	0x69, 0x63, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x6f, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x66,
	0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x1a, 0x29, 0x0a, 0x11, 0x45, 0x78, 0x70,
	0x52, 0x6f, 0x61, 0x6d, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x65, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x72,
	0x65, 0x73, 0x69, 0x64, 0x1a, 0x5b, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x52, 0x6f, 0x61, 0x6d, 0x50,
	0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x6b, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x6b, 0x67, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x69, 0x63, 0x49,
	0x64, 0x1a, 0x31, 0x0a, 0x15, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x50, 0x69, 0x63, 0x54, 0x72, 0x79, 0x55, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78,
	0x74, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x74,
	0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x61, 0x0a, 0x15, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x45, 0x78, 0x70, 0x52, 0x6f, 0x61, 0x6d, 0x54, 0x72, 0x79, 0x55, 0x70, 0x12, 0x48, 0x0a,
	0x14, 0x6d, 0x73, 0x67, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x6f, 0x61, 0x6d, 0x5f, 0x70, 0x69, 0x63,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x43, 0x6d,
	0x64, 0x30, 0x33, 0x38, 0x38, 0x2e, 0x45, 0x78, 0x70, 0x52, 0x6f, 0x61, 0x6d, 0x50, 0x69, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x6d, 0x73, 0x67, 0x45, 0x78, 0x70, 0x72, 0x6f, 0x61, 0x6d,
	0x50, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xa2, 0x06, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x64, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x64, 0x73, 0x74, 0x55, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x30, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x30, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x72, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x75, 0x72, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x71, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x2a, 0x0a,
	0x11, 0x72, 0x65, 0x71, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x49, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66,
	0x69, 0x6c, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x72, 0x65, 0x71, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x71, 0x71, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x67, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x71, 0x71, 0x6d, 0x65,
	0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x71, 0x71, 0x6d,
	0x65, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x71, 0x71, 0x6d, 0x65, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x8e, 0x06, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x30,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x30, 0x12,
	0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x6d, 0x64, 0x30,
	0x33, 0x38, 0x38, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x44, 0x6f, 0x77, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2a,
	0x0a, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x69,
	0x67, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x69, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x64,
	0x6f, 0x77, 0x6e, 0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x64, 0x6f, 0x77, 0x6e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x64, 0x6f, 0x77,
	0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x44, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x12, 0x2c, 0x0a, 0x12, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x69, 0x67,
	0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x62, 0x69, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x12, 0x17, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x64,
	0x6f, 0x77, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x61, 0x75, 0x74, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x11, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x6f, 0x77, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x62, 0x69, 0x67, 0x5f, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x10, 0x62, 0x69, 0x67, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x44, 0x6f, 0x77, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x74, 0x74, 0x70, 0x73, 0x5f, 0x75, 0x72, 0x6c,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x68, 0x74, 0x74,
	0x70, 0x73, 0x55, 0x72, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x33, 0x0a, 0x0c, 0x6d, 0x73, 0x67,
	0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x69, 0x70, 0x36, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x33, 0x38, 0x38, 0x2e, 0x49, 0x50, 0x76, 0x36, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x49, 0x70, 0x36, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x36, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x36, 0x1a, 0xbc, 0x03,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x54, 0x54, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x64, 0x73, 0x74, 0x55, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x30, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x30, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64,
	0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x71, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x72,
	0x65, 0x71, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x49, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x64,
	0x65, 0x63, 0x12, 0x13, 0x0a, 0x05, 0x62, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x62, 0x75, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x1a, 0xde, 0x03, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x50, 0x54, 0x54, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x30, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x30, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x77, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x17,
	0x0a, 0x07, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x06, 0x64, 0x6f, 0x77, 0x6e, 0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x77, 0x6e, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x64, 0x6f, 0x77, 0x6e, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x74, 0x72,
	0x79, 0x12, 0x33, 0x0a, 0x0c, 0x6d, 0x73, 0x67, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x69, 0x70,
	0x36, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x33, 0x38,
	0x38, 0x2e, 0x49, 0x50, 0x76, 0x36, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x44,
	0x6f, 0x77, 0x6e, 0x49, 0x70, 0x36, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x70, 0x36, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x70, 0x36, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x1a, 0x30, 0x0a,
	0x08, 0x49, 0x50, 0x76, 0x36, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x70, 0x36,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x69, 0x70, 0x36, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x1a,
	0xa0, 0x01, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x1a, 0x4f, 0x0a, 0x07, 0x50, 0x69, 0x63, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x68,
	0x69, 0x67, 0x68, 0x1a, 0xc5, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x75, 0x62,
	0x43, 0x6d, 0x64, 0x12, 0x48, 0x0a, 0x10, 0x74, 0x72, 0x79, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x43, 0x6d, 0x64, 0x30, 0x33, 0x38, 0x38, 0x2e, 0x54, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x74,
	0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x3f, 0x0a,
	0x0d, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x33, 0x38, 0x38, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0b, 0x67, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x42,
	0x0a, 0x0e, 0x74, 0x72, 0x79, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x74, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x33, 0x38, 0x38,
	0x2e, 0x54, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x54, 0x54, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x74, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x74, 0x74, 0x12, 0x39, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x74, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x33, 0x38,
	0x38, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x54, 0x54, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x09, 0x67, 0x65, 0x74, 0x50, 0x74, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0c,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x33, 0x38, 0x38, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x89, 0x03, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6d, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x75, 0x62, 0x43, 0x6d, 0x64, 0x12, 0x49,
	0x0a, 0x10, 0x74, 0x72, 0x79, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x33,
	0x38, 0x38, 0x2e, 0x54, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x74, 0x72, 0x79, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x67, 0x65, 0x74,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x33, 0x38, 0x38, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b,
	0x67, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x43, 0x0a, 0x0e, 0x74,
	0x72, 0x79, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x74, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x33, 0x38, 0x38, 0x2e, 0x54, 0x72,
	0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x54, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0c, 0x74, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x74, 0x74,
	0x12, 0x3a, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x74, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x33, 0x38, 0x38, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x54, 0x54, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x09, 0x67, 0x65, 0x74, 0x50, 0x74, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x09,
	0x64, 0x65, 0x6c, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x33, 0x38, 0x38, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x64,
	0x65, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x1a, 0xed, 0x05, 0x0a, 0x15, 0x54, 0x72, 0x79, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x72, 0x63, 0x55, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x74, 0x65,
	0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x72, 0x63, 0x54, 0x65, 0x72,
	0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x12, 0x28,
	0x0a, 0x10, 0x61, 0x70, 0x70, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x50, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x73, 0x74, 0x55, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x71, 0x71, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x71, 0x71,
	0x6d, 0x65, 0x65, 0x74, 0x47, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x71,
	0x71, 0x6d, 0x65, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x71, 0x71, 0x6d, 0x65, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0xdd, 0x04, 0x0a, 0x16, 0x54, 0x72, 0x79, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x30, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x30, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x66, 0x61, 0x69,
	0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x6d,
	0x64, 0x30, 0x33, 0x38, 0x38, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x62, 0x69, 0x67, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6e,
	0x65, 0x77, 0x42, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x0a,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x70, 0x36, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x33, 0x38, 0x38, 0x2e, 0x49, 0x50, 0x76, 0x36, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x70, 0x36, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x36, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x36, 0x12, 0x25, 0x0a,
	0x0e, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x41, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0xe9, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x43, 0x6d, 0x64,
	0x30, 0x33, 0x38, 0x38, 0x2e, 0x54, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x34, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x0a, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xe4, 0x01, 0x0a, 0x16, 0x54, 0x72, 0x79, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x34, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x64, 0x6f, 0x77, 0x6e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x10, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72,
	0x6c, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x13, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x69, 0x67, 0x5f, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0e, 0x62, 0x69, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x1a, 0xd9,
	0x03, 0x0a, 0x13, 0x54, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x54, 0x54, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x5f, 0x75, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x72, 0x63, 0x55, 0x69, 0x6e, 0x12, 0x17,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d,
	0x64, 0x35, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x72, 0x63, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x73, 0x72, 0x63, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x62, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62,
	0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x76,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x56,
	0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x12, 0x21, 0x0a,
	0x0c, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x70, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x55, 0x70, 0x43, 0x68, 0x61, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x62, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x62, 0x75, 0x49, 0x64, 0x1a, 0xb3, 0x03, 0x0a, 0x14, 0x54,
	0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x54, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x30, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x30, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x66, 0x61,
	0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x45, 0x78, 0x69, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x75, 0x70, 0x5f, 0x69, 0x70, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x70, 0x49, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x70,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x70, 0x5f, 0x75, 0x6b, 0x65, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x75, 0x70, 0x55, 0x6b, 0x65, 0x79, 0x12, 0x17, 0x0a,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x75, 0x70, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2f, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x70, 0x5f, 0x69, 0x70, 0x36, 0x18, 0x1a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x43, 0x6d, 0x64, 0x30, 0x33, 0x38, 0x38, 0x2e, 0x49,
	0x50, 0x76, 0x36, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6d, 0x73, 0x67, 0x55, 0x70, 0x49, 0x70,
	0x36, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x36, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x36,
	0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_cmd_proto_rawDescOnce sync.Once
	file_cmd_proto_rawDescData = file_cmd_proto_rawDesc
)

func file_cmd_proto_rawDescGZIP() []byte {
	file_cmd_proto_rawDescOnce.Do(func() {
		file_cmd_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_proto_rawDescData)
	})
	return file_cmd_proto_rawDescData
}

var file_cmd_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_cmd_proto_goTypes = []interface{}{
	(*Cmd0388)(nil),                        // 0: Cmd0388
	(*Cmd0388_DeleteImageRequest)(nil),     // 1: Cmd0388.DeleteImageRequest
	(*Cmd0388_DeleteImageResponse)(nil),    // 2: Cmd0388.DeleteImageResponse
	(*Cmd0388_ExpRoamExtendInfo)(nil),      // 3: Cmd0388.ExpRoamExtendInfo
	(*Cmd0388_ExpRoamPicInfo)(nil),         // 4: Cmd0388.ExpRoamPicInfo
	(*Cmd0388_ExtensionCommPicTryUp)(nil),  // 5: Cmd0388.ExtensionCommPicTryUp
	(*Cmd0388_ExtensionExpRoamTryUp)(nil),  // 6: Cmd0388.ExtensionExpRoamTryUp
	(*Cmd0388_GetImageURLRequest)(nil),     // 7: Cmd0388.GetImageURLRequest
	(*Cmd0388_GetImageURLResponse)(nil),    // 8: Cmd0388.GetImageURLResponse
	(*Cmd0388_GetPTTURLRequest)(nil),       // 9: Cmd0388.GetPTTURLRequest
	(*Cmd0388_GetPTTURLResponse)(nil),      // 10: Cmd0388.GetPTTURLResponse
	(*Cmd0388_IPv6Info)(nil),               // 11: Cmd0388.IPv6Info
	(*Cmd0388_ImageInfo)(nil),              // 12: Cmd0388.ImageInfo
	(*Cmd0388_PicSize)(nil),                // 13: Cmd0388.PicSize
	(*Cmd0388_Request)(nil),                // 14: Cmd0388.Request
	(*Cmd0388_Response)(nil),               // 15: Cmd0388.Response
	(*Cmd0388_TryUploadImageRequest)(nil),  // 16: Cmd0388.TryUploadImageRequest
	(*Cmd0388_TryUploadImageResponse)(nil), // 17: Cmd0388.TryUploadImageResponse
	(*Cmd0388_TryUploadInfo4Business)(nil), // 18: Cmd0388.TryUploadInfo4Business
	(*Cmd0388_TryUploadPTTRequest)(nil),    // 19: Cmd0388.TryUploadPTTRequest
	(*Cmd0388_TryUploadPTTResponse)(nil),   // 20: Cmd0388.TryUploadPTTResponse
}
var file_cmd_proto_depIdxs = []int32{
	4,  // 0: Cmd0388.ExtensionExpRoamTryUp.msg_exproam_pic_info:type_name -> Cmd0388.ExpRoamPicInfo
	12, // 1: Cmd0388.GetImageURLResponse.image_info:type_name -> Cmd0388.ImageInfo
	11, // 2: Cmd0388.GetImageURLResponse.msg_down_ip6:type_name -> Cmd0388.IPv6Info
	11, // 3: Cmd0388.GetPTTURLResponse.msg_down_ip6:type_name -> Cmd0388.IPv6Info
	16, // 4: Cmd0388.Request.try_upload_image:type_name -> Cmd0388.TryUploadImageRequest
	7,  // 5: Cmd0388.Request.get_image_url:type_name -> Cmd0388.GetImageURLRequest
	19, // 6: Cmd0388.Request.try_upload_ptt:type_name -> Cmd0388.TryUploadPTTRequest
	9,  // 7: Cmd0388.Request.get_ptt_url:type_name -> Cmd0388.GetPTTURLRequest
	1,  // 8: Cmd0388.Request.delete_image:type_name -> Cmd0388.DeleteImageRequest
	17, // 9: Cmd0388.Response.try_upload_image:type_name -> Cmd0388.TryUploadImageResponse
	8,  // 10: Cmd0388.Response.get_image_url:type_name -> Cmd0388.GetImageURLResponse
	20, // 11: Cmd0388.Response.try_upload_ptt:type_name -> Cmd0388.TryUploadPTTResponse
	10, // 12: Cmd0388.Response.get_ptt_url:type_name -> Cmd0388.GetPTTURLResponse
	2,  // 13: Cmd0388.Response.del_image:type_name -> Cmd0388.DeleteImageResponse
	12, // 14: Cmd0388.TryUploadImageResponse.image_info:type_name -> Cmd0388.ImageInfo
	11, // 15: Cmd0388.TryUploadImageResponse.upload_ip6:type_name -> Cmd0388.IPv6Info
	18, // 16: Cmd0388.TryUploadImageResponse.upload_info:type_name -> Cmd0388.TryUploadInfo4Business
	11, // 17: Cmd0388.TryUploadPTTResponse.msg_up_ip6:type_name -> Cmd0388.IPv6Info
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_cmd_proto_init() }
func file_cmd_proto_init() {
	if File_cmd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cmd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_DeleteImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_DeleteImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_ExpRoamExtendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_ExpRoamPicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_ExtensionCommPicTryUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_ExtensionExpRoamTryUp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_GetImageURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_GetImageURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_GetPTTURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_GetPTTURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_IPv6Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_ImageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_PicSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_TryUploadImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_TryUploadImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_TryUploadInfo4Business); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_TryUploadPTTRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0388_TryUploadPTTResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_proto_goTypes,
		DependencyIndexes: file_cmd_proto_depIdxs,
		MessageInfos:      file_cmd_proto_msgTypes,
	}.Build()
	File_cmd_proto = out.File
	file_cmd_proto_rawDesc = nil
	file_cmd_proto_goTypes = nil
	file_cmd_proto_depIdxs = nil
}
