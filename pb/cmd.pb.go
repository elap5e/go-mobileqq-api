// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: cmd.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Cmd0X0388Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetType        int32                    `protobuf:"varint,1,opt,name=net_type,json=netType,proto3" json:"net_type,omitempty"`
	SubCmd         int32                    `protobuf:"varint,2,opt,name=sub_cmd,json=subCmd,proto3" json:"sub_cmd,omitempty"`
	TryUploadImage []*TryUploadImageRequest `protobuf:"bytes,3,rep,name=try_upload_image,json=tryUploadImage,proto3" json:"try_upload_image,omitempty"`
	GetImageUrl    []*GetImageURLRequest    `protobuf:"bytes,4,rep,name=get_image_url,json=getImageUrl,proto3" json:"get_image_url,omitempty"`
	TryUploadPtt   []*TryUploadPTTRequest   `protobuf:"bytes,5,rep,name=try_upload_ptt,json=tryUploadPtt,proto3" json:"try_upload_ptt,omitempty"`
	GetPttUrl      []*GetPTTURLRequest      `protobuf:"bytes,6,rep,name=get_ptt_url,json=getPttUrl,proto3" json:"get_ptt_url,omitempty"`
	CommandId      int32                    `protobuf:"varint,7,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	DelImage       []*DeleteImageRequest    `protobuf:"bytes,8,rep,name=del_image,json=delImage,proto3" json:"del_image,omitempty"`
	Extension      []byte                   `protobuf:"bytes,9,opt,name=extension,proto3" json:"extension,omitempty"`
}

func (x *Cmd0X0388Request) Reset() {
	*x = Cmd0X0388Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X0388Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X0388Request) ProtoMessage() {}

func (x *Cmd0X0388Request) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X0388Request.ProtoReflect.Descriptor instead.
func (*Cmd0X0388Request) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{0}
}

func (x *Cmd0X0388Request) GetNetType() int32 {
	if x != nil {
		return x.NetType
	}
	return 0
}

func (x *Cmd0X0388Request) GetSubCmd() int32 {
	if x != nil {
		return x.SubCmd
	}
	return 0
}

func (x *Cmd0X0388Request) GetTryUploadImage() []*TryUploadImageRequest {
	if x != nil {
		return x.TryUploadImage
	}
	return nil
}

func (x *Cmd0X0388Request) GetGetImageUrl() []*GetImageURLRequest {
	if x != nil {
		return x.GetImageUrl
	}
	return nil
}

func (x *Cmd0X0388Request) GetTryUploadPtt() []*TryUploadPTTRequest {
	if x != nil {
		return x.TryUploadPtt
	}
	return nil
}

func (x *Cmd0X0388Request) GetGetPttUrl() []*GetPTTURLRequest {
	if x != nil {
		return x.GetPttUrl
	}
	return nil
}

func (x *Cmd0X0388Request) GetCommandId() int32 {
	if x != nil {
		return x.CommandId
	}
	return 0
}

func (x *Cmd0X0388Request) GetDelImage() []*DeleteImageRequest {
	if x != nil {
		return x.DelImage
	}
	return nil
}

func (x *Cmd0X0388Request) GetExtension() []byte {
	if x != nil {
		return x.Extension
	}
	return nil
}

type Cmd0X0388Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientIp       int32                     `protobuf:"varint,1,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	SubCmd         int32                     `protobuf:"varint,2,opt,name=sub_cmd,json=subCmd,proto3" json:"sub_cmd,omitempty"`
	TryUploadImage []*TryUploadImageResponse `protobuf:"bytes,3,rep,name=try_upload_image,json=tryUploadImage,proto3" json:"try_upload_image,omitempty"`
	GetImageUrl    []*GetImageURLResponse    `protobuf:"bytes,4,rep,name=get_image_url,json=getImageUrl,proto3" json:"get_image_url,omitempty"`
	TryUploadPtt   []*TryUploadPTTResponse   `protobuf:"bytes,5,rep,name=try_upload_ptt,json=tryUploadPtt,proto3" json:"try_upload_ptt,omitempty"`
	GetPttUrl      []*GetPTTURLResponse      `protobuf:"bytes,6,rep,name=get_ptt_url,json=getPttUrl,proto3" json:"get_ptt_url,omitempty"`
	DelImage       []*DeleteImageResponse    `protobuf:"bytes,7,rep,name=del_image,json=delImage,proto3" json:"del_image,omitempty"`
}

func (x *Cmd0X0388Response) Reset() {
	*x = Cmd0X0388Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd0X0388Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd0X0388Response) ProtoMessage() {}

func (x *Cmd0X0388Response) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd0X0388Response.ProtoReflect.Descriptor instead.
func (*Cmd0X0388Response) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{1}
}

func (x *Cmd0X0388Response) GetClientIp() int32 {
	if x != nil {
		return x.ClientIp
	}
	return 0
}

func (x *Cmd0X0388Response) GetSubCmd() int32 {
	if x != nil {
		return x.SubCmd
	}
	return 0
}

func (x *Cmd0X0388Response) GetTryUploadImage() []*TryUploadImageResponse {
	if x != nil {
		return x.TryUploadImage
	}
	return nil
}

func (x *Cmd0X0388Response) GetGetImageUrl() []*GetImageURLResponse {
	if x != nil {
		return x.GetImageUrl
	}
	return nil
}

func (x *Cmd0X0388Response) GetTryUploadPtt() []*TryUploadPTTResponse {
	if x != nil {
		return x.TryUploadPtt
	}
	return nil
}

func (x *Cmd0X0388Response) GetGetPttUrl() []*GetPTTURLResponse {
	if x != nil {
		return x.GetPttUrl
	}
	return nil
}

func (x *Cmd0X0388Response) GetDelImage() []*DeleteImageResponse {
	if x != nil {
		return x.DelImage
	}
	return nil
}

type DeleteImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteImageRequest) Reset() {
	*x = DeleteImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageRequest) ProtoMessage() {}

func (x *DeleteImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageRequest.ProtoReflect.Descriptor instead.
func (*DeleteImageRequest) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{2}
}

type DeleteImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteImageResponse) Reset() {
	*x = DeleteImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageResponse) ProtoMessage() {}

func (x *DeleteImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageResponse.ProtoReflect.Descriptor instead.
func (*DeleteImageResponse) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{3}
}

type GetImageURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetImageURLRequest) Reset() {
	*x = GetImageURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageURLRequest) ProtoMessage() {}

func (x *GetImageURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageURLRequest.ProtoReflect.Descriptor instead.
func (*GetImageURLRequest) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{4}
}

type GetImageURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetImageURLResponse) Reset() {
	*x = GetImageURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageURLResponse) ProtoMessage() {}

func (x *GetImageURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageURLResponse.ProtoReflect.Descriptor instead.
func (*GetImageURLResponse) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{5}
}

type GetPTTURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPTTURLRequest) Reset() {
	*x = GetPTTURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPTTURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPTTURLRequest) ProtoMessage() {}

func (x *GetPTTURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPTTURLRequest.ProtoReflect.Descriptor instead.
func (*GetPTTURLRequest) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{6}
}

type GetPTTURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPTTURLResponse) Reset() {
	*x = GetPTTURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPTTURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPTTURLResponse) ProtoMessage() {}

func (x *GetPTTURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPTTURLResponse.ProtoReflect.Descriptor instead.
func (*GetPTTURLResponse) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{7}
}

type ImageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileMd5    []byte `protobuf:"bytes,1,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`
	FileType   int32  `protobuf:"varint,2,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	FileSize   int64  `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	FileWidth  int32  `protobuf:"varint,4,opt,name=file_width,json=fileWidth,proto3" json:"file_width,omitempty"`
	FileHeight int32  `protobuf:"varint,5,opt,name=file_height,json=fileHeight,proto3" json:"file_height,omitempty"`
}

func (x *ImageInfo) Reset() {
	*x = ImageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageInfo) ProtoMessage() {}

func (x *ImageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageInfo.ProtoReflect.Descriptor instead.
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{8}
}

func (x *ImageInfo) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *ImageInfo) GetFileType() int32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *ImageInfo) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *ImageInfo) GetFileWidth() int32 {
	if x != nil {
		return x.FileWidth
	}
	return 0
}

func (x *ImageInfo) GetFileHeight() int32 {
	if x != nil {
		return x.FileHeight
	}
	return 0
}

type IPv6Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip6  []byte `protobuf:"bytes,1,opt,name=ip6,proto3" json:"ip6,omitempty"`
	Port int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *IPv6Info) Reset() {
	*x = IPv6Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPv6Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPv6Info) ProtoMessage() {}

func (x *IPv6Info) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPv6Info.ProtoReflect.Descriptor instead.
func (*IPv6Info) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{9}
}

func (x *IPv6Info) GetIp6() []byte {
	if x != nil {
		return x.Ip6
	}
	return nil
}

func (x *IPv6Info) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type TryUploadImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode       int64  `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`
	SrcUin          int64  `protobuf:"varint,2,opt,name=src_uin,json=srcUin,proto3" json:"src_uin,omitempty"`
	FileId          int64  `protobuf:"varint,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FileMd5         []byte `protobuf:"bytes,4,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`
	FileSize        int64  `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	Filename        string `protobuf:"bytes,6,opt,name=filename,proto3" json:"filename,omitempty"`
	SrcTerm         int32  `protobuf:"varint,7,opt,name=src_term,json=srcTerm,proto3" json:"src_term,omitempty"`
	PlatformType    int32  `protobuf:"varint,8,opt,name=platform_type,json=platformType,proto3" json:"platform_type,omitempty"`
	BuType          int32  `protobuf:"varint,9,opt,name=bu_type,json=buType,proto3" json:"bu_type,omitempty"`
	PictureWidth    int32  `protobuf:"varint,10,opt,name=picture_width,json=pictureWidth,proto3" json:"picture_width,omitempty"`
	PictureHeight   int32  `protobuf:"varint,11,opt,name=picture_height,json=pictureHeight,proto3" json:"picture_height,omitempty"`
	PictureType     int32  `protobuf:"varint,12,opt,name=picture_type,json=pictureType,proto3" json:"picture_type,omitempty"`
	BuildVersion    string `protobuf:"bytes,13,opt,name=build_version,json=buildVersion,proto3" json:"build_version,omitempty"`
	InnerIp         int32  `protobuf:"varint,14,opt,name=inner_ip,json=innerIp,proto3" json:"inner_ip,omitempty"`
	AppPictureType  int32  `protobuf:"varint,15,opt,name=app_picture_type,json=appPictureType,proto3" json:"app_picture_type,omitempty"`
	OriginalPicture int32  `protobuf:"varint,16,opt,name=original_picture,json=originalPicture,proto3" json:"original_picture,omitempty"`
	FileIndex       []byte `protobuf:"bytes,17,opt,name=file_index,json=fileIndex,proto3" json:"file_index,omitempty"`
	DstUin          int64  `protobuf:"varint,18,opt,name=dst_uin,json=dstUin,proto3" json:"dst_uin,omitempty"`
	ServerUpload    int32  `protobuf:"varint,19,opt,name=server_upload,json=serverUpload,proto3" json:"server_upload,omitempty"`
	TransferUrl     string `protobuf:"bytes,20,opt,name=transfer_url,json=transferUrl,proto3" json:"transfer_url,omitempty"`
}

func (x *TryUploadImageRequest) Reset() {
	*x = TryUploadImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TryUploadImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TryUploadImageRequest) ProtoMessage() {}

func (x *TryUploadImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TryUploadImageRequest.ProtoReflect.Descriptor instead.
func (*TryUploadImageRequest) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{10}
}

func (x *TryUploadImageRequest) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *TryUploadImageRequest) GetSrcUin() int64 {
	if x != nil {
		return x.SrcUin
	}
	return 0
}

func (x *TryUploadImageRequest) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *TryUploadImageRequest) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *TryUploadImageRequest) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *TryUploadImageRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *TryUploadImageRequest) GetSrcTerm() int32 {
	if x != nil {
		return x.SrcTerm
	}
	return 0
}

func (x *TryUploadImageRequest) GetPlatformType() int32 {
	if x != nil {
		return x.PlatformType
	}
	return 0
}

func (x *TryUploadImageRequest) GetBuType() int32 {
	if x != nil {
		return x.BuType
	}
	return 0
}

func (x *TryUploadImageRequest) GetPictureWidth() int32 {
	if x != nil {
		return x.PictureWidth
	}
	return 0
}

func (x *TryUploadImageRequest) GetPictureHeight() int32 {
	if x != nil {
		return x.PictureHeight
	}
	return 0
}

func (x *TryUploadImageRequest) GetPictureType() int32 {
	if x != nil {
		return x.PictureType
	}
	return 0
}

func (x *TryUploadImageRequest) GetBuildVersion() string {
	if x != nil {
		return x.BuildVersion
	}
	return ""
}

func (x *TryUploadImageRequest) GetInnerIp() int32 {
	if x != nil {
		return x.InnerIp
	}
	return 0
}

func (x *TryUploadImageRequest) GetAppPictureType() int32 {
	if x != nil {
		return x.AppPictureType
	}
	return 0
}

func (x *TryUploadImageRequest) GetOriginalPicture() int32 {
	if x != nil {
		return x.OriginalPicture
	}
	return 0
}

func (x *TryUploadImageRequest) GetFileIndex() []byte {
	if x != nil {
		return x.FileIndex
	}
	return nil
}

func (x *TryUploadImageRequest) GetDstUin() int64 {
	if x != nil {
		return x.DstUin
	}
	return 0
}

func (x *TryUploadImageRequest) GetServerUpload() int32 {
	if x != nil {
		return x.ServerUpload
	}
	return 0
}

func (x *TryUploadImageRequest) GetTransferUrl() string {
	if x != nil {
		return x.TransferUrl
	}
	return ""
}

type TryUploadImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId1      int64                        `protobuf:"varint,1,opt,name=file_id1,json=fileId1,proto3" json:"file_id1,omitempty"`
	Result       int32                        `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
	FailMessage  string                       `protobuf:"bytes,3,opt,name=fail_message,json=failMessage,proto3" json:"fail_message,omitempty"`
	FileExist    bool                         `protobuf:"varint,4,opt,name=file_exist,json=fileExist,proto3" json:"file_exist,omitempty"`
	ImgInfo      *ImageInfo                   `protobuf:"bytes,5,opt,name=img_info,json=imgInfo,proto3" json:"img_info,omitempty"`
	UploadIp     []uint32                     `protobuf:"varint,6,rep,packed,name=upload_ip,json=uploadIp,proto3" json:"upload_ip,omitempty"`
	UploadPort   []int32                      `protobuf:"varint,7,rep,packed,name=upload_port,json=uploadPort,proto3" json:"upload_port,omitempty"`
	UploadKey    []byte                       `protobuf:"bytes,8,opt,name=upload_key,json=uploadKey,proto3" json:"upload_key,omitempty"`
	FileId       int64                        `protobuf:"varint,9,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	UploadOffset int64                        `protobuf:"varint,10,opt,name=upload_offset,json=uploadOffset,proto3" json:"upload_offset,omitempty"`
	BlockSize    int64                        `protobuf:"varint,11,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	NewBigChan   bool                         `protobuf:"varint,12,opt,name=new_big_chan,json=newBigChan,proto3" json:"new_big_chan,omitempty"`
	UploadIp6    []*IPv6Info                  `protobuf:"bytes,13,rep,name=upload_ip6,json=uploadIp6,proto3" json:"upload_ip6,omitempty"`
	ClientIp6    []byte                       `protobuf:"bytes,14,opt,name=client_ip6,json=clientIp6,proto3" json:"client_ip6,omitempty"`
	Info4Busi    *TryUploadImageResponse_Info `protobuf:"bytes,15,opt,name=info4busi,proto3" json:"info4busi,omitempty"`
}

func (x *TryUploadImageResponse) Reset() {
	*x = TryUploadImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TryUploadImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TryUploadImageResponse) ProtoMessage() {}

func (x *TryUploadImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TryUploadImageResponse.ProtoReflect.Descriptor instead.
func (*TryUploadImageResponse) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{11}
}

func (x *TryUploadImageResponse) GetFileId1() int64 {
	if x != nil {
		return x.FileId1
	}
	return 0
}

func (x *TryUploadImageResponse) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *TryUploadImageResponse) GetFailMessage() string {
	if x != nil {
		return x.FailMessage
	}
	return ""
}

func (x *TryUploadImageResponse) GetFileExist() bool {
	if x != nil {
		return x.FileExist
	}
	return false
}

func (x *TryUploadImageResponse) GetImgInfo() *ImageInfo {
	if x != nil {
		return x.ImgInfo
	}
	return nil
}

func (x *TryUploadImageResponse) GetUploadIp() []uint32 {
	if x != nil {
		return x.UploadIp
	}
	return nil
}

func (x *TryUploadImageResponse) GetUploadPort() []int32 {
	if x != nil {
		return x.UploadPort
	}
	return nil
}

func (x *TryUploadImageResponse) GetUploadKey() []byte {
	if x != nil {
		return x.UploadKey
	}
	return nil
}

func (x *TryUploadImageResponse) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *TryUploadImageResponse) GetUploadOffset() int64 {
	if x != nil {
		return x.UploadOffset
	}
	return 0
}

func (x *TryUploadImageResponse) GetBlockSize() int64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *TryUploadImageResponse) GetNewBigChan() bool {
	if x != nil {
		return x.NewBigChan
	}
	return false
}

func (x *TryUploadImageResponse) GetUploadIp6() []*IPv6Info {
	if x != nil {
		return x.UploadIp6
	}
	return nil
}

func (x *TryUploadImageResponse) GetClientIp6() []byte {
	if x != nil {
		return x.ClientIp6
	}
	return nil
}

func (x *TryUploadImageResponse) GetInfo4Busi() *TryUploadImageResponse_Info {
	if x != nil {
		return x.Info4Busi
	}
	return nil
}

type TryUploadPTTRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TryUploadPTTRequest) Reset() {
	*x = TryUploadPTTRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TryUploadPTTRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TryUploadPTTRequest) ProtoMessage() {}

func (x *TryUploadPTTRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TryUploadPTTRequest.ProtoReflect.Descriptor instead.
func (*TryUploadPTTRequest) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{12}
}

type TryUploadPTTResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TryUploadPTTResponse) Reset() {
	*x = TryUploadPTTResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TryUploadPTTResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TryUploadPTTResponse) ProtoMessage() {}

func (x *TryUploadPTTResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TryUploadPTTResponse.ProtoReflect.Descriptor instead.
func (*TryUploadPTTResponse) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{13}
}

type NotifyMessageBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            *uint32                `protobuf:"varint,1,opt,name=type,proto3,oneof" json:"type,omitempty"` // Enum
	MessageTime     *int64                 `protobuf:"varint,2,opt,name=message_time,json=messageTime,proto3,oneof" json:"message_time,omitempty"`
	MessageExpires  *int64                 `protobuf:"varint,3,opt,name=message_expires,json=messageExpires,proto3,oneof" json:"message_expires,omitempty"`
	GroupCode       *int64                 `protobuf:"varint,4,opt,name=group_code,json=groupCode,proto3,oneof" json:"group_code,omitempty"`
	MessageGrayTips *NotifyMessageGrayTips `protobuf:"bytes,5,opt,name=message_gray_tips,json=messageGrayTips,proto3,oneof" json:"message_gray_tips,omitempty"`
	// optional message_messagebox = 6;
	// optional message_floatedtips = 7;
	MessageTopTips *NotifyMessageTopTips `protobuf:"bytes,8,opt,name=message_top_tips,json=messageTopTips,proto3,oneof" json:"message_top_tips,omitempty"`
	// optional message_red_tips = 9;
	// optional message_group_notify = 10;
	MessageRecall *NotifyMessageRecall `protobuf:"bytes,11,opt,name=message_recall,json=messageRecall,proto3,oneof" json:"message_recall,omitempty"`
	// optional message_theme_notify = 12;
	// uint32 service_type = 13;
	// optional message_objmessage_update = 14;
	// optional message_werewolf_push = 15;
	// optional stcm_game_state = 16;
	// STPushMessageElement apllo_message_push = 17;
	// optional message_gold_tips = 18;
	// optional message_miniapp_notify = 20;
	SenderUin *int64 `protobuf:"varint,21,opt,name=sender_uin,json=senderUin,proto3,oneof" json:"sender_uin,omitempty"`
	// optional message_luckybag_notify = 22;
	// optional message_troopformtips_push = 23;
	// optional message_media_push = 24;
	GeneralGrayTip *NotifyMessageGeneralGrayTips `protobuf:"bytes,26,opt,name=general_gray_tip,json=generalGrayTip,proto3,oneof" json:"general_gray_tip,omitempty"`
	// optional message_video_push = 27;
	// optional lbs_share_change_plus_info = 28;
	// optional message_sing_push = 29;
	// optional message_group_info_change = 30;
	// optional group_announce_tbc_info = 31;
	// optional qq_vedio_game_push_info = 32;
	// optional qq_group_digest_msg = 33;
	// optional study_room_member_msg = 34;
	// optional qq_live_notify = 35;
	// optional group_async_notidy = 36;
	GroupCurMessageSeq *int64 `protobuf:"varint,37,opt,name=group_cur_message_seq,json=groupCurMessageSeq,proto3,oneof" json:"group_cur_message_seq,omitempty"`
	// optional group_digest_message_summary = 38;
	SysdbMessageId *int64 `protobuf:"varint,39,opt,name=sysdb_message_id,json=sysdbMessageId,proto3,oneof" json:"sysdb_message_id,omitempty"` // optional revert_graytips_traceless = 40;
}

func (x *NotifyMessageBody) Reset() {
	*x = NotifyMessageBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyMessageBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyMessageBody) ProtoMessage() {}

func (x *NotifyMessageBody) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyMessageBody.ProtoReflect.Descriptor instead.
func (*NotifyMessageBody) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{14}
}

func (x *NotifyMessageBody) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *NotifyMessageBody) GetMessageTime() int64 {
	if x != nil && x.MessageTime != nil {
		return *x.MessageTime
	}
	return 0
}

func (x *NotifyMessageBody) GetMessageExpires() int64 {
	if x != nil && x.MessageExpires != nil {
		return *x.MessageExpires
	}
	return 0
}

func (x *NotifyMessageBody) GetGroupCode() int64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *NotifyMessageBody) GetMessageGrayTips() *NotifyMessageGrayTips {
	if x != nil {
		return x.MessageGrayTips
	}
	return nil
}

func (x *NotifyMessageBody) GetMessageTopTips() *NotifyMessageTopTips {
	if x != nil {
		return x.MessageTopTips
	}
	return nil
}

func (x *NotifyMessageBody) GetMessageRecall() *NotifyMessageRecall {
	if x != nil {
		return x.MessageRecall
	}
	return nil
}

func (x *NotifyMessageBody) GetSenderUin() int64 {
	if x != nil && x.SenderUin != nil {
		return *x.SenderUin
	}
	return 0
}

func (x *NotifyMessageBody) GetGeneralGrayTip() *NotifyMessageGeneralGrayTips {
	if x != nil {
		return x.GeneralGrayTip
	}
	return nil
}

func (x *NotifyMessageBody) GetGroupCurMessageSeq() int64 {
	if x != nil && x.GroupCurMessageSeq != nil {
		return *x.GroupCurMessageSeq
	}
	return 0
}

func (x *NotifyMessageBody) GetSysdbMessageId() int64 {
	if x != nil && x.SysdbMessageId != nil {
		return *x.SysdbMessageId
	}
	return 0
}

type NotifyMessageGeneralGrayTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusiType          uint64                               `protobuf:"varint,1,opt,name=busi_type,json=busiType,proto3" json:"busi_type,omitempty"`
	BusiId            uint64                               `protobuf:"varint,2,opt,name=busi_id,json=busiId,proto3" json:"busi_id,omitempty"`
	CtrlFlag          uint32                               `protobuf:"varint,3,opt,name=ctrl_flag,json=ctrlFlag,proto3" json:"ctrl_flag,omitempty"`
	C2CType           uint32                               `protobuf:"varint,4,opt,name=c2c_type,json=c2cType,proto3" json:"c2c_type,omitempty"`
	ServiceType       uint32                               `protobuf:"varint,5,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	TemplateId        uint64                               `protobuf:"varint,6,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	TemplateParameter []*NotifyMessageGeneralGrayTips_Item `protobuf:"bytes,7,rep,name=template_parameter,json=templateParameter,proto3" json:"template_parameter,omitempty"`
	Content           string                               `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	TipsSeqId         uint64                               `protobuf:"varint,9,opt,name=tips_seq_id,json=tipsSeqId,proto3" json:"tips_seq_id,omitempty"`
	PbReserve         []byte                               `protobuf:"bytes,10,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`
}

func (x *NotifyMessageGeneralGrayTips) Reset() {
	*x = NotifyMessageGeneralGrayTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyMessageGeneralGrayTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyMessageGeneralGrayTips) ProtoMessage() {}

func (x *NotifyMessageGeneralGrayTips) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyMessageGeneralGrayTips.ProtoReflect.Descriptor instead.
func (*NotifyMessageGeneralGrayTips) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{15}
}

func (x *NotifyMessageGeneralGrayTips) GetBusiType() uint64 {
	if x != nil {
		return x.BusiType
	}
	return 0
}

func (x *NotifyMessageGeneralGrayTips) GetBusiId() uint64 {
	if x != nil {
		return x.BusiId
	}
	return 0
}

func (x *NotifyMessageGeneralGrayTips) GetCtrlFlag() uint32 {
	if x != nil {
		return x.CtrlFlag
	}
	return 0
}

func (x *NotifyMessageGeneralGrayTips) GetC2CType() uint32 {
	if x != nil {
		return x.C2CType
	}
	return 0
}

func (x *NotifyMessageGeneralGrayTips) GetServiceType() uint32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *NotifyMessageGeneralGrayTips) GetTemplateId() uint64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *NotifyMessageGeneralGrayTips) GetTemplateParameter() []*NotifyMessageGeneralGrayTips_Item {
	if x != nil {
		return x.TemplateParameter
	}
	return nil
}

func (x *NotifyMessageGeneralGrayTips) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NotifyMessageGeneralGrayTips) GetTipsSeqId() uint64 {
	if x != nil {
		return x.TipsSeqId
	}
	return 0
}

func (x *NotifyMessageGeneralGrayTips) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

type NotifyMessageGrayTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowLastest       *uint32 `protobuf:"varint,1,opt,name=show_lastest,json=showLastest,proto3,oneof" json:"show_lastest,omitempty"`
	Content           []byte  `protobuf:"bytes,2,opt,name=content,proto3,oneof" json:"content,omitempty"`
	Remind            *uint32 `protobuf:"varint,3,opt,name=remind,proto3,oneof" json:"remind,omitempty"`
	Brief             []byte  `protobuf:"bytes,4,opt,name=brief,proto3,oneof" json:"brief,omitempty"`
	ReceiverUin       uint64  `protobuf:"varint,5,opt,name=receiver_uin,json=receiverUin,proto3" json:"receiver_uin,omitempty"`
	ReliaoAdminOption uint32  `protobuf:"varint,6,opt,name=reliao_admin_option,json=reliaoAdminOption,proto3" json:"reliao_admin_option,omitempty"`
	RobotGroupOption  uint32  `protobuf:"varint,7,opt,name=robot_group_option,json=robotGroupOption,proto3" json:"robot_group_option,omitempty"`
}

func (x *NotifyMessageGrayTips) Reset() {
	*x = NotifyMessageGrayTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyMessageGrayTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyMessageGrayTips) ProtoMessage() {}

func (x *NotifyMessageGrayTips) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyMessageGrayTips.ProtoReflect.Descriptor instead.
func (*NotifyMessageGrayTips) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{16}
}

func (x *NotifyMessageGrayTips) GetShowLastest() uint32 {
	if x != nil && x.ShowLastest != nil {
		return *x.ShowLastest
	}
	return 0
}

func (x *NotifyMessageGrayTips) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *NotifyMessageGrayTips) GetRemind() uint32 {
	if x != nil && x.Remind != nil {
		return *x.Remind
	}
	return 0
}

func (x *NotifyMessageGrayTips) GetBrief() []byte {
	if x != nil {
		return x.Brief
	}
	return nil
}

func (x *NotifyMessageGrayTips) GetReceiverUin() uint64 {
	if x != nil {
		return x.ReceiverUin
	}
	return 0
}

func (x *NotifyMessageGrayTips) GetReliaoAdminOption() uint32 {
	if x != nil {
		return x.ReliaoAdminOption
	}
	return 0
}

func (x *NotifyMessageGrayTips) GetRobotGroupOption() uint32 {
	if x != nil {
		return x.RobotGroupOption
	}
	return 0
}

type NotifyMessageRecall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin                 int64                       `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`
	Nickname            []byte                      `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	RecalledMessageList []*NotifyMessageRecall_Item `protobuf:"bytes,3,rep,name=recalled_message_list,json=recalledMessageList,proto3" json:"recalled_message_list,omitempty"`
	ReminderContent     string                      `protobuf:"bytes,4,opt,name=reminder_content,json=reminderContent,proto3" json:"reminder_content,omitempty"`
	UserDefine          []byte                      `protobuf:"bytes,5,opt,name=user_define,json=userDefine,proto3" json:"user_define,omitempty"`
	GroupType           int32                       `protobuf:"varint,6,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"`
	OpType              int32                       `protobuf:"varint,7,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty"`
	AdminUin            int64                       `protobuf:"varint,8,opt,name=admin_uin,json=adminUin,proto3" json:"admin_uin,omitempty"`
	MessageWordingInfo  *WithdrawWordingInfo        `protobuf:"bytes,9,opt,name=message_wording_info,json=messageWordingInfo,proto3" json:"message_wording_info,omitempty"`
}

func (x *NotifyMessageRecall) Reset() {
	*x = NotifyMessageRecall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyMessageRecall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyMessageRecall) ProtoMessage() {}

func (x *NotifyMessageRecall) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyMessageRecall.ProtoReflect.Descriptor instead.
func (*NotifyMessageRecall) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{17}
}

func (x *NotifyMessageRecall) GetUin() int64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *NotifyMessageRecall) GetNickname() []byte {
	if x != nil {
		return x.Nickname
	}
	return nil
}

func (x *NotifyMessageRecall) GetRecalledMessageList() []*NotifyMessageRecall_Item {
	if x != nil {
		return x.RecalledMessageList
	}
	return nil
}

func (x *NotifyMessageRecall) GetReminderContent() string {
	if x != nil {
		return x.ReminderContent
	}
	return ""
}

func (x *NotifyMessageRecall) GetUserDefine() []byte {
	if x != nil {
		return x.UserDefine
	}
	return nil
}

func (x *NotifyMessageRecall) GetGroupType() int32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

func (x *NotifyMessageRecall) GetOpType() int32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

func (x *NotifyMessageRecall) GetAdminUin() int64 {
	if x != nil {
		return x.AdminUin
	}
	return 0
}

func (x *NotifyMessageRecall) GetMessageWordingInfo() *WithdrawWordingInfo {
	if x != nil {
		return x.MessageWordingInfo
	}
	return nil
}

type NotifyMessageTopTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte  `protobuf:"bytes,1,opt,name=content,proto3,oneof" json:"content,omitempty"`
	Icon    *uint32 `protobuf:"varint,2,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	Action  *uint32 `protobuf:"varint,3,opt,name=action,proto3,oneof" json:"action,omitempty"` // Enum
	Url     []byte  `protobuf:"bytes,4,opt,name=url,proto3,oneof" json:"url,omitempty"`
	Data    []byte  `protobuf:"bytes,5,opt,name=data,proto3,oneof" json:"data,omitempty"`
	DataI   []byte  `protobuf:"bytes,6,opt,name=data_i,json=dataI,proto3,oneof" json:"data_i,omitempty"`
	DataA   []byte  `protobuf:"bytes,7,opt,name=data_a,json=dataA,proto3,oneof" json:"data_a,omitempty"`
	DataP   []byte  `protobuf:"bytes,8,opt,name=data_p,json=dataP,proto3,oneof" json:"data_p,omitempty"`
}

func (x *NotifyMessageTopTips) Reset() {
	*x = NotifyMessageTopTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyMessageTopTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyMessageTopTips) ProtoMessage() {}

func (x *NotifyMessageTopTips) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyMessageTopTips.ProtoReflect.Descriptor instead.
func (*NotifyMessageTopTips) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{18}
}

func (x *NotifyMessageTopTips) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *NotifyMessageTopTips) GetIcon() uint32 {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return 0
}

func (x *NotifyMessageTopTips) GetAction() uint32 {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return 0
}

func (x *NotifyMessageTopTips) GetUrl() []byte {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *NotifyMessageTopTips) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *NotifyMessageTopTips) GetDataI() []byte {
	if x != nil {
		return x.DataI
	}
	return nil
}

func (x *NotifyMessageTopTips) GetDataA() []byte {
	if x != nil {
		return x.DataA
	}
	return nil
}

func (x *NotifyMessageTopTips) GetDataP() []byte {
	if x != nil {
		return x.DataP
	}
	return nil
}

type TryUploadImageResponse_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownDomain      string `protobuf:"bytes,1,opt,name=down_domain,json=downDomain,proto3" json:"down_domain,omitempty"`
	ThumbDownUrl    string `protobuf:"bytes,2,opt,name=thumb_down_url,json=thumbDownUrl,proto3" json:"thumb_down_url,omitempty"`
	OriginalDownUrl string `protobuf:"bytes,3,opt,name=original_down_url,json=originalDownUrl,proto3" json:"original_down_url,omitempty"`
	BigDownUrl      string `protobuf:"bytes,4,opt,name=big_down_url,json=bigDownUrl,proto3" json:"big_down_url,omitempty"`
	FileResouceId   string `protobuf:"bytes,5,opt,name=file_resouce_id,json=fileResouceId,proto3" json:"file_resouce_id,omitempty"`
}

func (x *TryUploadImageResponse_Info) Reset() {
	*x = TryUploadImageResponse_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TryUploadImageResponse_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TryUploadImageResponse_Info) ProtoMessage() {}

func (x *TryUploadImageResponse_Info) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TryUploadImageResponse_Info.ProtoReflect.Descriptor instead.
func (*TryUploadImageResponse_Info) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{11, 0}
}

func (x *TryUploadImageResponse_Info) GetDownDomain() string {
	if x != nil {
		return x.DownDomain
	}
	return ""
}

func (x *TryUploadImageResponse_Info) GetThumbDownUrl() string {
	if x != nil {
		return x.ThumbDownUrl
	}
	return ""
}

func (x *TryUploadImageResponse_Info) GetOriginalDownUrl() string {
	if x != nil {
		return x.OriginalDownUrl
	}
	return ""
}

func (x *TryUploadImageResponse_Info) GetBigDownUrl() string {
	if x != nil {
		return x.BigDownUrl
	}
	return ""
}

func (x *TryUploadImageResponse_Info) GetFileResouceId() string {
	if x != nil {
		return x.FileResouceId
	}
	return ""
}

type NotifyMessageGeneralGrayTips_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NotifyMessageGeneralGrayTips_Item) Reset() {
	*x = NotifyMessageGeneralGrayTips_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyMessageGeneralGrayTips_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyMessageGeneralGrayTips_Item) ProtoMessage() {}

func (x *NotifyMessageGeneralGrayTips_Item) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyMessageGeneralGrayTips_Item.ProtoReflect.Descriptor instead.
func (*NotifyMessageGeneralGrayTips_Item) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{15, 0}
}

func (x *NotifyMessageGeneralGrayTips_Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NotifyMessageGeneralGrayTips_Item) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type NotifyMessageRecall_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq     int32 `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	Time    int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Random  int32 `protobuf:"varint,3,opt,name=random,proto3" json:"random,omitempty"`
	Type    int32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Flag    int32 `protobuf:"varint,5,opt,name=flag,proto3" json:"flag,omitempty"`
	FromUin int64 `protobuf:"varint,6,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`
	IsAnno  int32 `protobuf:"varint,7,opt,name=is_anno,json=isAnno,proto3" json:"is_anno,omitempty"`
}

func (x *NotifyMessageRecall_Item) Reset() {
	*x = NotifyMessageRecall_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyMessageRecall_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyMessageRecall_Item) ProtoMessage() {}

func (x *NotifyMessageRecall_Item) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyMessageRecall_Item.ProtoReflect.Descriptor instead.
func (*NotifyMessageRecall_Item) Descriptor() ([]byte, []int) {
	return file_cmd_proto_rawDescGZIP(), []int{17, 0}
}

func (x *NotifyMessageRecall_Item) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *NotifyMessageRecall_Item) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *NotifyMessageRecall_Item) GetRandom() int32 {
	if x != nil {
		return x.Random
	}
	return 0
}

func (x *NotifyMessageRecall_Item) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NotifyMessageRecall_Item) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *NotifyMessageRecall_Item) GetFromUin() int64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *NotifyMessageRecall_Item) GetIsAnno() int32 {
	if x != nil {
		return x.IsAnno
	}
	return 0
}

var File_cmd_proto protoreflect.FileDescriptor

var file_cmd_proto_rawDesc = []byte{
	0x0a, 0x09, 0x63, 0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f, 0x03, 0x0a, 0x10, 0x43,
	0x6d, 0x64, 0x30, 0x78, 0x30, 0x33, 0x38, 0x38, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x75, 0x62,
	0x43, 0x6d, 0x64, 0x12, 0x40, 0x0a, 0x10, 0x74, 0x72, 0x79, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x54, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x74, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0b, 0x67, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x3a,
	0x0a, 0x0e, 0x74, 0x72, 0x79, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x74, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x54, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x50, 0x54, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x74, 0x72,
	0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x74, 0x74, 0x12, 0x31, 0x0a, 0x0b, 0x67, 0x65,
	0x74, 0x5f, 0x70, 0x74, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x54, 0x54, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x09, 0x67, 0x65, 0x74, 0x50, 0x74, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09,
	0x64, 0x65, 0x6c, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xea, 0x02, 0x0a,
	0x11, 0x43, 0x6d, 0x64, 0x30, 0x78, 0x30, 0x33, 0x38, 0x38, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x75, 0x62, 0x43, 0x6d, 0x64, 0x12, 0x41, 0x0a, 0x10, 0x74, 0x72, 0x79, 0x5f,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x74, 0x72, 0x79,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x67,
	0x65, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x67, 0x65, 0x74, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x3b, 0x0a, 0x0e, 0x74, 0x72, 0x79, 0x5f, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x70, 0x74, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x54, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x54, 0x54, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x74, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x74, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x74, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x54, 0x54,
	0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x67, 0x65, 0x74,
	0x50, 0x74, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x31, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x64, 0x65, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x54, 0x54, 0x55, 0x52, 0x4c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x54,
	0x54, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa0, 0x01, 0x0a,
	0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x30, 0x0a, 0x08, 0x49, 0x50, 0x76, 0x36, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x70, 0x36, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x69, 0x70, 0x36, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x22, 0x99, 0x05, 0x0a, 0x15, 0x54, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x72,
	0x63, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x72, 0x63,
	0x55, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x73, 0x72, 0x63, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x62, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x70, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x5f,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64,
	0x73, 0x74, 0x55, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x22, 0xdb, 0x05,
	0x0a, 0x16, 0x54, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66,
	0x61, 0x69, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x08, 0x69, 0x6d, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x69, 0x6d, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69,
	0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4b, 0x65,
	0x79, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x20,
	0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x62, 0x69, 0x67, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x42, 0x69, 0x67, 0x43, 0x68, 0x61, 0x6e,
	0x12, 0x28, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x70, 0x36, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x49, 0x50, 0x76, 0x36, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x70, 0x36, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x36, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x36, 0x12, 0x3a, 0x0a, 0x09, 0x69, 0x6e, 0x66,
	0x6f, 0x34, 0x62, 0x75, 0x73, 0x69, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x54,
	0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x69, 0x6e, 0x66, 0x6f,
	0x34, 0x62, 0x75, 0x73, 0x69, 0x1a, 0xc3, 0x01, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x77, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x24, 0x0a, 0x0e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x44, 0x6f,
	0x77, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x55, 0x72,
	0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x69, 0x67, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x67, 0x44, 0x6f, 0x77, 0x6e,
	0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x63, 0x65, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x54,
	0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x54, 0x54, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x54, 0x72, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x54, 0x54, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9e, 0x06, 0x0a, 0x11, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x01, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x0e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x67,
	0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x72,
	0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x48, 0x04, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x10,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x70, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x70, 0x54, 0x69, 0x70, 0x73, 0x48, 0x05, 0x52,
	0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x70, 0x54, 0x69, 0x70, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x40, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x63, 0x61, 0x6c, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c,
	0x48, 0x06, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x75,
	0x69, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x48, 0x07, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x55, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x10, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70,
	0x73, 0x48, 0x08, 0x52, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x79,
	0x54, 0x69, 0x70, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x15, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x63, 0x75, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x18,
	0x25, 0x20, 0x01, 0x28, 0x03, 0x48, 0x09, 0x52, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x75,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x71, 0x88, 0x01, 0x01, 0x12, 0x2d,
	0x0a, 0x10, 0x73, 0x79, 0x73, 0x64, 0x62, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x27, 0x20, 0x01, 0x28, 0x03, 0x48, 0x0a, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x64,
	0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x73,
	0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x70,
	0x5f, 0x74, 0x69, 0x70, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x42, 0x18, 0x0a, 0x16,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x75, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x79, 0x73, 0x64, 0x62,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x22, 0xae, 0x03, 0x0a, 0x1c,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x75, 0x73, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x62, 0x75, 0x73, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x73,
	0x69, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x62, 0x75, 0x73, 0x69,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x74, 0x72, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x74, 0x72, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x32, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x63, 0x32, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x51,
	0x0a, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x11,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x74,
	0x69, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x74, 0x69, 0x70, 0x73, 0x53, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x62, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x1a, 0x30, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc9, 0x02, 0x0a,
	0x15, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x72,
	0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c,
	0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0b,
	0x73, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x01, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x62, 0x72,
	0x69, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x03, 0x52, 0x05, 0x62, 0x72, 0x69,
	0x65, 0x66, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x6c, 0x69,
	0x61, 0x6f, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x72, 0x65, 0x6c, 0x69, 0x61, 0x6f, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x6c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x22, 0x9e, 0x04, 0x0a, 0x13, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4d,
	0x0a, 0x15, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63,
	0x61, 0x6c, 0x6c, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x13, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x10, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x69, 0x6e, 0x12, 0x46,
	0x0a, 0x14, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xa0, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x69,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x69, 0x73, 0x41, 0x6e, 0x6e, 0x6f, 0x22, 0xc1, 0x02, 0x0a, 0x14, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x70, 0x54, 0x69,
	0x70, 0x73, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x01, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x03, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x04, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x05, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x49,
	0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x06, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x41, 0x88, 0x01, 0x01, 0x12,
	0x1a, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x07, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x50, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x75, 0x72, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x61, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x42, 0x07, 0x5a,
	0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_proto_rawDescOnce sync.Once
	file_cmd_proto_rawDescData = file_cmd_proto_rawDesc
)

func file_cmd_proto_rawDescGZIP() []byte {
	file_cmd_proto_rawDescOnce.Do(func() {
		file_cmd_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_proto_rawDescData)
	})
	return file_cmd_proto_rawDescData
}

var file_cmd_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_cmd_proto_goTypes = []interface{}{
	(*Cmd0X0388Request)(nil),                  // 0: Cmd0x0388Request
	(*Cmd0X0388Response)(nil),                 // 1: Cmd0x0388Response
	(*DeleteImageRequest)(nil),                // 2: DeleteImageRequest
	(*DeleteImageResponse)(nil),               // 3: DeleteImageResponse
	(*GetImageURLRequest)(nil),                // 4: GetImageURLRequest
	(*GetImageURLResponse)(nil),               // 5: GetImageURLResponse
	(*GetPTTURLRequest)(nil),                  // 6: GetPTTURLRequest
	(*GetPTTURLResponse)(nil),                 // 7: GetPTTURLResponse
	(*ImageInfo)(nil),                         // 8: ImageInfo
	(*IPv6Info)(nil),                          // 9: IPv6Info
	(*TryUploadImageRequest)(nil),             // 10: TryUploadImageRequest
	(*TryUploadImageResponse)(nil),            // 11: TryUploadImageResponse
	(*TryUploadPTTRequest)(nil),               // 12: TryUploadPTTRequest
	(*TryUploadPTTResponse)(nil),              // 13: TryUploadPTTResponse
	(*NotifyMessageBody)(nil),                 // 14: NotifyMessageBody
	(*NotifyMessageGeneralGrayTips)(nil),      // 15: NotifyMessageGeneralGrayTips
	(*NotifyMessageGrayTips)(nil),             // 16: NotifyMessageGrayTips
	(*NotifyMessageRecall)(nil),               // 17: NotifyMessageRecall
	(*NotifyMessageTopTips)(nil),              // 18: NotifyMessageTopTips
	(*TryUploadImageResponse_Info)(nil),       // 19: TryUploadImageResponse.Info
	(*NotifyMessageGeneralGrayTips_Item)(nil), // 20: NotifyMessageGeneralGrayTips.Item
	(*NotifyMessageRecall_Item)(nil),          // 21: NotifyMessageRecall.Item
	(*WithdrawWordingInfo)(nil),               // 22: WithdrawWordingInfo
}
var file_cmd_proto_depIdxs = []int32{
	10, // 0: Cmd0x0388Request.try_upload_image:type_name -> TryUploadImageRequest
	4,  // 1: Cmd0x0388Request.get_image_url:type_name -> GetImageURLRequest
	12, // 2: Cmd0x0388Request.try_upload_ptt:type_name -> TryUploadPTTRequest
	6,  // 3: Cmd0x0388Request.get_ptt_url:type_name -> GetPTTURLRequest
	2,  // 4: Cmd0x0388Request.del_image:type_name -> DeleteImageRequest
	11, // 5: Cmd0x0388Response.try_upload_image:type_name -> TryUploadImageResponse
	5,  // 6: Cmd0x0388Response.get_image_url:type_name -> GetImageURLResponse
	13, // 7: Cmd0x0388Response.try_upload_ptt:type_name -> TryUploadPTTResponse
	7,  // 8: Cmd0x0388Response.get_ptt_url:type_name -> GetPTTURLResponse
	3,  // 9: Cmd0x0388Response.del_image:type_name -> DeleteImageResponse
	8,  // 10: TryUploadImageResponse.img_info:type_name -> ImageInfo
	9,  // 11: TryUploadImageResponse.upload_ip6:type_name -> IPv6Info
	19, // 12: TryUploadImageResponse.info4busi:type_name -> TryUploadImageResponse.Info
	16, // 13: NotifyMessageBody.message_gray_tips:type_name -> NotifyMessageGrayTips
	18, // 14: NotifyMessageBody.message_top_tips:type_name -> NotifyMessageTopTips
	17, // 15: NotifyMessageBody.message_recall:type_name -> NotifyMessageRecall
	15, // 16: NotifyMessageBody.general_gray_tip:type_name -> NotifyMessageGeneralGrayTips
	20, // 17: NotifyMessageGeneralGrayTips.template_parameter:type_name -> NotifyMessageGeneralGrayTips.Item
	21, // 18: NotifyMessageRecall.recalled_message_list:type_name -> NotifyMessageRecall.Item
	22, // 19: NotifyMessageRecall.message_wording_info:type_name -> WithdrawWordingInfo
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_cmd_proto_init() }
func file_cmd_proto_init() {
	if File_cmd_proto != nil {
		return
	}
	file_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cmd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X0388Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd0X0388Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetImageURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetImageURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPTTURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPTTURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPv6Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TryUploadImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TryUploadImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TryUploadPTTRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TryUploadPTTResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyMessageBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyMessageGeneralGrayTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyMessageGrayTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyMessageRecall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyMessageTopTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TryUploadImageResponse_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyMessageGeneralGrayTips_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyMessageRecall_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cmd_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_cmd_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_cmd_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmd_proto_goTypes,
		DependencyIndexes: file_cmd_proto_depIdxs,
		MessageInfos:      file_cmd_proto_msgTypes,
	}.Build()
	File_cmd_proto = out.File
	file_cmd_proto_rawDesc = nil
	file_cmd_proto_goTypes = nil
	file_cmd_proto_depIdxs = nil
}
