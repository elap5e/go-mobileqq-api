// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: message.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// hummer_commelem
type CommonElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonElement) Reset() {
	*x = CommonElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement) ProtoMessage() {}

func (x *CommonElement) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement.ProtoReflect.Descriptor instead.
func (*CommonElement) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

// im_msg_body
type IMMessageBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IMMessageBody) Reset() {
	*x = IMMessageBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody) ProtoMessage() {}

func (x *IMMessageBody) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody.ProtoReflect.Descriptor instead.
func (*IMMessageBody) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

// im_msg_head
type IMMessageHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IMMessageHead) Reset() {
	*x = IMMessageHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageHead) ProtoMessage() {}

func (x *IMMessageHead) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageHead.ProtoReflect.Descriptor instead.
func (*IMMessageHead) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

// im_receipt
type IMReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IMReceipt) Reset() {
	*x = IMReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMReceipt) ProtoMessage() {}

func (x *IMReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMReceipt.ProtoReflect.Descriptor instead.
func (*IMReceipt) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

// msg_comm
type MessageCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageCommon) Reset() {
	*x = MessageCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCommon) ProtoMessage() {}

func (x *MessageCommon) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCommon.ProtoReflect.Descriptor instead.
func (*MessageCommon) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4}
}

// msg_ctrl
type MessageControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgFlag     uint32                      `protobuf:"varint,1,opt,name=msg_flag,json=msgFlag,proto3" json:"msg_flag,omitempty"`            // "msg_flag"
	ReserveInfo *MessageControl_ReserveInfo `protobuf:"bytes,2,opt,name=reserve_info,json=reserveInfo,proto3" json:"reserve_info,omitempty"` // "resv_resv_info"
}

func (x *MessageControl) Reset() {
	*x = MessageControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageControl) ProtoMessage() {}

func (x *MessageControl) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageControl.ProtoReflect.Descriptor instead.
func (*MessageControl) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{5}
}

func (x *MessageControl) GetMsgFlag() uint32 {
	if x != nil {
		return x.MsgFlag
	}
	return 0
}

func (x *MessageControl) GetReserveInfo() *MessageControl_ReserveInfo {
	if x != nil {
		return x.ReserveInfo
	}
	return nil
}

// msg_svc
type MessageService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageService) Reset() {
	*x = MessageService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService) ProtoMessage() {}

func (x *MessageService) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService.ProtoReflect.Descriptor instead.
func (*MessageService) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6}
}

// msgtype0xa6
type MessageType00A6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageType00A6) Reset() {
	*x = MessageType00A6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType00A6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType00A6) ProtoMessage() {}

func (x *MessageType00A6) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType00A6.ProtoReflect.Descriptor instead.
func (*MessageType00A6) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7}
}

// msgtype0x210
type MessageType0210 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageType0210) Reset() {
	*x = MessageType0210{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210) ProtoMessage() {}

func (x *MessageType0210) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210.ProtoReflect.Descriptor instead.
func (*MessageType0210) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8}
}

// MsgElemInfo_servtype1
type CommonElement_ServiceType1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardId        []byte `protobuf:"bytes,1,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`                       // "bytes_reward_id"
	SenderUin       uint64 `protobuf:"varint,2,opt,name=sender_uin,json=senderUin,proto3" json:"sender_uin,omitempty"`                   // "uint64_sender_uin"
	PicType         uint32 `protobuf:"varint,3,opt,name=pic_type,json=picType,proto3" json:"pic_type,omitempty"`                         // "uint32_pic_type"
	RewardMoney     uint32 `protobuf:"varint,4,opt,name=reward_money,json=rewardMoney,proto3" json:"reward_money,omitempty"`             // "uint32_reward_money"
	Url             []byte `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`                                                 // "bytes_url"
	Content         []byte `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`                                         // "bytes_content"
	CreateTimestamp uint32 `protobuf:"varint,7,opt,name=create_timestamp,json=createTimestamp,proto3" json:"create_timestamp,omitempty"` // "uint32_create_timestamp"
	Status          uint32 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`                                          // "uint32_status"
	Size            uint32 `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`                                              // "uint32_size"
	VideoDuration   uint32 `protobuf:"varint,10,opt,name=video_duration,json=videoDuration,proto3" json:"video_duration,omitempty"`      // "uint32_video_duration"
	Seq             uint64 `protobuf:"varint,11,opt,name=seq,proto3" json:"seq,omitempty"`                                               // "uint64_seq"
	RewardTypeExt   uint32 `protobuf:"varint,12,opt,name=reward_type_ext,json=rewardTypeExt,proto3" json:"reward_type_ext,omitempty"`    // "uint32_reward_type_ext"
}

func (x *CommonElement_ServiceType1) Reset() {
	*x = CommonElement_ServiceType1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType1) ProtoMessage() {}

func (x *CommonElement_ServiceType1) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType1.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType1) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CommonElement_ServiceType1) GetRewardId() []byte {
	if x != nil {
		return x.RewardId
	}
	return nil
}

func (x *CommonElement_ServiceType1) GetSenderUin() uint64 {
	if x != nil {
		return x.SenderUin
	}
	return 0
}

func (x *CommonElement_ServiceType1) GetPicType() uint32 {
	if x != nil {
		return x.PicType
	}
	return 0
}

func (x *CommonElement_ServiceType1) GetRewardMoney() uint32 {
	if x != nil {
		return x.RewardMoney
	}
	return 0
}

func (x *CommonElement_ServiceType1) GetUrl() []byte {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *CommonElement_ServiceType1) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *CommonElement_ServiceType1) GetCreateTimestamp() uint32 {
	if x != nil {
		return x.CreateTimestamp
	}
	return 0
}

func (x *CommonElement_ServiceType1) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CommonElement_ServiceType1) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CommonElement_ServiceType1) GetVideoDuration() uint32 {
	if x != nil {
		return x.VideoDuration
	}
	return 0
}

func (x *CommonElement_ServiceType1) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *CommonElement_ServiceType1) GetRewardTypeExt() uint32 {
	if x != nil {
		return x.RewardTypeExt
	}
	return 0
}

// MsgElemInfo_servtype11
type CommonElement_ServiceType11 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResID            []byte `protobuf:"bytes,1,opt,name=resID,proto3" json:"resID,omitempty"`                                                // "bytes_resID"
	ResMD5           []byte `protobuf:"bytes,2,opt,name=resMD5,proto3" json:"resMD5,omitempty"`                                              // "bytes_resMD5"
	Reserve_Info1    []byte `protobuf:"bytes,3,opt,name=reserve_Info1,json=reserveInfo1,proto3" json:"reserve_Info1,omitempty"`              // "reserve_Info1"
	Reserve_Info2    []byte `protobuf:"bytes,4,opt,name=reserve_Info2,json=reserveInfo2,proto3" json:"reserve_Info2,omitempty"`              // "reserve_Info2"
	DoodleDataOffset uint32 `protobuf:"varint,5,opt,name=doodleData_offset,json=doodleDataOffset,proto3" json:"doodleData_offset,omitempty"` // "uint32_doodleData_offset"
	DoodleGifId      uint32 `protobuf:"varint,6,opt,name=doodle_gif_id,json=doodleGifId,proto3" json:"doodle_gif_id,omitempty"`              // "uint32_doodle_gif_id"
	DoodleUrl        []byte `protobuf:"bytes,7,opt,name=Doodle_url,json=DoodleUrl,proto3" json:"Doodle_url,omitempty"`                       // "bytes_Doodle_url"
	DoodleMd5        []byte `protobuf:"bytes,8,opt,name=Doodle_md5,json=DoodleMd5,proto3" json:"Doodle_md5,omitempty"`                       // "bytes_Doodle_md5"
}

func (x *CommonElement_ServiceType11) Reset() {
	*x = CommonElement_ServiceType11{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType11) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType11) ProtoMessage() {}

func (x *CommonElement_ServiceType11) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType11.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType11) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 1}
}

func (x *CommonElement_ServiceType11) GetResID() []byte {
	if x != nil {
		return x.ResID
	}
	return nil
}

func (x *CommonElement_ServiceType11) GetResMD5() []byte {
	if x != nil {
		return x.ResMD5
	}
	return nil
}

func (x *CommonElement_ServiceType11) GetReserve_Info1() []byte {
	if x != nil {
		return x.Reserve_Info1
	}
	return nil
}

func (x *CommonElement_ServiceType11) GetReserve_Info2() []byte {
	if x != nil {
		return x.Reserve_Info2
	}
	return nil
}

func (x *CommonElement_ServiceType11) GetDoodleDataOffset() uint32 {
	if x != nil {
		return x.DoodleDataOffset
	}
	return 0
}

func (x *CommonElement_ServiceType11) GetDoodleGifId() uint32 {
	if x != nil {
		return x.DoodleGifId
	}
	return 0
}

func (x *CommonElement_ServiceType11) GetDoodleUrl() []byte {
	if x != nil {
		return x.DoodleUrl
	}
	return nil
}

func (x *CommonElement_ServiceType11) GetDoodleMd5() []byte {
	if x != nil {
		return x.DoodleMd5
	}
	return nil
}

// MsgElemInfo_servtype13
type CommonElement_ServiceType13 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysHeadId uint32 `protobuf:"varint,1,opt,name=sys_head_id,json=sysHeadId,proto3" json:"sys_head_id,omitempty"` // "uint32_sys_head_id"
	HeadFlag  uint32 `protobuf:"varint,2,opt,name=head_flag,json=headFlag,proto3" json:"head_flag,omitempty"`      // "uint32_head_flag"
}

func (x *CommonElement_ServiceType13) Reset() {
	*x = CommonElement_ServiceType13{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType13) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType13) ProtoMessage() {}

func (x *CommonElement_ServiceType13) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType13.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType13) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 2}
}

func (x *CommonElement_ServiceType13) GetSysHeadId() uint32 {
	if x != nil {
		return x.SysHeadId
	}
	return 0
}

func (x *CommonElement_ServiceType13) GetHeadFlag() uint32 {
	if x != nil {
		return x.HeadFlag
	}
	return 0
}

// MsgElemInfo_servtype14
type CommonElement_ServiceType14 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                     // "uint32_id"
	Reserve_Info []byte `protobuf:"bytes,2,opt,name=reserve_Info,json=reserveInfo,proto3" json:"reserve_Info,omitempty"` // "reserve_Info"
}

func (x *CommonElement_ServiceType14) Reset() {
	*x = CommonElement_ServiceType14{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType14) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType14) ProtoMessage() {}

func (x *CommonElement_ServiceType14) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType14.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType14) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 3}
}

func (x *CommonElement_ServiceType14) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommonElement_ServiceType14) GetReserve_Info() []byte {
	if x != nil {
		return x.Reserve_Info
	}
	return nil
}

// MsgElemInfo_servtype15
type CommonElement_ServiceType15 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid            []byte `protobuf:"bytes,1,opt,name=vid,proto3" json:"vid,omitempty"`                                             // "vid"
	Cover          []byte `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`                                         // "cover"
	Title          []byte `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                                         // "title"
	Summary        []byte `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`                                     // "summary"
	CreateTime     uint64 `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`                              // "createTime"
	CommentContent []byte `protobuf:"bytes,6,opt,name=comment_content,json=commentContent,proto3" json:"comment_content,omitempty"` // "comment_content"
	Author         uint64 `protobuf:"varint,7,opt,name=author,proto3" json:"author,omitempty"`                                      // "author"
	CtrVersion     uint32 `protobuf:"varint,8,opt,name=ctr_version,json=ctrVersion,proto3" json:"ctr_version,omitempty"`            // "ctr_version"
}

func (x *CommonElement_ServiceType15) Reset() {
	*x = CommonElement_ServiceType15{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType15) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType15) ProtoMessage() {}

func (x *CommonElement_ServiceType15) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType15.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType15) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 4}
}

func (x *CommonElement_ServiceType15) GetVid() []byte {
	if x != nil {
		return x.Vid
	}
	return nil
}

func (x *CommonElement_ServiceType15) GetCover() []byte {
	if x != nil {
		return x.Cover
	}
	return nil
}

func (x *CommonElement_ServiceType15) GetTitle() []byte {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *CommonElement_ServiceType15) GetSummary() []byte {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *CommonElement_ServiceType15) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CommonElement_ServiceType15) GetCommentContent() []byte {
	if x != nil {
		return x.CommentContent
	}
	return nil
}

func (x *CommonElement_ServiceType15) GetAuthor() uint64 {
	if x != nil {
		return x.Author
	}
	return 0
}

func (x *CommonElement_ServiceType15) GetCtrVersion() uint32 {
	if x != nil {
		return x.CtrVersion
	}
	return 0
}

// MsgElemInfo_servtype16
type CommonElement_ServiceType16 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid              uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                                  // "uid"
	UnionID          []byte `protobuf:"bytes,2,opt,name=unionID,proto3" json:"unionID,omitempty"`                           // "unionID"
	StoryID          []byte `protobuf:"bytes,3,opt,name=storyID,proto3" json:"storyID,omitempty"`                           // "storyID"
	Md5              []byte `protobuf:"bytes,4,opt,name=md5,proto3" json:"md5,omitempty"`                                   // "md5"
	ThumbUrl         []byte `protobuf:"bytes,5,opt,name=thumbUrl,proto3" json:"thumbUrl,omitempty"`                         // "thumbUrl"
	DoodleUrl        []byte `protobuf:"bytes,6,opt,name=doodleUrl,proto3" json:"doodleUrl,omitempty"`                       // "doodleUrl"
	VideoWidth       uint32 `protobuf:"varint,7,opt,name=videoWidth,proto3" json:"videoWidth,omitempty"`                    // "videoWidth"
	VideoHeight      uint32 `protobuf:"varint,8,opt,name=videoHeight,proto3" json:"videoHeight,omitempty"`                  // "videoHeight"
	SourceName       []byte `protobuf:"bytes,9,opt,name=sourceName,proto3" json:"sourceName,omitempty"`                     // "sourceName"
	SourceActionType []byte `protobuf:"bytes,10,opt,name=sourceActionType,proto3" json:"sourceActionType,omitempty"`        // "sourceActionType"
	SourceActionData []byte `protobuf:"bytes,11,opt,name=sourceActionData,proto3" json:"sourceActionData,omitempty"`        // "sourceActionData"
	CtrVersion       uint32 `protobuf:"varint,12,opt,name=ctr_version,json=ctrVersion,proto3" json:"ctr_version,omitempty"` // "ctr_version"
}

func (x *CommonElement_ServiceType16) Reset() {
	*x = CommonElement_ServiceType16{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType16) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType16) ProtoMessage() {}

func (x *CommonElement_ServiceType16) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType16.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType16) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 5}
}

func (x *CommonElement_ServiceType16) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CommonElement_ServiceType16) GetUnionID() []byte {
	if x != nil {
		return x.UnionID
	}
	return nil
}

func (x *CommonElement_ServiceType16) GetStoryID() []byte {
	if x != nil {
		return x.StoryID
	}
	return nil
}

func (x *CommonElement_ServiceType16) GetMd5() []byte {
	if x != nil {
		return x.Md5
	}
	return nil
}

func (x *CommonElement_ServiceType16) GetThumbUrl() []byte {
	if x != nil {
		return x.ThumbUrl
	}
	return nil
}

func (x *CommonElement_ServiceType16) GetDoodleUrl() []byte {
	if x != nil {
		return x.DoodleUrl
	}
	return nil
}

func (x *CommonElement_ServiceType16) GetVideoWidth() uint32 {
	if x != nil {
		return x.VideoWidth
	}
	return 0
}

func (x *CommonElement_ServiceType16) GetVideoHeight() uint32 {
	if x != nil {
		return x.VideoHeight
	}
	return 0
}

func (x *CommonElement_ServiceType16) GetSourceName() []byte {
	if x != nil {
		return x.SourceName
	}
	return nil
}

func (x *CommonElement_ServiceType16) GetSourceActionType() []byte {
	if x != nil {
		return x.SourceActionType
	}
	return nil
}

func (x *CommonElement_ServiceType16) GetSourceActionData() []byte {
	if x != nil {
		return x.SourceActionData
	}
	return nil
}

func (x *CommonElement_ServiceType16) GetCtrVersion() uint32 {
	if x != nil {
		return x.CtrVersion
	}
	return 0
}

// MsgElemInfo_servtype18
type CommonElement_ServiceType18 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentAmount uint64 `protobuf:"varint,1,opt,name=current_amount,json=currentAmount,proto3" json:"current_amount,omitempty"` // "uint64_current_amount"
	TotalAmount   uint64 `protobuf:"varint,2,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`       // "uint64_total_amount"
	Listid        []byte `protobuf:"bytes,3,opt,name=listid,proto3" json:"listid,omitempty"`                                     // "bytes_listid"
	AuthKey       []byte `protobuf:"bytes,4,opt,name=auth_key,json=authKey,proto3" json:"auth_key,omitempty"`                    // "bytes_auth_key"
	Number        uint32 `protobuf:"varint,5,opt,name=number,proto3" json:"number,omitempty"`                                    // "uint32_number"
}

func (x *CommonElement_ServiceType18) Reset() {
	*x = CommonElement_ServiceType18{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType18) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType18) ProtoMessage() {}

func (x *CommonElement_ServiceType18) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType18.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType18) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 6}
}

func (x *CommonElement_ServiceType18) GetCurrentAmount() uint64 {
	if x != nil {
		return x.CurrentAmount
	}
	return 0
}

func (x *CommonElement_ServiceType18) GetTotalAmount() uint64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *CommonElement_ServiceType18) GetListid() []byte {
	if x != nil {
		return x.Listid
	}
	return nil
}

func (x *CommonElement_ServiceType18) GetAuthKey() []byte {
	if x != nil {
		return x.AuthKey
	}
	return nil
}

func (x *CommonElement_ServiceType18) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

// MsgElemInfo_servtype19
type CommonElement_ServiceType19 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // "bytes_data"
}

func (x *CommonElement_ServiceType19) Reset() {
	*x = CommonElement_ServiceType19{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType19) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType19) ProtoMessage() {}

func (x *CommonElement_ServiceType19) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType19.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType19) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 7}
}

func (x *CommonElement_ServiceType19) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// MsgElemInfo_servtype2
type CommonElement_ServiceType2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PokeType        uint32 `protobuf:"varint,1,opt,name=poke_type,json=pokeType,proto3" json:"poke_type,omitempty"`                        // "uint32_poke_type"
	PokeSummary     []byte `protobuf:"bytes,2,opt,name=poke_summary,json=pokeSummary,proto3" json:"poke_summary,omitempty"`                // "bytes_poke_summary"
	DoubleHit       uint32 `protobuf:"varint,3,opt,name=double_hit,json=doubleHit,proto3" json:"double_hit,omitempty"`                     // "uint32_double_hit"
	VaspokeId       uint32 `protobuf:"varint,4,opt,name=vaspoke_id,json=vaspokeId,proto3" json:"vaspoke_id,omitempty"`                     // "uint32_vaspoke_id"
	VaspokeName     []byte `protobuf:"bytes,5,opt,name=vaspoke_name,json=vaspokeName,proto3" json:"vaspoke_name,omitempty"`                // "bytes_vaspoke_name"
	VaspokeMinver   []byte `protobuf:"bytes,6,opt,name=vaspoke_minver,json=vaspokeMinver,proto3" json:"vaspoke_minver,omitempty"`          // "bytes_vaspoke_minver"
	PokeStrength    uint32 `protobuf:"varint,7,opt,name=poke_strength,json=pokeStrength,proto3" json:"poke_strength,omitempty"`            // "uint32_poke_strength"
	MessageType     uint32 `protobuf:"varint,8,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`               // "uint32_msg_type"
	FaceBubbleCount uint32 `protobuf:"varint,9,opt,name=face_bubble_count,json=faceBubbleCount,proto3" json:"face_bubble_count,omitempty"` // "uint32_face_bubble_count"
	PokeFlag        uint32 `protobuf:"varint,10,opt,name=poke_flag,json=pokeFlag,proto3" json:"poke_flag,omitempty"`                       // "uint32_poke_flag"
}

func (x *CommonElement_ServiceType2) Reset() {
	*x = CommonElement_ServiceType2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType2) ProtoMessage() {}

func (x *CommonElement_ServiceType2) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType2.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType2) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 8}
}

func (x *CommonElement_ServiceType2) GetPokeType() uint32 {
	if x != nil {
		return x.PokeType
	}
	return 0
}

func (x *CommonElement_ServiceType2) GetPokeSummary() []byte {
	if x != nil {
		return x.PokeSummary
	}
	return nil
}

func (x *CommonElement_ServiceType2) GetDoubleHit() uint32 {
	if x != nil {
		return x.DoubleHit
	}
	return 0
}

func (x *CommonElement_ServiceType2) GetVaspokeId() uint32 {
	if x != nil {
		return x.VaspokeId
	}
	return 0
}

func (x *CommonElement_ServiceType2) GetVaspokeName() []byte {
	if x != nil {
		return x.VaspokeName
	}
	return nil
}

func (x *CommonElement_ServiceType2) GetVaspokeMinver() []byte {
	if x != nil {
		return x.VaspokeMinver
	}
	return nil
}

func (x *CommonElement_ServiceType2) GetPokeStrength() uint32 {
	if x != nil {
		return x.PokeStrength
	}
	return 0
}

func (x *CommonElement_ServiceType2) GetMessageType() uint32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *CommonElement_ServiceType2) GetFaceBubbleCount() uint32 {
	if x != nil {
		return x.FaceBubbleCount
	}
	return 0
}

func (x *CommonElement_ServiceType2) GetPokeFlag() uint32 {
	if x != nil {
		return x.PokeFlag
	}
	return 0
}

// MsgElemInfo_servtype20
type CommonElement_ServiceType20 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // "bytes_data"
}

func (x *CommonElement_ServiceType20) Reset() {
	*x = CommonElement_ServiceType20{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType20) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType20) ProtoMessage() {}

func (x *CommonElement_ServiceType20) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType20.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType20) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 9}
}

func (x *CommonElement_ServiceType20) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// MsgElemInfo_servtype21
type CommonElement_ServiceType21 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId             uint32                                           `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`                                      // "uint32_topic_id"
	ConfessorUin        uint64                                           `protobuf:"varint,2,opt,name=confessor_uin,json=confessorUin,proto3" json:"confessor_uin,omitempty"`                       // "uint64_confessor_uin"
	ConfessorNick       []byte                                           `protobuf:"bytes,3,opt,name=confessor_nick,json=confessorNick,proto3" json:"confessor_nick,omitempty"`                     // "bytes_confessor_nick"
	ConfessorSex        uint32                                           `protobuf:"varint,4,opt,name=confessor_sex,json=confessorSex,proto3" json:"confessor_sex,omitempty"`                       // "uint32_confessor_sex"
	SysmsgFlag          uint32                                           `protobuf:"varint,5,opt,name=sysmsg_flag,json=sysmsgFlag,proto3" json:"sysmsg_flag,omitempty"`                             // "uint32_sysmsg_flag"
	C2CConfessCtx       *CommonElement_ServiceType21_C2CConfessContext   `protobuf:"bytes,6,opt,name=c2c_confess_ctx,json=c2cConfessCtx,proto3" json:"c2c_confess_ctx,omitempty"`                   // "c2c_confess_ctx"
	Topic               []byte                                           `protobuf:"bytes,7,opt,name=topic,proto3" json:"topic,omitempty"`                                                          // "bytes_topic"
	ConfessTime         uint64                                           `protobuf:"varint,8,opt,name=confess_time,json=confessTime,proto3" json:"confess_time,omitempty"`                          // "uint64_confess_time"
	GroupConfessMessage *CommonElement_ServiceType21_GroupConfessMessage `protobuf:"bytes,9,opt,name=group_confess_message,json=groupConfessMessage,proto3" json:"group_confess_message,omitempty"` // "group_confess_msg"
	GroupConfessCtx     *CommonElement_ServiceType21_GroupConfessContext `protobuf:"bytes,10,opt,name=group_confess_ctx,json=groupConfessCtx,proto3" json:"group_confess_ctx,omitempty"`            // "group_confess_ctx"
}

func (x *CommonElement_ServiceType21) Reset() {
	*x = CommonElement_ServiceType21{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType21) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType21) ProtoMessage() {}

func (x *CommonElement_ServiceType21) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType21.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType21) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 10}
}

func (x *CommonElement_ServiceType21) GetTopicId() uint32 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *CommonElement_ServiceType21) GetConfessorUin() uint64 {
	if x != nil {
		return x.ConfessorUin
	}
	return 0
}

func (x *CommonElement_ServiceType21) GetConfessorNick() []byte {
	if x != nil {
		return x.ConfessorNick
	}
	return nil
}

func (x *CommonElement_ServiceType21) GetConfessorSex() uint32 {
	if x != nil {
		return x.ConfessorSex
	}
	return 0
}

func (x *CommonElement_ServiceType21) GetSysmsgFlag() uint32 {
	if x != nil {
		return x.SysmsgFlag
	}
	return 0
}

func (x *CommonElement_ServiceType21) GetC2CConfessCtx() *CommonElement_ServiceType21_C2CConfessContext {
	if x != nil {
		return x.C2CConfessCtx
	}
	return nil
}

func (x *CommonElement_ServiceType21) GetTopic() []byte {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *CommonElement_ServiceType21) GetConfessTime() uint64 {
	if x != nil {
		return x.ConfessTime
	}
	return 0
}

func (x *CommonElement_ServiceType21) GetGroupConfessMessage() *CommonElement_ServiceType21_GroupConfessMessage {
	if x != nil {
		return x.GroupConfessMessage
	}
	return nil
}

func (x *CommonElement_ServiceType21) GetGroupConfessCtx() *CommonElement_ServiceType21_GroupConfessContext {
	if x != nil {
		return x.GroupConfessCtx
	}
	return nil
}

// MsgElemInfo_servtype23
type CommonElement_ServiceType23 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaceType          uint32                       `protobuf:"varint,1,opt,name=face_type,json=faceType,proto3" json:"face_type,omitempty"`                             // "uint32_face_type"
	FaceBubbleCount   uint32                       `protobuf:"varint,2,opt,name=face_bubble_count,json=faceBubbleCount,proto3" json:"face_bubble_count,omitempty"`      // "uint32_face_bubble_count"
	FaceSummary       []byte                       `protobuf:"bytes,3,opt,name=face_summary,json=faceSummary,proto3" json:"face_summary,omitempty"`                     // "bytes_face_summary"
	Flag              uint32                       `protobuf:"varint,4,opt,name=flag,proto3" json:"flag,omitempty"`                                                     // "uint32_flag"
	Others            []byte                       `protobuf:"bytes,5,opt,name=others,proto3" json:"others,omitempty"`                                                  // "bytes_others"
	MessageYellowFace *CommonElement_ServiceType33 `protobuf:"bytes,6,opt,name=message_yellow_face,json=messageYellowFace,proto3" json:"message_yellow_face,omitempty"` // "msg_yellow_face"
}

func (x *CommonElement_ServiceType23) Reset() {
	*x = CommonElement_ServiceType23{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType23) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType23) ProtoMessage() {}

func (x *CommonElement_ServiceType23) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType23.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType23) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 11}
}

func (x *CommonElement_ServiceType23) GetFaceType() uint32 {
	if x != nil {
		return x.FaceType
	}
	return 0
}

func (x *CommonElement_ServiceType23) GetFaceBubbleCount() uint32 {
	if x != nil {
		return x.FaceBubbleCount
	}
	return 0
}

func (x *CommonElement_ServiceType23) GetFaceSummary() []byte {
	if x != nil {
		return x.FaceSummary
	}
	return nil
}

func (x *CommonElement_ServiceType23) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *CommonElement_ServiceType23) GetOthers() []byte {
	if x != nil {
		return x.Others
	}
	return nil
}

func (x *CommonElement_ServiceType23) GetMessageYellowFace() *CommonElement_ServiceType33 {
	if x != nil {
		return x.MessageYellowFace
	}
	return nil
}

// MsgElemInfo_servtype24
type CommonElement_ServiceType24 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LimitChatEnter *CommonElement_ServiceType24_LimitChatEnter `protobuf:"bytes,1,opt,name=limit_chat_enter,json=limitChatEnter,proto3" json:"limit_chat_enter,omitempty"` // "limit_chat_enter"
	LimitChatExit  *CommonElement_ServiceType24_LimitChatExit  `protobuf:"bytes,2,opt,name=limit_chat_exit,json=limitChatExit,proto3" json:"limit_chat_exit,omitempty"`    // "limit_chat_exit"
}

func (x *CommonElement_ServiceType24) Reset() {
	*x = CommonElement_ServiceType24{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType24) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType24) ProtoMessage() {}

func (x *CommonElement_ServiceType24) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType24.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType24) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 12}
}

func (x *CommonElement_ServiceType24) GetLimitChatEnter() *CommonElement_ServiceType24_LimitChatEnter {
	if x != nil {
		return x.LimitChatEnter
	}
	return nil
}

func (x *CommonElement_ServiceType24) GetLimitChatExit() *CommonElement_ServiceType24_LimitChatExit {
	if x != nil {
		return x.LimitChatExit
	}
	return nil
}

// MsgElemInfo_servtype27
type CommonElement_ServiceType27 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoFile *IMMessageBody_VideoFile `protobuf:"bytes,1,opt,name=video_file,json=videoFile,proto3" json:"video_file,omitempty"` // "video_file"
}

func (x *CommonElement_ServiceType27) Reset() {
	*x = CommonElement_ServiceType27{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType27) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType27) ProtoMessage() {}

func (x *CommonElement_ServiceType27) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType27.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType27) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 13}
}

func (x *CommonElement_ServiceType27) GetVideoFile() *IMMessageBody_VideoFile {
	if x != nil {
		return x.VideoFile
	}
	return nil
}

// MsgElemInfo_servtype29
type CommonElement_ServiceType29 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LuckybagMessage []byte `protobuf:"bytes,1,opt,name=luckybag_message,json=luckybagMessage,proto3" json:"luckybag_message,omitempty"` // "bytes_luckybag_msg"
}

func (x *CommonElement_ServiceType29) Reset() {
	*x = CommonElement_ServiceType29{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType29) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType29) ProtoMessage() {}

func (x *CommonElement_ServiceType29) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType29.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType29) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 14}
}

func (x *CommonElement_ServiceType29) GetLuckybagMessage() []byte {
	if x != nil {
		return x.LuckybagMessage
	}
	return nil
}

// MsgElemInfo_servtype3
type CommonElement_ServiceType3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlashTroopPic *IMMessageBody_CustomFace     `protobuf:"bytes,1,opt,name=flash_troop_pic,json=flashTroopPic,proto3" json:"flash_troop_pic,omitempty"` // "flash_troop_pic"
	FlashC2CPic   *IMMessageBody_NotOnlineImage `protobuf:"bytes,2,opt,name=flash_c2c_pic,json=flashC2cPic,proto3" json:"flash_c2c_pic,omitempty"`       // "flash_c2c_pic"
}

func (x *CommonElement_ServiceType3) Reset() {
	*x = CommonElement_ServiceType3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType3) ProtoMessage() {}

func (x *CommonElement_ServiceType3) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType3.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType3) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 15}
}

func (x *CommonElement_ServiceType3) GetFlashTroopPic() *IMMessageBody_CustomFace {
	if x != nil {
		return x.FlashTroopPic
	}
	return nil
}

func (x *CommonElement_ServiceType3) GetFlashC2CPic() *IMMessageBody_NotOnlineImage {
	if x != nil {
		return x.FlashC2CPic
	}
	return nil
}

// MsgElemInfo_servtype31
type CommonElement_ServiceType31 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text  []byte `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`   // "bytes_text"
	Extra []byte `protobuf:"bytes,2,opt,name=extra,proto3" json:"extra,omitempty"` // "bytes_ext"
}

func (x *CommonElement_ServiceType31) Reset() {
	*x = CommonElement_ServiceType31{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType31) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType31) ProtoMessage() {}

func (x *CommonElement_ServiceType31) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType31.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType31) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 16}
}

func (x *CommonElement_ServiceType31) GetText() []byte {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *CommonElement_ServiceType31) GetExtra() []byte {
	if x != nil {
		return x.Extra
	}
	return nil
}

// MsgElemInfo_servtype33
type CommonElement_ServiceType33 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`  // "uint32_index"
	Text   []byte `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`     // "bytes_text"
	Compat []byte `protobuf:"bytes,3,opt,name=compat,proto3" json:"compat,omitempty"` // "bytes_compat"
	Buffer []byte `protobuf:"bytes,4,opt,name=buffer,proto3" json:"buffer,omitempty"` // "bytes_buf"
}

func (x *CommonElement_ServiceType33) Reset() {
	*x = CommonElement_ServiceType33{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType33) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType33) ProtoMessage() {}

func (x *CommonElement_ServiceType33) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType33.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType33) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 17}
}

func (x *CommonElement_ServiceType33) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CommonElement_ServiceType33) GetText() []byte {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *CommonElement_ServiceType33) GetCompat() []byte {
	if x != nil {
		return x.Compat
	}
	return nil
}

func (x *CommonElement_ServiceType33) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

// MsgElemInfo_servtype34
type CommonElement_ServiceType34 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromNickname   []byte                                   `protobuf:"bytes,1,opt,name=from_nickname,json=fromNickname,proto3" json:"from_nickname,omitempty"`          // "from_nickname"
	PushWindowFlag uint32                                   `protobuf:"varint,2,opt,name=push_window_flag,json=pushWindowFlag,proto3" json:"push_window_flag,omitempty"` // "push_window_flag"
	GameSession    *CommonElement_ServiceType34_GameSession `protobuf:"bytes,3,opt,name=game_session,json=gameSession,proto3" json:"game_session,omitempty"`             // "game_session"
	Ext            []byte                                   `protobuf:"bytes,4,opt,name=ext,proto3" json:"ext,omitempty"`                                                // "bytes_ext"
}

func (x *CommonElement_ServiceType34) Reset() {
	*x = CommonElement_ServiceType34{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType34) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType34) ProtoMessage() {}

func (x *CommonElement_ServiceType34) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType34.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType34) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 18}
}

func (x *CommonElement_ServiceType34) GetFromNickname() []byte {
	if x != nil {
		return x.FromNickname
	}
	return nil
}

func (x *CommonElement_ServiceType34) GetPushWindowFlag() uint32 {
	if x != nil {
		return x.PushWindowFlag
	}
	return 0
}

func (x *CommonElement_ServiceType34) GetGameSession() *CommonElement_ServiceType34_GameSession {
	if x != nil {
		return x.GameSession
	}
	return nil
}

func (x *CommonElement_ServiceType34) GetExt() []byte {
	if x != nil {
		return x.Ext
	}
	return nil
}

// MsgElemInfo_servtype35
type CommonElement_ServiceType35 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token         []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                                           // "bytes_token"
	GlobalPadid   []byte `protobuf:"bytes,2,opt,name=global_padid,json=globalPadid,proto3" json:"global_padid,omitempty"`            // "bytes_global_padid"
	GetRev        uint32 `protobuf:"varint,3,opt,name=get_rev,json=getRev,proto3" json:"get_rev,omitempty"`                          // "uint32_get_rev"
	HisEditUinNum uint32 `protobuf:"varint,4,opt,name=his_edit_uin_num,json=hisEditUinNum,proto3" json:"his_edit_uin_num,omitempty"` // "uint32_his_edit_uin_num"
}

func (x *CommonElement_ServiceType35) Reset() {
	*x = CommonElement_ServiceType35{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType35) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType35) ProtoMessage() {}

func (x *CommonElement_ServiceType35) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType35.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType35) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 19}
}

func (x *CommonElement_ServiceType35) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *CommonElement_ServiceType35) GetGlobalPadid() []byte {
	if x != nil {
		return x.GlobalPadid
	}
	return nil
}

func (x *CommonElement_ServiceType35) GetGetRev() uint32 {
	if x != nil {
		return x.GetRev
	}
	return 0
}

func (x *CommonElement_ServiceType35) GetHisEditUinNum() uint32 {
	if x != nil {
		return x.HisEditUinNum
	}
	return 0
}

// MsgElemInfo_servtype37
type CommonElement_ServiceType37 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageId   []byte `protobuf:"bytes,1,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`        // "bytes_packid"
	StickerId   []byte `protobuf:"bytes,2,opt,name=sticker_id,json=stickerId,proto3" json:"sticker_id,omitempty"`        // "bytes_stickerid"
	QSid        uint32 `protobuf:"varint,3,opt,name=q_sid,json=qSid,proto3" json:"q_sid,omitempty"`                      // "uint32_qsid"
	SourceType  uint32 `protobuf:"varint,4,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`    // "uint32_sourcetype" Enum
	StickerType uint32 `protobuf:"varint,5,opt,name=sticker_type,json=stickerType,proto3" json:"sticker_type,omitempty"` // "uint32_stickertype" Enum
	ResultId    []byte `protobuf:"bytes,6,opt,name=result_id,json=resultId,proto3" json:"result_id,omitempty"`           // "bytes_resultid"
	Text        []byte `protobuf:"bytes,7,opt,name=text,proto3" json:"text,omitempty"`                                   // "bytes_text"
	SurpriseId  []byte `protobuf:"bytes,8,opt,name=surprise_id,json=surpriseId,proto3" json:"surprise_id,omitempty"`     // "bytes_surpriseid"
	RandomType  uint32 `protobuf:"varint,9,opt,name=random_type,json=randomType,proto3" json:"random_type,omitempty"`    // "uint32_randomtype" Enum
}

func (x *CommonElement_ServiceType37) Reset() {
	*x = CommonElement_ServiceType37{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType37) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType37) ProtoMessage() {}

func (x *CommonElement_ServiceType37) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType37.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType37) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 20}
}

func (x *CommonElement_ServiceType37) GetPackageId() []byte {
	if x != nil {
		return x.PackageId
	}
	return nil
}

func (x *CommonElement_ServiceType37) GetStickerId() []byte {
	if x != nil {
		return x.StickerId
	}
	return nil
}

func (x *CommonElement_ServiceType37) GetQSid() uint32 {
	if x != nil {
		return x.QSid
	}
	return 0
}

func (x *CommonElement_ServiceType37) GetSourceType() uint32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *CommonElement_ServiceType37) GetStickerType() uint32 {
	if x != nil {
		return x.StickerType
	}
	return 0
}

func (x *CommonElement_ServiceType37) GetResultId() []byte {
	if x != nil {
		return x.ResultId
	}
	return nil
}

func (x *CommonElement_ServiceType37) GetText() []byte {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *CommonElement_ServiceType37) GetSurpriseId() []byte {
	if x != nil {
		return x.SurpriseId
	}
	return nil
}

func (x *CommonElement_ServiceType37) GetRandomType() uint32 {
	if x != nil {
		return x.RandomType
	}
	return 0
}

// MsgElemInfo_servtype4
type CommonElement_ServiceType4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImsgType             uint32                                         `protobuf:"varint,1,opt,name=imsg_type,json=imsgType,proto3" json:"imsg_type,omitempty"`                                          // "uint32_imsg_type"
	StStoryAioObjMessage *CommonElement_ServiceType4_StoryAioObjMessage `protobuf:"bytes,4,opt,name=st_story_aio_obj_message,json=stStoryAioObjMessage,proto3" json:"st_story_aio_obj_message,omitempty"` // "st_story_aio_obj_msg"
}

func (x *CommonElement_ServiceType4) Reset() {
	*x = CommonElement_ServiceType4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType4) ProtoMessage() {}

func (x *CommonElement_ServiceType4) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType4.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType4) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 21}
}

func (x *CommonElement_ServiceType4) GetImsgType() uint32 {
	if x != nil {
		return x.ImsgType
	}
	return 0
}

func (x *CommonElement_ServiceType4) GetStStoryAioObjMessage() *CommonElement_ServiceType4_StoryAioObjMessage {
	if x != nil {
		return x.StStoryAioObjMessage
	}
	return nil
}

// MsgElemInfo_servtype5
type CommonElement_ServiceType5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid            []byte `protobuf:"bytes,1,opt,name=vid,proto3" json:"vid,omitempty"`                                             // "vid"
	Cover          []byte `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`                                         // "cover"
	Title          []byte `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                                         // "title"
	Summary        []byte `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`                                     // "summary"
	CreateTime     uint64 `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`                              // "createTime"
	CommentContent []byte `protobuf:"bytes,6,opt,name=comment_content,json=commentContent,proto3" json:"comment_content,omitempty"` // "comment_content"
	Author         uint64 `protobuf:"varint,7,opt,name=author,proto3" json:"author,omitempty"`                                      // "author"
}

func (x *CommonElement_ServiceType5) Reset() {
	*x = CommonElement_ServiceType5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType5) ProtoMessage() {}

func (x *CommonElement_ServiceType5) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType5.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType5) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 22}
}

func (x *CommonElement_ServiceType5) GetVid() []byte {
	if x != nil {
		return x.Vid
	}
	return nil
}

func (x *CommonElement_ServiceType5) GetCover() []byte {
	if x != nil {
		return x.Cover
	}
	return nil
}

func (x *CommonElement_ServiceType5) GetTitle() []byte {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *CommonElement_ServiceType5) GetSummary() []byte {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *CommonElement_ServiceType5) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CommonElement_ServiceType5) GetCommentContent() []byte {
	if x != nil {
		return x.CommentContent
	}
	return nil
}

func (x *CommonElement_ServiceType5) GetAuthor() uint64 {
	if x != nil {
		return x.Author
	}
	return 0
}

// MsgElemInfo_servtype8
type CommonElement_ServiceType8 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WifiDeliverGiftMessage *IMMessageBody_DeliverGiftMessage `protobuf:"bytes,1,opt,name=wifi_deliver_gift_message,json=wifiDeliverGiftMessage,proto3" json:"wifi_deliver_gift_message,omitempty"` // "wifi_deliver_gift_msg"
}

func (x *CommonElement_ServiceType8) Reset() {
	*x = CommonElement_ServiceType8{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType8) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType8) ProtoMessage() {}

func (x *CommonElement_ServiceType8) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType8.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType8) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 23}
}

func (x *CommonElement_ServiceType8) GetWifiDeliverGiftMessage() *IMMessageBody_DeliverGiftMessage {
	if x != nil {
		return x.WifiDeliverGiftMessage
	}
	return nil
}

// MsgElemInfo_servtype9
type CommonElement_ServiceType9 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnchorStatus   uint32 `protobuf:"varint,1,opt,name=anchor_status,json=anchorStatus,proto3" json:"anchor_status,omitempty"`      // "uint32_anchor_status"
	JumpSchema     []byte `protobuf:"bytes,2,opt,name=jump_schema,json=jumpSchema,proto3" json:"jump_schema,omitempty"`             // "bytes_jump_schema"
	AnchorNickname string `protobuf:"bytes,3,opt,name=anchor_nickname,json=anchorNickname,proto3" json:"anchor_nickname,omitempty"` // "str_anchor_nickname"
	AnchorHeadUrl  []byte `protobuf:"bytes,4,opt,name=anchor_head_url,json=anchorHeadUrl,proto3" json:"anchor_head_url,omitempty"`  // "bytes_anchor_head_url"
	LiveTitle      string `protobuf:"bytes,5,opt,name=live_title,json=liveTitle,proto3" json:"live_title,omitempty"`                // "str_live_title"
}

func (x *CommonElement_ServiceType9) Reset() {
	*x = CommonElement_ServiceType9{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType9) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType9) ProtoMessage() {}

func (x *CommonElement_ServiceType9) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType9.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType9) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 24}
}

func (x *CommonElement_ServiceType9) GetAnchorStatus() uint32 {
	if x != nil {
		return x.AnchorStatus
	}
	return 0
}

func (x *CommonElement_ServiceType9) GetJumpSchema() []byte {
	if x != nil {
		return x.JumpSchema
	}
	return nil
}

func (x *CommonElement_ServiceType9) GetAnchorNickname() string {
	if x != nil {
		return x.AnchorNickname
	}
	return ""
}

func (x *CommonElement_ServiceType9) GetAnchorHeadUrl() []byte {
	if x != nil {
		return x.AnchorHeadUrl
	}
	return nil
}

func (x *CommonElement_ServiceType9) GetLiveTitle() string {
	if x != nil {
		return x.LiveTitle
	}
	return ""
}

// C2CConfessContext
type CommonElement_ServiceType21_C2CConfessContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfessorUin  uint64 `protobuf:"varint,1,opt,name=confessor_uin,json=confessorUin,proto3" json:"confessor_uin,omitempty"`    // "uint64_confessor_uin"
	ConfessToUin  uint64 `protobuf:"varint,2,opt,name=confess_to_uin,json=confessToUin,proto3" json:"confess_to_uin,omitempty"`  // "uint64_confess_to_uin"
	SendUin       uint64 `protobuf:"varint,3,opt,name=send_uin,json=sendUin,proto3" json:"send_uin,omitempty"`                   // "uint64_send_uin"
	ConfessorNick []byte `protobuf:"bytes,4,opt,name=confessor_nick,json=confessorNick,proto3" json:"confessor_nick,omitempty"`  // "bytes_confessor_nick"
	Confess       []byte `protobuf:"bytes,5,opt,name=confess,proto3" json:"confess,omitempty"`                                   // "bytes_confess"
	BgType        uint32 `protobuf:"varint,6,opt,name=bg_type,json=bgType,proto3" json:"bg_type,omitempty"`                      // "uint32_bg_type"
	TopicId       uint32 `protobuf:"varint,7,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`                   // "uint32_topic_id"
	ConfessTime   uint64 `protobuf:"varint,8,opt,name=confess_time,json=confessTime,proto3" json:"confess_time,omitempty"`       // "uint64_confess_time"
	ConfessorSex  uint32 `protobuf:"varint,9,opt,name=confessor_sex,json=confessorSex,proto3" json:"confessor_sex,omitempty"`    // "uint32_confessor_sex"
	BizType       uint32 `protobuf:"varint,10,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`                  // "uint32_biz_type"
	ConfessNum    uint32 `protobuf:"varint,11,opt,name=confess_num,json=confessNum,proto3" json:"confess_num,omitempty"`         // "uint32_confess_num"
	ConfessToSex  uint32 `protobuf:"varint,12,opt,name=confess_to_sex,json=confessToSex,proto3" json:"confess_to_sex,omitempty"` // "uint32_confess_to_sex"
}

func (x *CommonElement_ServiceType21_C2CConfessContext) Reset() {
	*x = CommonElement_ServiceType21_C2CConfessContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType21_C2CConfessContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType21_C2CConfessContext) ProtoMessage() {}

func (x *CommonElement_ServiceType21_C2CConfessContext) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType21_C2CConfessContext.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType21_C2CConfessContext) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 10, 0}
}

func (x *CommonElement_ServiceType21_C2CConfessContext) GetConfessorUin() uint64 {
	if x != nil {
		return x.ConfessorUin
	}
	return 0
}

func (x *CommonElement_ServiceType21_C2CConfessContext) GetConfessToUin() uint64 {
	if x != nil {
		return x.ConfessToUin
	}
	return 0
}

func (x *CommonElement_ServiceType21_C2CConfessContext) GetSendUin() uint64 {
	if x != nil {
		return x.SendUin
	}
	return 0
}

func (x *CommonElement_ServiceType21_C2CConfessContext) GetConfessorNick() []byte {
	if x != nil {
		return x.ConfessorNick
	}
	return nil
}

func (x *CommonElement_ServiceType21_C2CConfessContext) GetConfess() []byte {
	if x != nil {
		return x.Confess
	}
	return nil
}

func (x *CommonElement_ServiceType21_C2CConfessContext) GetBgType() uint32 {
	if x != nil {
		return x.BgType
	}
	return 0
}

func (x *CommonElement_ServiceType21_C2CConfessContext) GetTopicId() uint32 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *CommonElement_ServiceType21_C2CConfessContext) GetConfessTime() uint64 {
	if x != nil {
		return x.ConfessTime
	}
	return 0
}

func (x *CommonElement_ServiceType21_C2CConfessContext) GetConfessorSex() uint32 {
	if x != nil {
		return x.ConfessorSex
	}
	return 0
}

func (x *CommonElement_ServiceType21_C2CConfessContext) GetBizType() uint32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *CommonElement_ServiceType21_C2CConfessContext) GetConfessNum() uint32 {
	if x != nil {
		return x.ConfessNum
	}
	return 0
}

func (x *CommonElement_ServiceType21_C2CConfessContext) GetConfessToSex() uint32 {
	if x != nil {
		return x.ConfessToSex
	}
	return 0
}

// GroupConfessContext
type CommonElement_ServiceType21_GroupConfessContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfessorUin      uint64 `protobuf:"varint,1,opt,name=confessor_uin,json=confessorUin,proto3" json:"confessor_uin,omitempty"`                    // "uint64_confessor_uin"
	ConfessToUin      uint64 `protobuf:"varint,2,opt,name=confess_to_uin,json=confessToUin,proto3" json:"confess_to_uin,omitempty"`                  // "uint64_confess_to_uin"
	SendUin           uint64 `protobuf:"varint,3,opt,name=send_uin,json=sendUin,proto3" json:"send_uin,omitempty"`                                   // "uint64_send_uin"
	ConfessorSex      uint32 `protobuf:"varint,4,opt,name=confessor_sex,json=confessorSex,proto3" json:"confessor_sex,omitempty"`                    // "uint32_confessor_sex"
	ConfessToNick     []byte `protobuf:"bytes,5,opt,name=confess_to_nick,json=confessToNick,proto3" json:"confess_to_nick,omitempty"`                // "bytes_confess_to_nick"
	Topic             []byte `protobuf:"bytes,6,opt,name=topic,proto3" json:"topic,omitempty"`                                                       // "bytes_topic"
	TopicId           uint32 `protobuf:"varint,7,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`                                   // "uint32_topic_id"
	ConfessTime       uint64 `protobuf:"varint,8,opt,name=confess_time,json=confessTime,proto3" json:"confess_time,omitempty"`                       // "uint64_confess_time"
	ConfessToNickType uint32 `protobuf:"varint,9,opt,name=confess_to_nick_type,json=confessToNickType,proto3" json:"confess_to_nick_type,omitempty"` // "uint32_confess_to_nick_type"
	ConfessorNick     []byte `protobuf:"bytes,10,opt,name=confessor_nick,json=confessorNick,proto3" json:"confessor_nick,omitempty"`                 // "bytes_confessor_nick"
}

func (x *CommonElement_ServiceType21_GroupConfessContext) Reset() {
	*x = CommonElement_ServiceType21_GroupConfessContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType21_GroupConfessContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType21_GroupConfessContext) ProtoMessage() {}

func (x *CommonElement_ServiceType21_GroupConfessContext) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType21_GroupConfessContext.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType21_GroupConfessContext) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 10, 1}
}

func (x *CommonElement_ServiceType21_GroupConfessContext) GetConfessorUin() uint64 {
	if x != nil {
		return x.ConfessorUin
	}
	return 0
}

func (x *CommonElement_ServiceType21_GroupConfessContext) GetConfessToUin() uint64 {
	if x != nil {
		return x.ConfessToUin
	}
	return 0
}

func (x *CommonElement_ServiceType21_GroupConfessContext) GetSendUin() uint64 {
	if x != nil {
		return x.SendUin
	}
	return 0
}

func (x *CommonElement_ServiceType21_GroupConfessContext) GetConfessorSex() uint32 {
	if x != nil {
		return x.ConfessorSex
	}
	return 0
}

func (x *CommonElement_ServiceType21_GroupConfessContext) GetConfessToNick() []byte {
	if x != nil {
		return x.ConfessToNick
	}
	return nil
}

func (x *CommonElement_ServiceType21_GroupConfessContext) GetTopic() []byte {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *CommonElement_ServiceType21_GroupConfessContext) GetTopicId() uint32 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *CommonElement_ServiceType21_GroupConfessContext) GetConfessTime() uint64 {
	if x != nil {
		return x.ConfessTime
	}
	return 0
}

func (x *CommonElement_ServiceType21_GroupConfessContext) GetConfessToNickType() uint32 {
	if x != nil {
		return x.ConfessToNickType
	}
	return 0
}

func (x *CommonElement_ServiceType21_GroupConfessContext) GetConfessorNick() []byte {
	if x != nil {
		return x.ConfessorNick
	}
	return nil
}

// GroupConfessItem
type CommonElement_ServiceType21_GroupConfessItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId           uint32 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`                                   // "uint32_topic_id"
	ConfessToUin      uint64 `protobuf:"varint,2,opt,name=confess_to_uin,json=confessToUin,proto3" json:"confess_to_uin,omitempty"`                  // "uint64_confess_to_uin"
	ConfessToNick     []byte `protobuf:"bytes,3,opt,name=confess_to_nick,json=confessToNick,proto3" json:"confess_to_nick,omitempty"`                // "bytes_confess_to_nick"
	Topic             []byte `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`                                                       // "bytes_topic"
	ConfessToNickType uint32 `protobuf:"varint,5,opt,name=confess_to_nick_type,json=confessToNickType,proto3" json:"confess_to_nick_type,omitempty"` // "uint32_confess_to_nick_type"
}

func (x *CommonElement_ServiceType21_GroupConfessItem) Reset() {
	*x = CommonElement_ServiceType21_GroupConfessItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType21_GroupConfessItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType21_GroupConfessItem) ProtoMessage() {}

func (x *CommonElement_ServiceType21_GroupConfessItem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType21_GroupConfessItem.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType21_GroupConfessItem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 10, 2}
}

func (x *CommonElement_ServiceType21_GroupConfessItem) GetTopicId() uint32 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *CommonElement_ServiceType21_GroupConfessItem) GetConfessToUin() uint64 {
	if x != nil {
		return x.ConfessToUin
	}
	return 0
}

func (x *CommonElement_ServiceType21_GroupConfessItem) GetConfessToNick() []byte {
	if x != nil {
		return x.ConfessToNick
	}
	return nil
}

func (x *CommonElement_ServiceType21_GroupConfessItem) GetTopic() []byte {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *CommonElement_ServiceType21_GroupConfessItem) GetConfessToNickType() uint32 {
	if x != nil {
		return x.ConfessToNickType
	}
	return 0
}

// GroupConfessMsg
type CommonElement_ServiceType21_GroupConfessMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfessTime     uint64                                          `protobuf:"varint,1,opt,name=confess_time,json=confessTime,proto3" json:"confess_time,omitempty"`               // "uint64_confess_time"
	ConfessorUin    uint64                                          `protobuf:"varint,2,opt,name=confessor_uin,json=confessorUin,proto3" json:"confessor_uin,omitempty"`            // "uint64_confessor_uin"
	ConfessorSex    uint32                                          `protobuf:"varint,3,opt,name=confessor_sex,json=confessorSex,proto3" json:"confessor_sex,omitempty"`            // "uint32_confessor_sex"
	SysmsgFlag      uint32                                          `protobuf:"varint,4,opt,name=sysmsg_flag,json=sysmsgFlag,proto3" json:"sysmsg_flag,omitempty"`                  // "uint32_sysmsg_flag"
	ConfessItems    []*CommonElement_ServiceType21_GroupConfessItem `protobuf:"bytes,5,rep,name=confess_items,json=confessItems,proto3" json:"confess_items,omitempty"`             // "confess_items"
	TotalTopicCount uint32                                          `protobuf:"varint,6,opt,name=total_topic_count,json=totalTopicCount,proto3" json:"total_topic_count,omitempty"` // "uint32_total_topic_count"
}

func (x *CommonElement_ServiceType21_GroupConfessMessage) Reset() {
	*x = CommonElement_ServiceType21_GroupConfessMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType21_GroupConfessMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType21_GroupConfessMessage) ProtoMessage() {}

func (x *CommonElement_ServiceType21_GroupConfessMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType21_GroupConfessMessage.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType21_GroupConfessMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 10, 3}
}

func (x *CommonElement_ServiceType21_GroupConfessMessage) GetConfessTime() uint64 {
	if x != nil {
		return x.ConfessTime
	}
	return 0
}

func (x *CommonElement_ServiceType21_GroupConfessMessage) GetConfessorUin() uint64 {
	if x != nil {
		return x.ConfessorUin
	}
	return 0
}

func (x *CommonElement_ServiceType21_GroupConfessMessage) GetConfessorSex() uint32 {
	if x != nil {
		return x.ConfessorSex
	}
	return 0
}

func (x *CommonElement_ServiceType21_GroupConfessMessage) GetSysmsgFlag() uint32 {
	if x != nil {
		return x.SysmsgFlag
	}
	return 0
}

func (x *CommonElement_ServiceType21_GroupConfessMessage) GetConfessItems() []*CommonElement_ServiceType21_GroupConfessItem {
	if x != nil {
		return x.ConfessItems
	}
	return nil
}

func (x *CommonElement_ServiceType21_GroupConfessMessage) GetTotalTopicCount() uint32 {
	if x != nil {
		return x.TotalTopicCount
	}
	return 0
}

// LimitChatEnter
type CommonElement_ServiceType24_LimitChatEnter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TipsWording      []byte `protobuf:"bytes,1,opt,name=tips_wording,json=tipsWording,proto3" json:"tips_wording,omitempty"`                   // "bytes_tips_wording"
	LeftChatTime     uint32 `protobuf:"varint,2,opt,name=left_chat_time,json=leftChatTime,proto3" json:"left_chat_time,omitempty"`             // "uint32_left_chat_time"
	MatchTs          uint64 `protobuf:"varint,3,opt,name=match_ts,json=matchTs,proto3" json:"match_ts,omitempty"`                              // "uint64_match_ts"
	MatchExpiredTime uint32 `protobuf:"varint,4,opt,name=match_expired_time,json=matchExpiredTime,proto3" json:"match_expired_time,omitempty"` // "uint32_match_expired_time"
	C2CExpiredTime   uint32 `protobuf:"varint,5,opt,name=c2c_expired_time,json=c2cExpiredTime,proto3" json:"c2c_expired_time,omitempty"`       // "uint32_c2c_expired_time"
	ReadyTs          uint64 `protobuf:"varint,6,opt,name=ready_ts,json=readyTs,proto3" json:"ready_ts,omitempty"`                              // "uint64_ready_ts"
	MatchNick        []byte `protobuf:"bytes,7,opt,name=match_nick,json=matchNick,proto3" json:"match_nick,omitempty"`                         // "bytes_match_nick"
}

func (x *CommonElement_ServiceType24_LimitChatEnter) Reset() {
	*x = CommonElement_ServiceType24_LimitChatEnter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType24_LimitChatEnter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType24_LimitChatEnter) ProtoMessage() {}

func (x *CommonElement_ServiceType24_LimitChatEnter) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType24_LimitChatEnter.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType24_LimitChatEnter) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 12, 0}
}

func (x *CommonElement_ServiceType24_LimitChatEnter) GetTipsWording() []byte {
	if x != nil {
		return x.TipsWording
	}
	return nil
}

func (x *CommonElement_ServiceType24_LimitChatEnter) GetLeftChatTime() uint32 {
	if x != nil {
		return x.LeftChatTime
	}
	return 0
}

func (x *CommonElement_ServiceType24_LimitChatEnter) GetMatchTs() uint64 {
	if x != nil {
		return x.MatchTs
	}
	return 0
}

func (x *CommonElement_ServiceType24_LimitChatEnter) GetMatchExpiredTime() uint32 {
	if x != nil {
		return x.MatchExpiredTime
	}
	return 0
}

func (x *CommonElement_ServiceType24_LimitChatEnter) GetC2CExpiredTime() uint32 {
	if x != nil {
		return x.C2CExpiredTime
	}
	return 0
}

func (x *CommonElement_ServiceType24_LimitChatEnter) GetReadyTs() uint64 {
	if x != nil {
		return x.ReadyTs
	}
	return 0
}

func (x *CommonElement_ServiceType24_LimitChatEnter) GetMatchNick() []byte {
	if x != nil {
		return x.MatchNick
	}
	return nil
}

// LimitChatExit
type CommonElement_ServiceType24_LimitChatExit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExitMethod uint32 `protobuf:"varint,1,opt,name=exit_method,json=exitMethod,proto3" json:"exit_method,omitempty"` // "uint32_exit_method"
	MatchTs    uint64 `protobuf:"varint,2,opt,name=match_ts,json=matchTs,proto3" json:"match_ts,omitempty"`          // "uint64_match_ts"
}

func (x *CommonElement_ServiceType24_LimitChatExit) Reset() {
	*x = CommonElement_ServiceType24_LimitChatExit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType24_LimitChatExit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType24_LimitChatExit) ProtoMessage() {}

func (x *CommonElement_ServiceType24_LimitChatExit) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType24_LimitChatExit.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType24_LimitChatExit) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 12, 1}
}

func (x *CommonElement_ServiceType24_LimitChatExit) GetExitMethod() uint32 {
	if x != nil {
		return x.ExitMethod
	}
	return 0
}

func (x *CommonElement_ServiceType24_LimitChatExit) GetMatchTs() uint64 {
	if x != nil {
		return x.MatchTs
	}
	return 0
}

// GameSession
type CommonElement_ServiceType34_GameSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromRoleId []byte `protobuf:"bytes,1,opt,name=from_role_id,json=fromRoleId,proto3" json:"from_role_id,omitempty"`  // "from_role_id"
	FromOpenId []byte `protobuf:"bytes,2,opt,name=from_open_id,json=fromOpenId,proto3" json:"from_open_id,omitempty"`  // "from_open_id"
	ToRoleId   []byte `protobuf:"bytes,3,opt,name=to_role_id,json=toRoleId,proto3" json:"to_role_id,omitempty"`        // "to_role_id"
	ToOpenId   []byte `protobuf:"bytes,4,opt,name=to_open_id,json=toOpenId,proto3" json:"to_open_id,omitempty"`        // "to_open_id"
	GameAppid  uint64 `protobuf:"varint,5,opt,name=game_appid,json=gameAppid,proto3" json:"game_appid,omitempty"`      // "game_appid"
	FromTinyId uint64 `protobuf:"varint,6,opt,name=from_tiny_id,json=fromTinyId,proto3" json:"from_tiny_id,omitempty"` // "from_tiny_id"
	ToTinyId   uint64 `protobuf:"varint,7,opt,name=to_tiny_id,json=toTinyId,proto3" json:"to_tiny_id,omitempty"`       // "to_tiny_id"
}

func (x *CommonElement_ServiceType34_GameSession) Reset() {
	*x = CommonElement_ServiceType34_GameSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType34_GameSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType34_GameSession) ProtoMessage() {}

func (x *CommonElement_ServiceType34_GameSession) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType34_GameSession.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType34_GameSession) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 18, 0}
}

func (x *CommonElement_ServiceType34_GameSession) GetFromRoleId() []byte {
	if x != nil {
		return x.FromRoleId
	}
	return nil
}

func (x *CommonElement_ServiceType34_GameSession) GetFromOpenId() []byte {
	if x != nil {
		return x.FromOpenId
	}
	return nil
}

func (x *CommonElement_ServiceType34_GameSession) GetToRoleId() []byte {
	if x != nil {
		return x.ToRoleId
	}
	return nil
}

func (x *CommonElement_ServiceType34_GameSession) GetToOpenId() []byte {
	if x != nil {
		return x.ToOpenId
	}
	return nil
}

func (x *CommonElement_ServiceType34_GameSession) GetGameAppid() uint64 {
	if x != nil {
		return x.GameAppid
	}
	return 0
}

func (x *CommonElement_ServiceType34_GameSession) GetFromTinyId() uint64 {
	if x != nil {
		return x.FromTinyId
	}
	return 0
}

func (x *CommonElement_ServiceType34_GameSession) GetToTinyId() uint64 {
	if x != nil {
		return x.ToTinyId
	}
	return 0
}

// StoryAioObjMsg
type CommonElement_ServiceType4_StoryAioObjMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UiUrl  string `protobuf:"bytes,1,opt,name=ui_url,json=uiUrl,proto3" json:"ui_url,omitempty"`    // "str_ui_url"
	JmpUrl string `protobuf:"bytes,2,opt,name=jmp_url,json=jmpUrl,proto3" json:"jmp_url,omitempty"` // "str_jmp_url"
}

func (x *CommonElement_ServiceType4_StoryAioObjMessage) Reset() {
	*x = CommonElement_ServiceType4_StoryAioObjMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonElement_ServiceType4_StoryAioObjMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonElement_ServiceType4_StoryAioObjMessage) ProtoMessage() {}

func (x *CommonElement_ServiceType4_StoryAioObjMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonElement_ServiceType4_StoryAioObjMessage.ProtoReflect.Descriptor instead.
func (*CommonElement_ServiceType4_StoryAioObjMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0, 21, 0}
}

func (x *CommonElement_ServiceType4_StoryAioObjMessage) GetUiUrl() string {
	if x != nil {
		return x.UiUrl
	}
	return ""
}

func (x *CommonElement_ServiceType4_StoryAioObjMessage) GetJmpUrl() string {
	if x != nil {
		return x.JmpUrl
	}
	return ""
}

// AnonymousGroupMsg
type IMMessageBody_AnonymousGroupMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags         uint32 `protobuf:"varint,1,opt,name=flags,proto3" json:"flags,omitempty"`                                     // "uint32_flags"
	AnonymousId   []byte `protobuf:"bytes,2,opt,name=anonymous_id,json=anonymousId,proto3" json:"anonymous_id,omitempty"`       // "str_anon_id"
	AnonymousNick []byte `protobuf:"bytes,3,opt,name=anonymous_nick,json=anonymousNick,proto3" json:"anonymous_nick,omitempty"` // "str_anon_nick"
	HeadPortrait  uint32 `protobuf:"varint,4,opt,name=head_portrait,json=headPortrait,proto3" json:"head_portrait,omitempty"`   // "uint32_head_portrait"
	ExpireTime    uint32 `protobuf:"varint,5,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`         // "uint32_expire_time"
	BubbleId      uint32 `protobuf:"varint,6,opt,name=bubble_id,json=bubbleId,proto3" json:"bubble_id,omitempty"`               // "uint32_bubble_id"
	RankColor     []byte `protobuf:"bytes,7,opt,name=rank_color,json=rankColor,proto3" json:"rank_color,omitempty"`             // "str_rank_color"
}

func (x *IMMessageBody_AnonymousGroupMessage) Reset() {
	*x = IMMessageBody_AnonymousGroupMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_AnonymousGroupMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_AnonymousGroupMessage) ProtoMessage() {}

func (x *IMMessageBody_AnonymousGroupMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_AnonymousGroupMessage.ProtoReflect.Descriptor instead.
func (*IMMessageBody_AnonymousGroupMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 0}
}

func (x *IMMessageBody_AnonymousGroupMessage) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *IMMessageBody_AnonymousGroupMessage) GetAnonymousId() []byte {
	if x != nil {
		return x.AnonymousId
	}
	return nil
}

func (x *IMMessageBody_AnonymousGroupMessage) GetAnonymousNick() []byte {
	if x != nil {
		return x.AnonymousNick
	}
	return nil
}

func (x *IMMessageBody_AnonymousGroupMessage) GetHeadPortrait() uint32 {
	if x != nil {
		return x.HeadPortrait
	}
	return 0
}

func (x *IMMessageBody_AnonymousGroupMessage) GetExpireTime() uint32 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *IMMessageBody_AnonymousGroupMessage) GetBubbleId() uint32 {
	if x != nil {
		return x.BubbleId
	}
	return 0
}

func (x *IMMessageBody_AnonymousGroupMessage) GetRankColor() []byte {
	if x != nil {
		return x.RankColor
	}
	return nil
}

// ApolloActMsg
type IMMessageBody_ApolloActionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionId       uint32 `protobuf:"varint,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`                   // "uint32_action_id"
	ActionName     []byte `protobuf:"bytes,2,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`              // "bytes_action_name"
	ActionText     []byte `protobuf:"bytes,3,opt,name=action_text,json=actionText,proto3" json:"action_text,omitempty"`              // "bytes_action_text"
	Flag           uint32 `protobuf:"varint,4,opt,name=flag,proto3" json:"flag,omitempty"`                                           // "uint32_flag"
	PeerUin        uint32 `protobuf:"varint,5,opt,name=peer_uin,json=peerUin,proto3" json:"peer_uin,omitempty"`                      // "uint32_peer_uin"
	SenderTs       uint32 `protobuf:"varint,6,opt,name=sender_ts,json=senderTs,proto3" json:"sender_ts,omitempty"`                   // "uint32_sender_ts"
	PeerTs         uint32 `protobuf:"varint,7,opt,name=peer_ts,json=peerTs,proto3" json:"peer_ts,omitempty"`                         // "uint32_peer_ts"
	SenderStatus   int32  `protobuf:"varint,8,opt,name=sender_status,json=senderStatus,proto3" json:"sender_status,omitempty"`       // "int32_sender_status"
	PeerStatus     int32  `protobuf:"varint,9,opt,name=peer_status,json=peerStatus,proto3" json:"peer_status,omitempty"`             // "int32_peer_status"
	DiytextId      uint32 `protobuf:"varint,10,opt,name=diytext_id,json=diytextId,proto3" json:"diytext_id,omitempty"`               // "diytext_id"
	DiytextContent []byte `protobuf:"bytes,11,opt,name=diytext_content,json=diytextContent,proto3" json:"diytext_content,omitempty"` // "diytext_content"
	InputText      []byte `protobuf:"bytes,12,opt,name=input_text,json=inputText,proto3" json:"input_text,omitempty"`                // "input_text"
	PbReserve      []byte `protobuf:"bytes,13,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`                // "bytes_pb_reserve"
}

func (x *IMMessageBody_ApolloActionMessage) Reset() {
	*x = IMMessageBody_ApolloActionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_ApolloActionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_ApolloActionMessage) ProtoMessage() {}

func (x *IMMessageBody_ApolloActionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_ApolloActionMessage.ProtoReflect.Descriptor instead.
func (*IMMessageBody_ApolloActionMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 1}
}

func (x *IMMessageBody_ApolloActionMessage) GetActionId() uint32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

func (x *IMMessageBody_ApolloActionMessage) GetActionName() []byte {
	if x != nil {
		return x.ActionName
	}
	return nil
}

func (x *IMMessageBody_ApolloActionMessage) GetActionText() []byte {
	if x != nil {
		return x.ActionText
	}
	return nil
}

func (x *IMMessageBody_ApolloActionMessage) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *IMMessageBody_ApolloActionMessage) GetPeerUin() uint32 {
	if x != nil {
		return x.PeerUin
	}
	return 0
}

func (x *IMMessageBody_ApolloActionMessage) GetSenderTs() uint32 {
	if x != nil {
		return x.SenderTs
	}
	return 0
}

func (x *IMMessageBody_ApolloActionMessage) GetPeerTs() uint32 {
	if x != nil {
		return x.PeerTs
	}
	return 0
}

func (x *IMMessageBody_ApolloActionMessage) GetSenderStatus() int32 {
	if x != nil {
		return x.SenderStatus
	}
	return 0
}

func (x *IMMessageBody_ApolloActionMessage) GetPeerStatus() int32 {
	if x != nil {
		return x.PeerStatus
	}
	return 0
}

func (x *IMMessageBody_ApolloActionMessage) GetDiytextId() uint32 {
	if x != nil {
		return x.DiytextId
	}
	return 0
}

func (x *IMMessageBody_ApolloActionMessage) GetDiytextContent() []byte {
	if x != nil {
		return x.DiytextContent
	}
	return nil
}

func (x *IMMessageBody_ApolloActionMessage) GetInputText() []byte {
	if x != nil {
		return x.InputText
	}
	return nil
}

func (x *IMMessageBody_ApolloActionMessage) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

// ArkAppElem
type IMMessageBody_ArkAppElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName     string `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`             // "app_name"
	MinVersion  string `protobuf:"bytes,2,opt,name=min_version,json=minVersion,proto3" json:"min_version,omitempty"`    // "min_version"
	XmlTemplate string `protobuf:"bytes,3,opt,name=xml_template,json=xmlTemplate,proto3" json:"xml_template,omitempty"` // "xml_template"
	Data        []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                                  // "bytes_data"
}

func (x *IMMessageBody_ArkAppElement) Reset() {
	*x = IMMessageBody_ArkAppElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_ArkAppElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_ArkAppElement) ProtoMessage() {}

func (x *IMMessageBody_ArkAppElement) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_ArkAppElement.ProtoReflect.Descriptor instead.
func (*IMMessageBody_ArkAppElement) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 2}
}

func (x *IMMessageBody_ArkAppElement) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *IMMessageBody_ArkAppElement) GetMinVersion() string {
	if x != nil {
		return x.MinVersion
	}
	return ""
}

func (x *IMMessageBody_ArkAppElement) GetXmlTemplate() string {
	if x != nil {
		return x.XmlTemplate
	}
	return ""
}

func (x *IMMessageBody_ArkAppElement) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Attr
type IMMessageBody_Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodePage       int32  `protobuf:"zigzag32,1,opt,name=code_page,json=codePage,proto3" json:"code_page,omitempty"`                   // "code_page"
	Time           uint32 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`                                             // "time"
	Random         uint32 `protobuf:"varint,3,opt,name=random,proto3" json:"random,omitempty"`                                         // "random"
	Color          uint32 `protobuf:"varint,4,opt,name=color,proto3" json:"color,omitempty"`                                           // "color"
	Size           uint32 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`                                             // "size"
	Effect         uint32 `protobuf:"varint,6,opt,name=effect,proto3" json:"effect,omitempty"`                                         // "effect"
	CharSet        uint32 `protobuf:"varint,7,opt,name=char_set,json=charSet,proto3" json:"char_set,omitempty"`                        // "char_set"
	PitchAndFamily uint32 `protobuf:"varint,8,opt,name=pitch_and_family,json=pitchAndFamily,proto3" json:"pitch_and_family,omitempty"` // "pitch_and_family"
	FontName       string `protobuf:"bytes,9,opt,name=font_name,json=fontName,proto3" json:"font_name,omitempty"`                      // "font_name"
	ReserveData    []byte `protobuf:"bytes,10,opt,name=reserve_data,json=reserveData,proto3" json:"reserve_data,omitempty"`            // "reserve_data"
}

func (x *IMMessageBody_Attribute) Reset() {
	*x = IMMessageBody_Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_Attribute) ProtoMessage() {}

func (x *IMMessageBody_Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_Attribute.ProtoReflect.Descriptor instead.
func (*IMMessageBody_Attribute) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 3}
}

func (x *IMMessageBody_Attribute) GetCodePage() int32 {
	if x != nil {
		return x.CodePage
	}
	return 0
}

func (x *IMMessageBody_Attribute) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *IMMessageBody_Attribute) GetRandom() uint32 {
	if x != nil {
		return x.Random
	}
	return 0
}

func (x *IMMessageBody_Attribute) GetColor() uint32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *IMMessageBody_Attribute) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *IMMessageBody_Attribute) GetEffect() uint32 {
	if x != nil {
		return x.Effect
	}
	return 0
}

func (x *IMMessageBody_Attribute) GetCharSet() uint32 {
	if x != nil {
		return x.CharSet
	}
	return 0
}

func (x *IMMessageBody_Attribute) GetPitchAndFamily() uint32 {
	if x != nil {
		return x.PitchAndFamily
	}
	return 0
}

func (x *IMMessageBody_Attribute) GetFontName() string {
	if x != nil {
		return x.FontName
	}
	return ""
}

func (x *IMMessageBody_Attribute) GetReserveData() []byte {
	if x != nil {
		return x.ReserveData
	}
	return nil
}

// BitAppMsg
type IMMessageBody_BitAppMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buf []byte `protobuf:"bytes,1,opt,name=buf,proto3" json:"buf,omitempty"` // "bytes_buf"
}

func (x *IMMessageBody_BitAppMessage) Reset() {
	*x = IMMessageBody_BitAppMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_BitAppMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_BitAppMessage) ProtoMessage() {}

func (x *IMMessageBody_BitAppMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_BitAppMessage.ProtoReflect.Descriptor instead.
func (*IMMessageBody_BitAppMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 4}
}

func (x *IMMessageBody_BitAppMessage) GetBuf() []byte {
	if x != nil {
		return x.Buf
	}
	return nil
}

// BlessingMessage
type IMMessageBody_BlessingMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType uint32 `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"` // "uint32_msg_type"
	ExFlag      uint32 `protobuf:"varint,2,opt,name=ex_flag,json=exFlag,proto3" json:"ex_flag,omitempty"`                // "uint32_ex_flag"
}

func (x *IMMessageBody_BlessingMessage) Reset() {
	*x = IMMessageBody_BlessingMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_BlessingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_BlessingMessage) ProtoMessage() {}

func (x *IMMessageBody_BlessingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_BlessingMessage.ProtoReflect.Descriptor instead.
func (*IMMessageBody_BlessingMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 5}
}

func (x *IMMessageBody_BlessingMessage) GetMessageType() uint32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *IMMessageBody_BlessingMessage) GetExFlag() uint32 {
	if x != nil {
		return x.ExFlag
	}
	return 0
}

// CommonElem
type IMMessageBody_CommonElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceType  uint32 `protobuf:"varint,1,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`    // "uint32_service_type"
	Buffer       []byte `protobuf:"bytes,2,opt,name=buffer,proto3" json:"buffer,omitempty"`                                  // "bytes_pb_elem"
	BusinessType uint32 `protobuf:"varint,3,opt,name=business_type,json=businessType,proto3" json:"business_type,omitempty"` // "uint32_business_type"
}

func (x *IMMessageBody_CommonElement) Reset() {
	*x = IMMessageBody_CommonElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_CommonElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_CommonElement) ProtoMessage() {}

func (x *IMMessageBody_CommonElement) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_CommonElement.ProtoReflect.Descriptor instead.
func (*IMMessageBody_CommonElement) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 6}
}

func (x *IMMessageBody_CommonElement) GetServiceType() uint32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *IMMessageBody_CommonElement) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

func (x *IMMessageBody_CommonElement) GetBusinessType() uint32 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

// ConferenceTipsInfo
type IMMessageBody_ConferenceTipsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionType uint32 `protobuf:"varint,1,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"` // "uint32_session_type"
	SessionUin  uint64 `protobuf:"varint,2,opt,name=session_uin,json=sessionUin,proto3" json:"session_uin,omitempty"`    // "uint64_session_uin"
	Text        string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`                                   // "str_text"
}

func (x *IMMessageBody_ConferenceTipsInfo) Reset() {
	*x = IMMessageBody_ConferenceTipsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_ConferenceTipsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_ConferenceTipsInfo) ProtoMessage() {}

func (x *IMMessageBody_ConferenceTipsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_ConferenceTipsInfo.ProtoReflect.Descriptor instead.
func (*IMMessageBody_ConferenceTipsInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 7}
}

func (x *IMMessageBody_ConferenceTipsInfo) GetSessionType() uint32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *IMMessageBody_ConferenceTipsInfo) GetSessionUin() uint64 {
	if x != nil {
		return x.SessionUin
	}
	return 0
}

func (x *IMMessageBody_ConferenceTipsInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// CrmElem
type IMMessageBody_CrmElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CrmBuf       []byte `protobuf:"bytes,1,opt,name=crm_buf,json=crmBuf,proto3" json:"crm_buf,omitempty"`                   // "crm_buf"
	MessageResid []byte `protobuf:"bytes,2,opt,name=message_resid,json=messageResid,proto3" json:"message_resid,omitempty"` // "bytes_msg_resid"
	QidianFlag   uint32 `protobuf:"varint,3,opt,name=qidian_flag,json=qidianFlag,proto3" json:"qidian_flag,omitempty"`      // "uint32_qidian_flag"
	PushFlag     uint32 `protobuf:"varint,4,opt,name=push_flag,json=pushFlag,proto3" json:"push_flag,omitempty"`            // "uint32_push_flag"
	CountFlag    uint32 `protobuf:"varint,5,opt,name=count_flag,json=countFlag,proto3" json:"count_flag,omitempty"`         // "uint32_count_flag"
}

func (x *IMMessageBody_CrmElement) Reset() {
	*x = IMMessageBody_CrmElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_CrmElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_CrmElement) ProtoMessage() {}

func (x *IMMessageBody_CrmElement) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_CrmElement.ProtoReflect.Descriptor instead.
func (*IMMessageBody_CrmElement) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 8}
}

func (x *IMMessageBody_CrmElement) GetCrmBuf() []byte {
	if x != nil {
		return x.CrmBuf
	}
	return nil
}

func (x *IMMessageBody_CrmElement) GetMessageResid() []byte {
	if x != nil {
		return x.MessageResid
	}
	return nil
}

func (x *IMMessageBody_CrmElement) GetQidianFlag() uint32 {
	if x != nil {
		return x.QidianFlag
	}
	return 0
}

func (x *IMMessageBody_CrmElement) GetPushFlag() uint32 {
	if x != nil {
		return x.PushFlag
	}
	return 0
}

func (x *IMMessageBody_CrmElement) GetCountFlag() uint32 {
	if x != nil {
		return x.CountFlag
	}
	return 0
}

// CustomElem
type IMMessageBody_CustomElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc     []byte `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc,omitempty"`                          // "bytes_desc"
	Data     []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`                          // "bytes_data"
	EnumType uint32 `protobuf:"varint,3,opt,name=enum_type,json=enumType,proto3" json:"enum_type,omitempty"` // "enum_type" Enum
	Extra    []byte `protobuf:"bytes,4,opt,name=extra,proto3" json:"extra,omitempty"`                        // "bytes_ext"
	Sound    []byte `protobuf:"bytes,5,opt,name=sound,proto3" json:"sound,omitempty"`                        // "bytes_sound"
}

func (x *IMMessageBody_CustomElement) Reset() {
	*x = IMMessageBody_CustomElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_CustomElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_CustomElement) ProtoMessage() {}

func (x *IMMessageBody_CustomElement) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_CustomElement.ProtoReflect.Descriptor instead.
func (*IMMessageBody_CustomElement) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 9}
}

func (x *IMMessageBody_CustomElement) GetDesc() []byte {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *IMMessageBody_CustomElement) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *IMMessageBody_CustomElement) GetEnumType() uint32 {
	if x != nil {
		return x.EnumType
	}
	return 0
}

func (x *IMMessageBody_CustomElement) GetExtra() []byte {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *IMMessageBody_CustomElement) GetSound() []byte {
	if x != nil {
		return x.Sound
	}
	return nil
}

// CustomFace
type IMMessageBody_CustomFace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid        []byte `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`                                    // "bytes_guid"
	FilePath    string `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`            // "str_file_path"
	Shortcut    string `protobuf:"bytes,3,opt,name=shortcut,proto3" json:"shortcut,omitempty"`                            // "str_shortcut"
	Buffer      []byte `protobuf:"bytes,4,opt,name=buffer,proto3" json:"buffer,omitempty"`                                // "bytes_buffer"
	Flag        []byte `protobuf:"bytes,5,opt,name=flag,proto3" json:"flag,omitempty"`                                    // "bytes_flag"
	OldData     []byte `protobuf:"bytes,6,opt,name=old_data,json=oldData,proto3" json:"old_data,omitempty"`               // "bytes_old_data"
	FileId      uint32 `protobuf:"varint,7,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`                 // "uint32_file_id"
	ServerIp    uint32 `protobuf:"varint,8,opt,name=server_ip,json=serverIp,proto3" json:"server_ip,omitempty"`           // "uint32_server_ip"
	ServerPort  uint32 `protobuf:"varint,9,opt,name=server_port,json=serverPort,proto3" json:"server_port,omitempty"`     // "uint32_server_port"
	FileType    uint32 `protobuf:"varint,10,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`          // "uint32_file_type"
	Signature   []byte `protobuf:"bytes,11,opt,name=signature,proto3" json:"signature,omitempty"`                         // "bytes_signature"
	Useful      uint32 `protobuf:"varint,12,opt,name=useful,proto3" json:"useful,omitempty"`                              // "uint32_useful"
	FileMd5     []byte `protobuf:"bytes,13,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`              // "bytes_md5"
	ThumbUrl    string `protobuf:"bytes,14,opt,name=thumb_url,json=thumbUrl,proto3" json:"thumb_url,omitempty"`           // "str_thumb_url"
	BigUrl      string `protobuf:"bytes,15,opt,name=big_url,json=bigUrl,proto3" json:"big_url,omitempty"`                 // "str_big_url"
	OrigUrl     string `protobuf:"bytes,16,opt,name=orig_url,json=origUrl,proto3" json:"orig_url,omitempty"`              // "str_orig_url"
	BizType     uint32 `protobuf:"varint,17,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`             // "biz_type"
	RepeatIndex uint32 `protobuf:"varint,18,opt,name=repeat_index,json=repeatIndex,proto3" json:"repeat_index,omitempty"` // "repeat_index"
	RepeatImage uint32 `protobuf:"varint,19,opt,name=repeat_image,json=repeatImage,proto3" json:"repeat_image,omitempty"` // "repeat_image"
	ImageType   uint32 `protobuf:"varint,20,opt,name=image_type,json=imageType,proto3" json:"image_type,omitempty"`       // "image_type"
	Index       uint32 `protobuf:"varint,21,opt,name=index,proto3" json:"index,omitempty"`                                // "index"
	Width       uint32 `protobuf:"varint,22,opt,name=width,proto3" json:"width,omitempty"`                                // "uint32_width"
	Height      uint32 `protobuf:"varint,23,opt,name=height,proto3" json:"height,omitempty"`                              // "uint32_height"
	Source      uint32 `protobuf:"varint,24,opt,name=source,proto3" json:"source,omitempty"`                              // "uint32_source"
	FileSize    uint32 `protobuf:"varint,25,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`          // "uint32_size"
	Origin      uint32 `protobuf:"varint,26,opt,name=origin,proto3" json:"origin,omitempty"`                              // "uint32_origin"
	ThumbWidth  uint32 `protobuf:"varint,27,opt,name=thumb_width,json=thumbWidth,proto3" json:"thumb_width,omitempty"`    // "uint32_thumb_width"
	ThumbHeight uint32 `protobuf:"varint,28,opt,name=thumb_height,json=thumbHeight,proto3" json:"thumb_height,omitempty"` // "uint32_thumb_height"
	ShowLen     uint32 `protobuf:"varint,29,opt,name=show_len,json=showLen,proto3" json:"show_len,omitempty"`             // "uint32_show_len"
	DownloadLen uint32 `protobuf:"varint,30,opt,name=download_len,json=downloadLen,proto3" json:"download_len,omitempty"` // "uint32_download_len"
	Url_400     string `protobuf:"bytes,31,opt,name=url_400,json=url400,proto3" json:"url_400,omitempty"`                 // "str_400_url"
	Width_400   uint32 `protobuf:"varint,32,opt,name=width_400,json=width400,proto3" json:"width_400,omitempty"`          // "uint32_400_width"
	Height_400  uint32 `protobuf:"varint,33,opt,name=height_400,json=height400,proto3" json:"height_400,omitempty"`       // "uint32_400_height"
	PbReserve   []byte `protobuf:"bytes,34,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`        // "bytes_pb_reserve"
}

func (x *IMMessageBody_CustomFace) Reset() {
	*x = IMMessageBody_CustomFace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_CustomFace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_CustomFace) ProtoMessage() {}

func (x *IMMessageBody_CustomFace) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_CustomFace.ProtoReflect.Descriptor instead.
func (*IMMessageBody_CustomFace) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 10}
}

func (x *IMMessageBody_CustomFace) GetGuid() []byte {
	if x != nil {
		return x.Guid
	}
	return nil
}

func (x *IMMessageBody_CustomFace) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *IMMessageBody_CustomFace) GetShortcut() string {
	if x != nil {
		return x.Shortcut
	}
	return ""
}

func (x *IMMessageBody_CustomFace) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

func (x *IMMessageBody_CustomFace) GetFlag() []byte {
	if x != nil {
		return x.Flag
	}
	return nil
}

func (x *IMMessageBody_CustomFace) GetOldData() []byte {
	if x != nil {
		return x.OldData
	}
	return nil
}

func (x *IMMessageBody_CustomFace) GetFileId() uint32 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetServerIp() uint32 {
	if x != nil {
		return x.ServerIp
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetServerPort() uint32 {
	if x != nil {
		return x.ServerPort
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetFileType() uint32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *IMMessageBody_CustomFace) GetUseful() uint32 {
	if x != nil {
		return x.Useful
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *IMMessageBody_CustomFace) GetThumbUrl() string {
	if x != nil {
		return x.ThumbUrl
	}
	return ""
}

func (x *IMMessageBody_CustomFace) GetBigUrl() string {
	if x != nil {
		return x.BigUrl
	}
	return ""
}

func (x *IMMessageBody_CustomFace) GetOrigUrl() string {
	if x != nil {
		return x.OrigUrl
	}
	return ""
}

func (x *IMMessageBody_CustomFace) GetBizType() uint32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetRepeatIndex() uint32 {
	if x != nil {
		return x.RepeatIndex
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetRepeatImage() uint32 {
	if x != nil {
		return x.RepeatImage
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetImageType() uint32 {
	if x != nil {
		return x.ImageType
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetSource() uint32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetFileSize() uint32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetOrigin() uint32 {
	if x != nil {
		return x.Origin
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetThumbWidth() uint32 {
	if x != nil {
		return x.ThumbWidth
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetThumbHeight() uint32 {
	if x != nil {
		return x.ThumbHeight
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetShowLen() uint32 {
	if x != nil {
		return x.ShowLen
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetDownloadLen() uint32 {
	if x != nil {
		return x.DownloadLen
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetUrl_400() string {
	if x != nil {
		return x.Url_400
	}
	return ""
}

func (x *IMMessageBody_CustomFace) GetWidth_400() uint32 {
	if x != nil {
		return x.Width_400
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetHeight_400() uint32 {
	if x != nil {
		return x.Height_400
	}
	return 0
}

func (x *IMMessageBody_CustomFace) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

// DeliverGiftMsg
type IMMessageBody_DeliverGiftMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GrayTipContent       []byte `protobuf:"bytes,1,opt,name=gray_tip_content,json=grayTipContent,proto3" json:"gray_tip_content,omitempty"`                     // "bytes_gray_tip_content"
	AnimationPackageId   uint32 `protobuf:"varint,2,opt,name=animation_package_id,json=animationPackageId,proto3" json:"animation_package_id,omitempty"`        // "uint32_animation_package_id"
	AnimationPackageUrlA []byte `protobuf:"bytes,3,opt,name=animation_package_url_a,json=animationPackageUrlA,proto3" json:"animation_package_url_a,omitempty"` // "bytes_animation_package_url_a"
	AnimationPackageUrlI []byte `protobuf:"bytes,4,opt,name=animation_package_url_i,json=animationPackageUrlI,proto3" json:"animation_package_url_i,omitempty"` // "bytes_animation_package_url_i"
	RemindBrief          []byte `protobuf:"bytes,5,opt,name=remind_brief,json=remindBrief,proto3" json:"remind_brief,omitempty"`                                // "bytes_remind_brief"
	GiftId               uint32 `protobuf:"varint,6,opt,name=gift_id,json=giftId,proto3" json:"gift_id,omitempty"`                                              // "uint32_gift_id"
	GiftCount            uint32 `protobuf:"varint,7,opt,name=gift_count,json=giftCount,proto3" json:"gift_count,omitempty"`                                     // "uint32_gift_count"
	AnimationBrief       []byte `protobuf:"bytes,8,opt,name=animation_brief,json=animationBrief,proto3" json:"animation_brief,omitempty"`                       // "bytes_animation_brief"
	SenderUin            uint64 `protobuf:"varint,9,opt,name=sender_uin,json=senderUin,proto3" json:"sender_uin,omitempty"`                                     // "uint64_sender_uin"
	ReceiverUin          uint64 `protobuf:"varint,10,opt,name=receiver_uin,json=receiverUin,proto3" json:"receiver_uin,omitempty"`                              // "uint64_receiver_uin"
	StmessageTitle       []byte `protobuf:"bytes,11,opt,name=stmessage_title,json=stmessageTitle,proto3" json:"stmessage_title,omitempty"`                      // "bytes_stmessage_title"
	StmessageSubtitle    []byte `protobuf:"bytes,12,opt,name=stmessage_subtitle,json=stmessageSubtitle,proto3" json:"stmessage_subtitle,omitempty"`             // "bytes_stmessage_subtitle"
	StmessageMessage     []byte `protobuf:"bytes,13,opt,name=stmessage_message,json=stmessageMessage,proto3" json:"stmessage_message,omitempty"`                // "bytes_stmessage_message"
	StmessageGiftpicid   uint32 `protobuf:"varint,14,opt,name=stmessage_giftpicid,json=stmessageGiftpicid,proto3" json:"stmessage_giftpicid,omitempty"`         // "uint32_stmessage_giftpicid"
	StmessageComefrom    []byte `protobuf:"bytes,15,opt,name=stmessage_comefrom,json=stmessageComefrom,proto3" json:"stmessage_comefrom,omitempty"`             // "bytes_stmessage_comefrom"
	StmessageExflag      uint32 `protobuf:"varint,16,opt,name=stmessage_exflag,json=stmessageExflag,proto3" json:"stmessage_exflag,omitempty"`                  // "uint32_stmessage_exflag"
	ToAllGiftId          []byte `protobuf:"bytes,17,opt,name=to_all_gift_id,json=toAllGiftId,proto3" json:"to_all_gift_id,omitempty"`                           // "bytes_to_all_gift_id"
	ComefromLink         []byte `protobuf:"bytes,18,opt,name=comefrom_link,json=comefromLink,proto3" json:"comefrom_link,omitempty"`                            // "bytes_comefrom_link"
	PbReserve            []byte `protobuf:"bytes,19,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`                                     // "bytes_pb_reserve"
	ReceiverName         []byte `protobuf:"bytes,20,opt,name=receiver_name,json=receiverName,proto3" json:"receiver_name,omitempty"`                            // "bytes_receiver_name"
	ReceiverPic          []byte `protobuf:"bytes,21,opt,name=receiver_pic,json=receiverPic,proto3" json:"receiver_pic,omitempty"`                               // "bytes_receiver_pic"
	StmessageGifturl     []byte `protobuf:"bytes,22,opt,name=stmessage_gifturl,json=stmessageGifturl,proto3" json:"stmessage_gifturl,omitempty"`                // "bytes_stmessage_gifturl"
}

func (x *IMMessageBody_DeliverGiftMessage) Reset() {
	*x = IMMessageBody_DeliverGiftMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_DeliverGiftMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_DeliverGiftMessage) ProtoMessage() {}

func (x *IMMessageBody_DeliverGiftMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_DeliverGiftMessage.ProtoReflect.Descriptor instead.
func (*IMMessageBody_DeliverGiftMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 11}
}

func (x *IMMessageBody_DeliverGiftMessage) GetGrayTipContent() []byte {
	if x != nil {
		return x.GrayTipContent
	}
	return nil
}

func (x *IMMessageBody_DeliverGiftMessage) GetAnimationPackageId() uint32 {
	if x != nil {
		return x.AnimationPackageId
	}
	return 0
}

func (x *IMMessageBody_DeliverGiftMessage) GetAnimationPackageUrlA() []byte {
	if x != nil {
		return x.AnimationPackageUrlA
	}
	return nil
}

func (x *IMMessageBody_DeliverGiftMessage) GetAnimationPackageUrlI() []byte {
	if x != nil {
		return x.AnimationPackageUrlI
	}
	return nil
}

func (x *IMMessageBody_DeliverGiftMessage) GetRemindBrief() []byte {
	if x != nil {
		return x.RemindBrief
	}
	return nil
}

func (x *IMMessageBody_DeliverGiftMessage) GetGiftId() uint32 {
	if x != nil {
		return x.GiftId
	}
	return 0
}

func (x *IMMessageBody_DeliverGiftMessage) GetGiftCount() uint32 {
	if x != nil {
		return x.GiftCount
	}
	return 0
}

func (x *IMMessageBody_DeliverGiftMessage) GetAnimationBrief() []byte {
	if x != nil {
		return x.AnimationBrief
	}
	return nil
}

func (x *IMMessageBody_DeliverGiftMessage) GetSenderUin() uint64 {
	if x != nil {
		return x.SenderUin
	}
	return 0
}

func (x *IMMessageBody_DeliverGiftMessage) GetReceiverUin() uint64 {
	if x != nil {
		return x.ReceiverUin
	}
	return 0
}

func (x *IMMessageBody_DeliverGiftMessage) GetStmessageTitle() []byte {
	if x != nil {
		return x.StmessageTitle
	}
	return nil
}

func (x *IMMessageBody_DeliverGiftMessage) GetStmessageSubtitle() []byte {
	if x != nil {
		return x.StmessageSubtitle
	}
	return nil
}

func (x *IMMessageBody_DeliverGiftMessage) GetStmessageMessage() []byte {
	if x != nil {
		return x.StmessageMessage
	}
	return nil
}

func (x *IMMessageBody_DeliverGiftMessage) GetStmessageGiftpicid() uint32 {
	if x != nil {
		return x.StmessageGiftpicid
	}
	return 0
}

func (x *IMMessageBody_DeliverGiftMessage) GetStmessageComefrom() []byte {
	if x != nil {
		return x.StmessageComefrom
	}
	return nil
}

func (x *IMMessageBody_DeliverGiftMessage) GetStmessageExflag() uint32 {
	if x != nil {
		return x.StmessageExflag
	}
	return 0
}

func (x *IMMessageBody_DeliverGiftMessage) GetToAllGiftId() []byte {
	if x != nil {
		return x.ToAllGiftId
	}
	return nil
}

func (x *IMMessageBody_DeliverGiftMessage) GetComefromLink() []byte {
	if x != nil {
		return x.ComefromLink
	}
	return nil
}

func (x *IMMessageBody_DeliverGiftMessage) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

func (x *IMMessageBody_DeliverGiftMessage) GetReceiverName() []byte {
	if x != nil {
		return x.ReceiverName
	}
	return nil
}

func (x *IMMessageBody_DeliverGiftMessage) GetReceiverPic() []byte {
	if x != nil {
		return x.ReceiverPic
	}
	return nil
}

func (x *IMMessageBody_DeliverGiftMessage) GetStmessageGifturl() []byte {
	if x != nil {
		return x.StmessageGifturl
	}
	return nil
}

// EIMInfo
type IMMessageBody_EIMInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootId uint64 `protobuf:"varint,1,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"` // "uint64_root_id"
	Flag   uint32 `protobuf:"varint,2,opt,name=flag,proto3" json:"flag,omitempty"`                   // "uint32_flag"
}

func (x *IMMessageBody_EIMInfo) Reset() {
	*x = IMMessageBody_EIMInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_EIMInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_EIMInfo) ProtoMessage() {}

func (x *IMMessageBody_EIMInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_EIMInfo.ProtoReflect.Descriptor instead.
func (*IMMessageBody_EIMInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 12}
}

func (x *IMMessageBody_EIMInfo) GetRootId() uint64 {
	if x != nil {
		return x.RootId
	}
	return 0
}

func (x *IMMessageBody_EIMInfo) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

// Elem
type IMMessageBody_Element struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text                  *IMMessageBody_Text                   `protobuf:"bytes,1,opt,name=text,proto3,oneof" json:"text,omitempty"`                                                                   // "text"
	Face                  *IMMessageBody_Face                   `protobuf:"bytes,2,opt,name=face,proto3,oneof" json:"face,omitempty"`                                                                   // "face"
	OnlineImage           *IMMessageBody_OnlineImage            `protobuf:"bytes,3,opt,name=online_image,json=onlineImage,proto3,oneof" json:"online_image,omitempty"`                                  // "online_image"
	NotOnlineImage        *IMMessageBody_NotOnlineImage         `protobuf:"bytes,4,opt,name=not_online_image,json=notOnlineImage,proto3,oneof" json:"not_online_image,omitempty"`                       // "not_online_image"
	Transport             *IMMessageBody_TransportElement       `protobuf:"bytes,5,opt,name=transport,proto3,oneof" json:"transport,omitempty"`                                                         // "trans_elem_info"
	MarketFace            *IMMessageBody_MarketFace             `protobuf:"bytes,6,opt,name=market_face,json=marketFace,proto3,oneof" json:"market_face,omitempty"`                                     // "market_face"
	ElementFlags          *IMMessageBody_ElementFlags           `protobuf:"bytes,7,opt,name=element_flags,json=elementFlags,proto3,oneof" json:"element_flags,omitempty"`                               // "elem_flags"
	CustomFace            *IMMessageBody_CustomFace             `protobuf:"bytes,8,opt,name=custom_face,json=customFace,proto3,oneof" json:"custom_face,omitempty"`                                     // "custom_face"
	ElementFlags2         *IMMessageBody_ElementFlags2          `protobuf:"bytes,9,opt,name=element_flags2,json=elementFlags2,proto3,oneof" json:"element_flags2,omitempty"`                            // "elem_flags2"
	FunFace               *IMMessageBody_FunFace                `protobuf:"bytes,10,opt,name=fun_face,json=funFace,proto3,oneof" json:"fun_face,omitempty"`                                             // "fun_face"
	SecretFile            *IMMessageBody_SecretFileMessage      `protobuf:"bytes,11,opt,name=secret_file,json=secretFile,proto3,oneof" json:"secret_file,omitempty"`                                    // "secret_file"
	RichMessage           *IMMessageBody_RichMessage            `protobuf:"bytes,12,opt,name=rich_message,json=richMessage,proto3,oneof" json:"rich_message,omitempty"`                                 // "rich_msg"
	GroupFile             *IMMessageBody_GroupFile              `protobuf:"bytes,13,opt,name=group_file,json=groupFile,proto3,oneof" json:"group_file,omitempty"`                                       // "group_file"
	PublicGroup           *IMMessageBody_PublicGroup            `protobuf:"bytes,14,opt,name=public_group,json=publicGroup,proto3,oneof" json:"public_group,omitempty"`                                 // "pub_group"
	MarketTransport       *IMMessageBody_MarketTransport        `protobuf:"bytes,15,opt,name=market_transport,json=marketTransport,proto3,oneof" json:"market_transport,omitempty"`                     // "market_trans"
	ExtraInfo             *IMMessageBody_ExtraInfo              `protobuf:"bytes,16,opt,name=extra_info,json=extraInfo,proto3,oneof" json:"extra_info,omitempty"`                                       // "extra_info"
	ShakeWindow           *IMMessageBody_ShakeWindow            `protobuf:"bytes,17,opt,name=shake_window,json=shakeWindow,proto3,oneof" json:"shake_window,omitempty"`                                 // "shake_window"
	PublicAccount         *IMMessageBody_PublicAccount          `protobuf:"bytes,18,opt,name=public_account,json=publicAccount,proto3,oneof" json:"public_account,omitempty"`                           // "pub_account"
	VideoFile             *IMMessageBody_VideoFile              `protobuf:"bytes,19,opt,name=video_file,json=videoFile,proto3,oneof" json:"video_file,omitempty"`                                       // "video_file"
	TipsInfo              *IMMessageBody_TipsInfo               `protobuf:"bytes,20,opt,name=tips_info,json=tipsInfo,proto3,oneof" json:"tips_info,omitempty"`                                          // "tips_info"
	AnonymousGroupMessage *IMMessageBody_AnonymousGroupMessage  `protobuf:"bytes,21,opt,name=anonymous_group_message,json=anonymousGroupMessage,proto3,oneof" json:"anonymous_group_message,omitempty"` // "anon_group_msg"
	QqLiveOld             *IMMessageBody_QQLiveOld              `protobuf:"bytes,22,opt,name=qq_live_old,json=qqLiveOld,proto3,oneof" json:"qq_live_old,omitempty"`                                     // "qq_live_old"
	LifeOnline            *IMMessageBody_LifeOnlineAccount      `protobuf:"bytes,23,opt,name=life_online,json=lifeOnline,proto3,oneof" json:"life_online,omitempty"`                                    // "life_online"
	QqwalletMessage       *IMMessageBody_QQWalletMessage        `protobuf:"bytes,24,opt,name=qqwallet_message,json=qqwalletMessage,proto3,oneof" json:"qqwallet_message,omitempty"`                     // "qqwallet_msg"
	Crm                   *IMMessageBody_CrmElement             `protobuf:"bytes,25,opt,name=crm,proto3,oneof" json:"crm,omitempty"`                                                                    // "crm_elem"
	ConferenceTipsInfo    *IMMessageBody_ConferenceTipsInfo     `protobuf:"bytes,26,opt,name=conference_tips_info,json=conferenceTipsInfo,proto3,oneof" json:"conference_tips_info,omitempty"`          // "conference_tips_info"
	RedbagInfo            *IMMessageBody_RedBagInfo             `protobuf:"bytes,27,opt,name=redbag_info,json=redbagInfo,proto3,oneof" json:"redbag_info,omitempty"`                                    // "redbag_info"
	LowVersionTips        *IMMessageBody_LowVersionTips         `protobuf:"bytes,28,opt,name=low_version_tips,json=lowVersionTips,proto3,oneof" json:"low_version_tips,omitempty"`                      // "low_version_tips"
	BankcodeCtrlInfo      []byte                                `protobuf:"bytes,29,opt,name=bankcode_ctrl_info,json=bankcodeCtrlInfo,proto3,oneof" json:"bankcode_ctrl_info,omitempty"`                // "bankcode_ctrl_info"
	NearByMessage         *IMMessageBody_NearByMessageType      `protobuf:"bytes,30,opt,name=near_by_message,json=nearByMessage,proto3,oneof" json:"near_by_message,omitempty"`                         // "near_by_msg"
	Custom                *IMMessageBody_CustomElement          `protobuf:"bytes,31,opt,name=custom,proto3,oneof" json:"custom,omitempty"`                                                              // "custom_elem"
	LocationInfo          *IMMessageBody_LocationInfo           `protobuf:"bytes,32,opt,name=location_info,json=locationInfo,proto3,oneof" json:"location_info,omitempty"`                              // "location_info"
	PublicAccountInfo     *IMMessageBody_PublicAccountInfo      `protobuf:"bytes,33,opt,name=public_account_info,json=publicAccountInfo,proto3,oneof" json:"public_account_info,omitempty"`             // "pub_acc_info"
	SmallEmoji            *IMMessageBody_SmallEmoji             `protobuf:"bytes,34,opt,name=small_emoji,json=smallEmoji,proto3,oneof" json:"small_emoji,omitempty"`                                    // "small_emoji"
	FsjMessage            *IMMessageBody_FSJMessageElement      `protobuf:"bytes,35,opt,name=fsj_message,json=fsjMessage,proto3,oneof" json:"fsj_message,omitempty"`                                    // "fsj_msg_elem"
	ArkApp                *IMMessageBody_ArkAppElement          `protobuf:"bytes,36,opt,name=ark_app,json=arkApp,proto3,oneof" json:"ark_app,omitempty"`                                                // "ark_app"
	GeneralFlags          *IMMessageBody_GeneralFlags           `protobuf:"bytes,37,opt,name=general_flags,json=generalFlags,proto3,oneof" json:"general_flags,omitempty"`                              // "general_flags"
	HcFlashPic            *IMMessageBody_CustomFace             `protobuf:"bytes,38,opt,name=hc_flash_pic,json=hcFlashPic,proto3,oneof" json:"hc_flash_pic,omitempty"`                                  // "hc_flash_pic"
	DeliverGiftMessage    *IMMessageBody_DeliverGiftMessage     `protobuf:"bytes,39,opt,name=deliver_gift_message,json=deliverGiftMessage,proto3,oneof" json:"deliver_gift_message,omitempty"`          // "deliver_gift_msg"
	BitappMessage         *IMMessageBody_BitAppMessage          `protobuf:"bytes,40,opt,name=bitapp_message,json=bitappMessage,proto3,oneof" json:"bitapp_message,omitempty"`                           // "bitapp_msg"
	OpenQqData            *IMMessageBody_OpenQQData             `protobuf:"bytes,41,opt,name=open_qq_data,json=openQqData,proto3,oneof" json:"open_qq_data,omitempty"`                                  // "open_qq_data"
	ApolloMessage         *IMMessageBody_ApolloActionMessage    `protobuf:"bytes,42,opt,name=apollo_message,json=apolloMessage,proto3,oneof" json:"apollo_message,omitempty"`                           // "apollo_msg"
	GroupPubAccInfo       *IMMessageBody_GroupPublicAccountInfo `protobuf:"bytes,43,opt,name=group_pub_acc_info,json=groupPubAccInfo,proto3,oneof" json:"group_pub_acc_info,omitempty"`                 // "group_pub_acc_info"
	BlessingMessage       *IMMessageBody_BlessingMessage        `protobuf:"bytes,44,opt,name=blessing_message,json=blessingMessage,proto3,oneof" json:"blessing_message,omitempty"`                     // "bless_msg"
	SourceMessage         *IMMessageBody_SourceMessage          `protobuf:"bytes,45,opt,name=source_message,json=sourceMessage,proto3,oneof" json:"source_message,omitempty"`                           // "src_msg"
	LolaMessage           *IMMessageBody_LolaMessage            `protobuf:"bytes,46,opt,name=lola_message,json=lolaMessage,proto3,oneof" json:"lola_message,omitempty"`                                 // "lola_msg"
	GroupBusinessMessage  *IMMessageBody_GroupBusinessMessage   `protobuf:"bytes,47,opt,name=group_business_message,json=groupBusinessMessage,proto3,oneof" json:"group_business_message,omitempty"`    // "group_business_msg"
	MessageWorkflowNotify *IMMessageBody_WorkflowNotifyMessage  `protobuf:"bytes,48,opt,name=message_workflow_notify,json=messageWorkflowNotify,proto3,oneof" json:"message_workflow_notify,omitempty"` // "msg_workflow_notify"
	Pat                   *IMMessageBody_PatsElement            `protobuf:"bytes,49,opt,name=pat,proto3,oneof" json:"pat,omitempty"`                                                                    // "pat_elem"
	GroupPost             *IMMessageBody_GroupPostElement       `protobuf:"bytes,50,opt,name=group_post,json=groupPost,proto3,oneof" json:"group_post,omitempty"`                                       // "group_post_elem"
	LightApp              *IMMessageBody_LightAppElement        `protobuf:"bytes,51,opt,name=light_app,json=lightApp,proto3,oneof" json:"light_app,omitempty"`                                          // "light_app"
	EimInfo               *IMMessageBody_EIMInfo                `protobuf:"bytes,52,opt,name=eim_info,json=eimInfo,proto3,oneof" json:"eim_info,omitempty"`                                             // "eim_info"
	Common                *IMMessageBody_CommonElement          `protobuf:"bytes,53,opt,name=common,proto3,oneof" json:"common,omitempty"`                                                              // "common_elem"
}

func (x *IMMessageBody_Element) Reset() {
	*x = IMMessageBody_Element{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_Element) ProtoMessage() {}

func (x *IMMessageBody_Element) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_Element.ProtoReflect.Descriptor instead.
func (*IMMessageBody_Element) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 13}
}

func (x *IMMessageBody_Element) GetText() *IMMessageBody_Text {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *IMMessageBody_Element) GetFace() *IMMessageBody_Face {
	if x != nil {
		return x.Face
	}
	return nil
}

func (x *IMMessageBody_Element) GetOnlineImage() *IMMessageBody_OnlineImage {
	if x != nil {
		return x.OnlineImage
	}
	return nil
}

func (x *IMMessageBody_Element) GetNotOnlineImage() *IMMessageBody_NotOnlineImage {
	if x != nil {
		return x.NotOnlineImage
	}
	return nil
}

func (x *IMMessageBody_Element) GetTransport() *IMMessageBody_TransportElement {
	if x != nil {
		return x.Transport
	}
	return nil
}

func (x *IMMessageBody_Element) GetMarketFace() *IMMessageBody_MarketFace {
	if x != nil {
		return x.MarketFace
	}
	return nil
}

func (x *IMMessageBody_Element) GetElementFlags() *IMMessageBody_ElementFlags {
	if x != nil {
		return x.ElementFlags
	}
	return nil
}

func (x *IMMessageBody_Element) GetCustomFace() *IMMessageBody_CustomFace {
	if x != nil {
		return x.CustomFace
	}
	return nil
}

func (x *IMMessageBody_Element) GetElementFlags2() *IMMessageBody_ElementFlags2 {
	if x != nil {
		return x.ElementFlags2
	}
	return nil
}

func (x *IMMessageBody_Element) GetFunFace() *IMMessageBody_FunFace {
	if x != nil {
		return x.FunFace
	}
	return nil
}

func (x *IMMessageBody_Element) GetSecretFile() *IMMessageBody_SecretFileMessage {
	if x != nil {
		return x.SecretFile
	}
	return nil
}

func (x *IMMessageBody_Element) GetRichMessage() *IMMessageBody_RichMessage {
	if x != nil {
		return x.RichMessage
	}
	return nil
}

func (x *IMMessageBody_Element) GetGroupFile() *IMMessageBody_GroupFile {
	if x != nil {
		return x.GroupFile
	}
	return nil
}

func (x *IMMessageBody_Element) GetPublicGroup() *IMMessageBody_PublicGroup {
	if x != nil {
		return x.PublicGroup
	}
	return nil
}

func (x *IMMessageBody_Element) GetMarketTransport() *IMMessageBody_MarketTransport {
	if x != nil {
		return x.MarketTransport
	}
	return nil
}

func (x *IMMessageBody_Element) GetExtraInfo() *IMMessageBody_ExtraInfo {
	if x != nil {
		return x.ExtraInfo
	}
	return nil
}

func (x *IMMessageBody_Element) GetShakeWindow() *IMMessageBody_ShakeWindow {
	if x != nil {
		return x.ShakeWindow
	}
	return nil
}

func (x *IMMessageBody_Element) GetPublicAccount() *IMMessageBody_PublicAccount {
	if x != nil {
		return x.PublicAccount
	}
	return nil
}

func (x *IMMessageBody_Element) GetVideoFile() *IMMessageBody_VideoFile {
	if x != nil {
		return x.VideoFile
	}
	return nil
}

func (x *IMMessageBody_Element) GetTipsInfo() *IMMessageBody_TipsInfo {
	if x != nil {
		return x.TipsInfo
	}
	return nil
}

func (x *IMMessageBody_Element) GetAnonymousGroupMessage() *IMMessageBody_AnonymousGroupMessage {
	if x != nil {
		return x.AnonymousGroupMessage
	}
	return nil
}

func (x *IMMessageBody_Element) GetQqLiveOld() *IMMessageBody_QQLiveOld {
	if x != nil {
		return x.QqLiveOld
	}
	return nil
}

func (x *IMMessageBody_Element) GetLifeOnline() *IMMessageBody_LifeOnlineAccount {
	if x != nil {
		return x.LifeOnline
	}
	return nil
}

func (x *IMMessageBody_Element) GetQqwalletMessage() *IMMessageBody_QQWalletMessage {
	if x != nil {
		return x.QqwalletMessage
	}
	return nil
}

func (x *IMMessageBody_Element) GetCrm() *IMMessageBody_CrmElement {
	if x != nil {
		return x.Crm
	}
	return nil
}

func (x *IMMessageBody_Element) GetConferenceTipsInfo() *IMMessageBody_ConferenceTipsInfo {
	if x != nil {
		return x.ConferenceTipsInfo
	}
	return nil
}

func (x *IMMessageBody_Element) GetRedbagInfo() *IMMessageBody_RedBagInfo {
	if x != nil {
		return x.RedbagInfo
	}
	return nil
}

func (x *IMMessageBody_Element) GetLowVersionTips() *IMMessageBody_LowVersionTips {
	if x != nil {
		return x.LowVersionTips
	}
	return nil
}

func (x *IMMessageBody_Element) GetBankcodeCtrlInfo() []byte {
	if x != nil {
		return x.BankcodeCtrlInfo
	}
	return nil
}

func (x *IMMessageBody_Element) GetNearByMessage() *IMMessageBody_NearByMessageType {
	if x != nil {
		return x.NearByMessage
	}
	return nil
}

func (x *IMMessageBody_Element) GetCustom() *IMMessageBody_CustomElement {
	if x != nil {
		return x.Custom
	}
	return nil
}

func (x *IMMessageBody_Element) GetLocationInfo() *IMMessageBody_LocationInfo {
	if x != nil {
		return x.LocationInfo
	}
	return nil
}

func (x *IMMessageBody_Element) GetPublicAccountInfo() *IMMessageBody_PublicAccountInfo {
	if x != nil {
		return x.PublicAccountInfo
	}
	return nil
}

func (x *IMMessageBody_Element) GetSmallEmoji() *IMMessageBody_SmallEmoji {
	if x != nil {
		return x.SmallEmoji
	}
	return nil
}

func (x *IMMessageBody_Element) GetFsjMessage() *IMMessageBody_FSJMessageElement {
	if x != nil {
		return x.FsjMessage
	}
	return nil
}

func (x *IMMessageBody_Element) GetArkApp() *IMMessageBody_ArkAppElement {
	if x != nil {
		return x.ArkApp
	}
	return nil
}

func (x *IMMessageBody_Element) GetGeneralFlags() *IMMessageBody_GeneralFlags {
	if x != nil {
		return x.GeneralFlags
	}
	return nil
}

func (x *IMMessageBody_Element) GetHcFlashPic() *IMMessageBody_CustomFace {
	if x != nil {
		return x.HcFlashPic
	}
	return nil
}

func (x *IMMessageBody_Element) GetDeliverGiftMessage() *IMMessageBody_DeliverGiftMessage {
	if x != nil {
		return x.DeliverGiftMessage
	}
	return nil
}

func (x *IMMessageBody_Element) GetBitappMessage() *IMMessageBody_BitAppMessage {
	if x != nil {
		return x.BitappMessage
	}
	return nil
}

func (x *IMMessageBody_Element) GetOpenQqData() *IMMessageBody_OpenQQData {
	if x != nil {
		return x.OpenQqData
	}
	return nil
}

func (x *IMMessageBody_Element) GetApolloMessage() *IMMessageBody_ApolloActionMessage {
	if x != nil {
		return x.ApolloMessage
	}
	return nil
}

func (x *IMMessageBody_Element) GetGroupPubAccInfo() *IMMessageBody_GroupPublicAccountInfo {
	if x != nil {
		return x.GroupPubAccInfo
	}
	return nil
}

func (x *IMMessageBody_Element) GetBlessingMessage() *IMMessageBody_BlessingMessage {
	if x != nil {
		return x.BlessingMessage
	}
	return nil
}

func (x *IMMessageBody_Element) GetSourceMessage() *IMMessageBody_SourceMessage {
	if x != nil {
		return x.SourceMessage
	}
	return nil
}

func (x *IMMessageBody_Element) GetLolaMessage() *IMMessageBody_LolaMessage {
	if x != nil {
		return x.LolaMessage
	}
	return nil
}

func (x *IMMessageBody_Element) GetGroupBusinessMessage() *IMMessageBody_GroupBusinessMessage {
	if x != nil {
		return x.GroupBusinessMessage
	}
	return nil
}

func (x *IMMessageBody_Element) GetMessageWorkflowNotify() *IMMessageBody_WorkflowNotifyMessage {
	if x != nil {
		return x.MessageWorkflowNotify
	}
	return nil
}

func (x *IMMessageBody_Element) GetPat() *IMMessageBody_PatsElement {
	if x != nil {
		return x.Pat
	}
	return nil
}

func (x *IMMessageBody_Element) GetGroupPost() *IMMessageBody_GroupPostElement {
	if x != nil {
		return x.GroupPost
	}
	return nil
}

func (x *IMMessageBody_Element) GetLightApp() *IMMessageBody_LightAppElement {
	if x != nil {
		return x.LightApp
	}
	return nil
}

func (x *IMMessageBody_Element) GetEimInfo() *IMMessageBody_EIMInfo {
	if x != nil {
		return x.EimInfo
	}
	return nil
}

func (x *IMMessageBody_Element) GetCommon() *IMMessageBody_CommonElement {
	if x != nil {
		return x.Common
	}
	return nil
}

// ElemFlags
type IMMessageBody_ElementFlags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags        []byte `protobuf:"bytes,1,opt,name=flags,proto3" json:"flags,omitempty"`                                   // "bytes_flags1"
	BusinessData []byte `protobuf:"bytes,2,opt,name=business_data,json=businessData,proto3" json:"business_data,omitempty"` // "bytes_business_data"
}

func (x *IMMessageBody_ElementFlags) Reset() {
	*x = IMMessageBody_ElementFlags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_ElementFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_ElementFlags) ProtoMessage() {}

func (x *IMMessageBody_ElementFlags) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_ElementFlags.ProtoReflect.Descriptor instead.
func (*IMMessageBody_ElementFlags) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 14}
}

func (x *IMMessageBody_ElementFlags) GetFlags() []byte {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *IMMessageBody_ElementFlags) GetBusinessData() []byte {
	if x != nil {
		return x.BusinessData
	}
	return nil
}

// ElemFlags2
type IMMessageBody_ElementFlags2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColorTextId      uint32                                  `protobuf:"varint,1,opt,name=color_text_id,json=colorTextId,proto3" json:"color_text_id,omitempty"`                // "uint32_color_text_id"
	MessageId        uint64                                  `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`                        // "uint64_msg_id"
	WhisperSessionId uint32                                  `protobuf:"varint,3,opt,name=whisper_session_id,json=whisperSessionId,proto3" json:"whisper_session_id,omitempty"` // "uint32_whisper_session_id"
	PttChangeBit     uint32                                  `protobuf:"varint,4,opt,name=ptt_change_bit,json=pttChangeBit,proto3" json:"ptt_change_bit,omitempty"`             // "uint32_ptt_change_bit"
	VipStatus        uint32                                  `protobuf:"varint,5,opt,name=vip_status,json=vipStatus,proto3" json:"vip_status,omitempty"`                        // "uint32_vip_status"
	CompatibleId     uint32                                  `protobuf:"varint,6,opt,name=compatible_id,json=compatibleId,proto3" json:"compatible_id,omitempty"`               // "uint32_compatible_id"
	Items            []*IMMessageBody_ElementFlags2_Instance `protobuf:"bytes,7,rep,name=items,proto3" json:"items,omitempty"`                                                  // "rpt_insts"
	MessageRptCnt    uint32                                  `protobuf:"varint,8,opt,name=message_rpt_cnt,json=messageRptCnt,proto3" json:"message_rpt_cnt,omitempty"`          // "uint32_msg_rpt_cnt"
	SrcInst          *IMMessageBody_ElementFlags2_Instance   `protobuf:"bytes,9,opt,name=src_inst,json=srcInst,proto3" json:"src_inst,omitempty"`                               // "src_inst"
	Longtitude       uint32                                  `protobuf:"varint,10,opt,name=longtitude,proto3" json:"longtitude,omitempty"`                                      // "uint32_longtitude"
	Latitude         uint32                                  `protobuf:"varint,11,opt,name=latitude,proto3" json:"latitude,omitempty"`                                          // "uint32_latitude"
	CustomFont       uint32                                  `protobuf:"varint,12,opt,name=custom_font,json=customFont,proto3" json:"custom_font,omitempty"`                    // "uint32_custom_font"
	PcSupportDefine  *IMMessageBody_PCSupportDefine          `protobuf:"bytes,13,opt,name=pc_support_define,json=pcSupportDefine,proto3" json:"pc_support_define,omitempty"`    // "pc_support_def"
	CrmFlags         uint32                                  `protobuf:"varint,14,opt,name=crm_flags,json=crmFlags,proto3" json:"crm_flags,omitempty"`                          // "uint32_crm_flags"
}

func (x *IMMessageBody_ElementFlags2) Reset() {
	*x = IMMessageBody_ElementFlags2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_ElementFlags2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_ElementFlags2) ProtoMessage() {}

func (x *IMMessageBody_ElementFlags2) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_ElementFlags2.ProtoReflect.Descriptor instead.
func (*IMMessageBody_ElementFlags2) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 15}
}

func (x *IMMessageBody_ElementFlags2) GetColorTextId() uint32 {
	if x != nil {
		return x.ColorTextId
	}
	return 0
}

func (x *IMMessageBody_ElementFlags2) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *IMMessageBody_ElementFlags2) GetWhisperSessionId() uint32 {
	if x != nil {
		return x.WhisperSessionId
	}
	return 0
}

func (x *IMMessageBody_ElementFlags2) GetPttChangeBit() uint32 {
	if x != nil {
		return x.PttChangeBit
	}
	return 0
}

func (x *IMMessageBody_ElementFlags2) GetVipStatus() uint32 {
	if x != nil {
		return x.VipStatus
	}
	return 0
}

func (x *IMMessageBody_ElementFlags2) GetCompatibleId() uint32 {
	if x != nil {
		return x.CompatibleId
	}
	return 0
}

func (x *IMMessageBody_ElementFlags2) GetItems() []*IMMessageBody_ElementFlags2_Instance {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *IMMessageBody_ElementFlags2) GetMessageRptCnt() uint32 {
	if x != nil {
		return x.MessageRptCnt
	}
	return 0
}

func (x *IMMessageBody_ElementFlags2) GetSrcInst() *IMMessageBody_ElementFlags2_Instance {
	if x != nil {
		return x.SrcInst
	}
	return nil
}

func (x *IMMessageBody_ElementFlags2) GetLongtitude() uint32 {
	if x != nil {
		return x.Longtitude
	}
	return 0
}

func (x *IMMessageBody_ElementFlags2) GetLatitude() uint32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *IMMessageBody_ElementFlags2) GetCustomFont() uint32 {
	if x != nil {
		return x.CustomFont
	}
	return 0
}

func (x *IMMessageBody_ElementFlags2) GetPcSupportDefine() *IMMessageBody_PCSupportDefine {
	if x != nil {
		return x.PcSupportDefine
	}
	return nil
}

func (x *IMMessageBody_ElementFlags2) GetCrmFlags() uint32 {
	if x != nil {
		return x.CrmFlags
	}
	return 0
}

// ExtraInfo
type IMMessageBody_ExtraInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nick             []byte `protobuf:"bytes,1,opt,name=nick,proto3" json:"nick,omitempty"`                                                     // "bytes_nick"
	GroupCard        []byte `protobuf:"bytes,2,opt,name=group_card,json=groupCard,proto3" json:"group_card,omitempty"`                          // "bytes_group_card"
	Level            uint32 `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`                                                  // "uint32_level"
	Flags            uint32 `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`                                                  // "uint32_flags"
	GroupMask        uint32 `protobuf:"varint,5,opt,name=group_mask,json=groupMask,proto3" json:"group_mask,omitempty"`                         // "uint32_group_mask"
	MessageTailId    uint32 `protobuf:"varint,6,opt,name=message_tail_id,json=messageTailId,proto3" json:"message_tail_id,omitempty"`           // "uint32_msg_tail_id"
	SenderTitle      []byte `protobuf:"bytes,7,opt,name=sender_title,json=senderTitle,proto3" json:"sender_title,omitempty"`                    // "bytes_sender_title"
	ApnsTips         []byte `protobuf:"bytes,8,opt,name=apns_tips,json=apnsTips,proto3" json:"apns_tips,omitempty"`                             // "bytes_apns_tips"
	Uin              uint64 `protobuf:"varint,9,opt,name=uin,proto3" json:"uin,omitempty"`                                                      // "uint64_uin"
	MessageStateFlag uint32 `protobuf:"varint,10,opt,name=message_state_flag,json=messageStateFlag,proto3" json:"message_state_flag,omitempty"` // "uint32_msg_state_flag"
	ApnsSoundType    uint32 `protobuf:"varint,11,opt,name=apns_sound_type,json=apnsSoundType,proto3" json:"apns_sound_type,omitempty"`          // "uint32_apns_sound_type"
	NewGroupFlag     uint32 `protobuf:"varint,12,opt,name=new_group_flag,json=newGroupFlag,proto3" json:"new_group_flag,omitempty"`             // "uint32_new_group_flag"
}

func (x *IMMessageBody_ExtraInfo) Reset() {
	*x = IMMessageBody_ExtraInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_ExtraInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_ExtraInfo) ProtoMessage() {}

func (x *IMMessageBody_ExtraInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_ExtraInfo.ProtoReflect.Descriptor instead.
func (*IMMessageBody_ExtraInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 16}
}

func (x *IMMessageBody_ExtraInfo) GetNick() []byte {
	if x != nil {
		return x.Nick
	}
	return nil
}

func (x *IMMessageBody_ExtraInfo) GetGroupCard() []byte {
	if x != nil {
		return x.GroupCard
	}
	return nil
}

func (x *IMMessageBody_ExtraInfo) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *IMMessageBody_ExtraInfo) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *IMMessageBody_ExtraInfo) GetGroupMask() uint32 {
	if x != nil {
		return x.GroupMask
	}
	return 0
}

func (x *IMMessageBody_ExtraInfo) GetMessageTailId() uint32 {
	if x != nil {
		return x.MessageTailId
	}
	return 0
}

func (x *IMMessageBody_ExtraInfo) GetSenderTitle() []byte {
	if x != nil {
		return x.SenderTitle
	}
	return nil
}

func (x *IMMessageBody_ExtraInfo) GetApnsTips() []byte {
	if x != nil {
		return x.ApnsTips
	}
	return nil
}

func (x *IMMessageBody_ExtraInfo) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *IMMessageBody_ExtraInfo) GetMessageStateFlag() uint32 {
	if x != nil {
		return x.MessageStateFlag
	}
	return 0
}

func (x *IMMessageBody_ExtraInfo) GetApnsSoundType() uint32 {
	if x != nil {
		return x.ApnsSoundType
	}
	return 0
}

func (x *IMMessageBody_ExtraInfo) GetNewGroupFlag() uint32 {
	if x != nil {
		return x.NewGroupFlag
	}
	return 0
}

// FSJMessageElem
type IMMessageBody_FSJMessageElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType uint32 `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"` // "uint32_msg_type"
}

func (x *IMMessageBody_FSJMessageElement) Reset() {
	*x = IMMessageBody_FSJMessageElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_FSJMessageElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_FSJMessageElement) ProtoMessage() {}

func (x *IMMessageBody_FSJMessageElement) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_FSJMessageElement.ProtoReflect.Descriptor instead.
func (*IMMessageBody_FSJMessageElement) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 17}
}

func (x *IMMessageBody_FSJMessageElement) GetMessageType() uint32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

// Face
type IMMessageBody_Face struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`   // "index"
	Old    []byte `protobuf:"bytes,2,opt,name=old,proto3" json:"old,omitempty"`        // "old"
	Buffer []byte `protobuf:"bytes,11,opt,name=buffer,proto3" json:"buffer,omitempty"` // "buf"
}

func (x *IMMessageBody_Face) Reset() {
	*x = IMMessageBody_Face{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_Face) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_Face) ProtoMessage() {}

func (x *IMMessageBody_Face) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_Face.ProtoReflect.Descriptor instead.
func (*IMMessageBody_Face) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 18}
}

func (x *IMMessageBody_Face) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *IMMessageBody_Face) GetOld() []byte {
	if x != nil {
		return x.Old
	}
	return nil
}

func (x *IMMessageBody_Face) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

// FunFace
type IMMessageBody_FunFace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageTurntable *IMMessageBody_FunFace_Turntable `protobuf:"bytes,1,opt,name=message_turntable,json=messageTurntable,proto3" json:"message_turntable,omitempty"` // "msg_turntable"
	MessageBomb      *IMMessageBody_FunFace_Bomb      `protobuf:"bytes,2,opt,name=message_bomb,json=messageBomb,proto3" json:"message_bomb,omitempty"`                // "msg_bomb"
}

func (x *IMMessageBody_FunFace) Reset() {
	*x = IMMessageBody_FunFace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_FunFace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_FunFace) ProtoMessage() {}

func (x *IMMessageBody_FunFace) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_FunFace.ProtoReflect.Descriptor instead.
func (*IMMessageBody_FunFace) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 19}
}

func (x *IMMessageBody_FunFace) GetMessageTurntable() *IMMessageBody_FunFace_Turntable {
	if x != nil {
		return x.MessageTurntable
	}
	return nil
}

func (x *IMMessageBody_FunFace) GetMessageBomb() *IMMessageBody_FunFace_Bomb {
	if x != nil {
		return x.MessageBomb
	}
	return nil
}

// GeneralFlags
type IMMessageBody_GeneralFlags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BubbleDiyTextId     uint32 `protobuf:"varint,1,opt,name=bubble_diy_text_id,json=bubbleDiyTextId,proto3" json:"bubble_diy_text_id,omitempty"`             // "uint32_bubble_diy_text_id"
	GroupFlagNew        uint32 `protobuf:"varint,2,opt,name=group_flag_new,json=groupFlagNew,proto3" json:"group_flag_new,omitempty"`                        // "uint32_group_flag_new"
	Uin                 uint64 `protobuf:"varint,3,opt,name=uin,proto3" json:"uin,omitempty"`                                                                // "uint64_uin"
	RpId                []byte `protobuf:"bytes,4,opt,name=rp_id,json=rpId,proto3" json:"rp_id,omitempty"`                                                   // "bytes_rp_id"
	PrpFold             uint32 `protobuf:"varint,5,opt,name=prp_fold,json=prpFold,proto3" json:"prp_fold,omitempty"`                                         // "uint32_prp_fold"
	LongTextFlag        uint32 `protobuf:"varint,6,opt,name=long_text_flag,json=longTextFlag,proto3" json:"long_text_flag,omitempty"`                        // "long_text_flag"
	LongTextResid       []byte `protobuf:"bytes,7,opt,name=long_text_resid,json=longTextResid,proto3" json:"long_text_resid,omitempty"`                      // "long_text_resid"
	GroupType           uint32 `protobuf:"varint,8,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"`                                   // "uint32_group_type"
	ToUinFlag           uint32 `protobuf:"varint,9,opt,name=to_uin_flag,json=toUinFlag,proto3" json:"to_uin_flag,omitempty"`                                 // "uint32_to_uin_flag"
	GlamourLevel        uint32 `protobuf:"varint,10,opt,name=glamour_level,json=glamourLevel,proto3" json:"glamour_level,omitempty"`                         // "uint32_glamour_level"
	MemberLevel         uint32 `protobuf:"varint,11,opt,name=member_level,json=memberLevel,proto3" json:"member_level,omitempty"`                            // "uint32_member_level"
	GroupRankSeq        uint64 `protobuf:"varint,12,opt,name=group_rank_seq,json=groupRankSeq,proto3" json:"group_rank_seq,omitempty"`                       // "uint64_group_rank_seq"
	OlympicTorch        uint32 `protobuf:"varint,13,opt,name=olympic_torch,json=olympicTorch,proto3" json:"olympic_torch,omitempty"`                         // "uint32_olympic_torch"
	BabyqGuideMsgCookie []byte `protobuf:"bytes,14,opt,name=babyq_guide_msg_cookie,json=babyqGuideMsgCookie,proto3" json:"babyq_guide_msg_cookie,omitempty"` // "babyq_guide_msg_cookie"
	Uin32ExpertFlag     uint32 `protobuf:"varint,15,opt,name=uin32_expert_flag,json=uin32ExpertFlag,proto3" json:"uin32_expert_flag,omitempty"`              // "uin32_expert_flag"
	BubbleSubId         uint32 `protobuf:"varint,16,opt,name=bubble_sub_id,json=bubbleSubId,proto3" json:"bubble_sub_id,omitempty"`                          // "uint32_bubble_sub_id"
	PendantId           uint64 `protobuf:"varint,17,opt,name=pendant_id,json=pendantId,proto3" json:"pendant_id,omitempty"`                                  // "uint64_pendant_id"
	RpIndex             []byte `protobuf:"bytes,18,opt,name=rp_index,json=rpIndex,proto3" json:"rp_index,omitempty"`                                         // "bytes_rp_index"
	PbReserve           []byte `protobuf:"bytes,19,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`                                   // "bytes_pb_reserve"
}

func (x *IMMessageBody_GeneralFlags) Reset() {
	*x = IMMessageBody_GeneralFlags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_GeneralFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_GeneralFlags) ProtoMessage() {}

func (x *IMMessageBody_GeneralFlags) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_GeneralFlags.ProtoReflect.Descriptor instead.
func (*IMMessageBody_GeneralFlags) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 20}
}

func (x *IMMessageBody_GeneralFlags) GetBubbleDiyTextId() uint32 {
	if x != nil {
		return x.BubbleDiyTextId
	}
	return 0
}

func (x *IMMessageBody_GeneralFlags) GetGroupFlagNew() uint32 {
	if x != nil {
		return x.GroupFlagNew
	}
	return 0
}

func (x *IMMessageBody_GeneralFlags) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *IMMessageBody_GeneralFlags) GetRpId() []byte {
	if x != nil {
		return x.RpId
	}
	return nil
}

func (x *IMMessageBody_GeneralFlags) GetPrpFold() uint32 {
	if x != nil {
		return x.PrpFold
	}
	return 0
}

func (x *IMMessageBody_GeneralFlags) GetLongTextFlag() uint32 {
	if x != nil {
		return x.LongTextFlag
	}
	return 0
}

func (x *IMMessageBody_GeneralFlags) GetLongTextResid() []byte {
	if x != nil {
		return x.LongTextResid
	}
	return nil
}

func (x *IMMessageBody_GeneralFlags) GetGroupType() uint32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

func (x *IMMessageBody_GeneralFlags) GetToUinFlag() uint32 {
	if x != nil {
		return x.ToUinFlag
	}
	return 0
}

func (x *IMMessageBody_GeneralFlags) GetGlamourLevel() uint32 {
	if x != nil {
		return x.GlamourLevel
	}
	return 0
}

func (x *IMMessageBody_GeneralFlags) GetMemberLevel() uint32 {
	if x != nil {
		return x.MemberLevel
	}
	return 0
}

func (x *IMMessageBody_GeneralFlags) GetGroupRankSeq() uint64 {
	if x != nil {
		return x.GroupRankSeq
	}
	return 0
}

func (x *IMMessageBody_GeneralFlags) GetOlympicTorch() uint32 {
	if x != nil {
		return x.OlympicTorch
	}
	return 0
}

func (x *IMMessageBody_GeneralFlags) GetBabyqGuideMsgCookie() []byte {
	if x != nil {
		return x.BabyqGuideMsgCookie
	}
	return nil
}

func (x *IMMessageBody_GeneralFlags) GetUin32ExpertFlag() uint32 {
	if x != nil {
		return x.Uin32ExpertFlag
	}
	return 0
}

func (x *IMMessageBody_GeneralFlags) GetBubbleSubId() uint32 {
	if x != nil {
		return x.BubbleSubId
	}
	return 0
}

func (x *IMMessageBody_GeneralFlags) GetPendantId() uint64 {
	if x != nil {
		return x.PendantId
	}
	return 0
}

func (x *IMMessageBody_GeneralFlags) GetRpIndex() []byte {
	if x != nil {
		return x.RpIndex
	}
	return nil
}

func (x *IMMessageBody_GeneralFlags) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

// GroupBusinessMsg
type IMMessageBody_GroupBusinessMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags       uint32 `protobuf:"varint,1,opt,name=flags,proto3" json:"flags,omitempty"`                               // "uint32_flags"
	HeadUrl     []byte `protobuf:"bytes,2,opt,name=head_url,json=headUrl,proto3" json:"head_url,omitempty"`             // "bytes_head_url"
	HeadClkUrl  []byte `protobuf:"bytes,3,opt,name=head_clk_url,json=headClkUrl,proto3" json:"head_clk_url,omitempty"`  // "bytes_head_clk_url"
	Nick        []byte `protobuf:"bytes,4,opt,name=nick,proto3" json:"nick,omitempty"`                                  // "bytes_nick"
	NickColor   []byte `protobuf:"bytes,5,opt,name=nick_color,json=nickColor,proto3" json:"nick_color,omitempty"`       // "bytes_nick_color"
	Rank        []byte `protobuf:"bytes,6,opt,name=rank,proto3" json:"rank,omitempty"`                                  // "bytes_rank"
	RankColor   []byte `protobuf:"bytes,7,opt,name=rank_color,json=rankColor,proto3" json:"rank_color,omitempty"`       // "bytes_rank_color"
	RankBgcolor []byte `protobuf:"bytes,8,opt,name=rank_bgcolor,json=rankBgcolor,proto3" json:"rank_bgcolor,omitempty"` // "bytes_rank_bgcolor"
}

func (x *IMMessageBody_GroupBusinessMessage) Reset() {
	*x = IMMessageBody_GroupBusinessMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_GroupBusinessMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_GroupBusinessMessage) ProtoMessage() {}

func (x *IMMessageBody_GroupBusinessMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_GroupBusinessMessage.ProtoReflect.Descriptor instead.
func (*IMMessageBody_GroupBusinessMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 21}
}

func (x *IMMessageBody_GroupBusinessMessage) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *IMMessageBody_GroupBusinessMessage) GetHeadUrl() []byte {
	if x != nil {
		return x.HeadUrl
	}
	return nil
}

func (x *IMMessageBody_GroupBusinessMessage) GetHeadClkUrl() []byte {
	if x != nil {
		return x.HeadClkUrl
	}
	return nil
}

func (x *IMMessageBody_GroupBusinessMessage) GetNick() []byte {
	if x != nil {
		return x.Nick
	}
	return nil
}

func (x *IMMessageBody_GroupBusinessMessage) GetNickColor() []byte {
	if x != nil {
		return x.NickColor
	}
	return nil
}

func (x *IMMessageBody_GroupBusinessMessage) GetRank() []byte {
	if x != nil {
		return x.Rank
	}
	return nil
}

func (x *IMMessageBody_GroupBusinessMessage) GetRankColor() []byte {
	if x != nil {
		return x.RankColor
	}
	return nil
}

func (x *IMMessageBody_GroupBusinessMessage) GetRankBgcolor() []byte {
	if x != nil {
		return x.RankBgcolor
	}
	return nil
}

// GroupFile
type IMMessageBody_GroupFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename    []byte `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                             // "bytes_filename"
	FileSize    uint64 `protobuf:"varint,2,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`            // "uint64_file_size"
	FileId      []byte `protobuf:"bytes,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`                   // "bytes_file_id"
	BatchId     []byte `protobuf:"bytes,4,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`                // "bytes_batch_id"
	FileKey     []byte `protobuf:"bytes,5,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`                // "bytes_file_key"
	Mark        []byte `protobuf:"bytes,6,opt,name=mark,proto3" json:"mark,omitempty"`                                     // "bytes_mark"
	Sequence    uint64 `protobuf:"varint,7,opt,name=sequence,proto3" json:"sequence,omitempty"`                            // "uint64_sequence"
	BatchItemId []byte `protobuf:"bytes,8,opt,name=batch_item_id,json=batchItemId,proto3" json:"batch_item_id,omitempty"`  // "bytes_batch_item_id"
	FeedMsgTime uint32 `protobuf:"varint,9,opt,name=feed_msg_time,json=feedMsgTime,proto3" json:"feed_msg_time,omitempty"` // "uint32_feed_msg_time"
	PbReserve   []byte `protobuf:"bytes,10,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`         // "bytes_pb_reserve"
}

func (x *IMMessageBody_GroupFile) Reset() {
	*x = IMMessageBody_GroupFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_GroupFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_GroupFile) ProtoMessage() {}

func (x *IMMessageBody_GroupFile) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_GroupFile.ProtoReflect.Descriptor instead.
func (*IMMessageBody_GroupFile) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 22}
}

func (x *IMMessageBody_GroupFile) GetFilename() []byte {
	if x != nil {
		return x.Filename
	}
	return nil
}

func (x *IMMessageBody_GroupFile) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *IMMessageBody_GroupFile) GetFileId() []byte {
	if x != nil {
		return x.FileId
	}
	return nil
}

func (x *IMMessageBody_GroupFile) GetBatchId() []byte {
	if x != nil {
		return x.BatchId
	}
	return nil
}

func (x *IMMessageBody_GroupFile) GetFileKey() []byte {
	if x != nil {
		return x.FileKey
	}
	return nil
}

func (x *IMMessageBody_GroupFile) GetMark() []byte {
	if x != nil {
		return x.Mark
	}
	return nil
}

func (x *IMMessageBody_GroupFile) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *IMMessageBody_GroupFile) GetBatchItemId() []byte {
	if x != nil {
		return x.BatchItemId
	}
	return nil
}

func (x *IMMessageBody_GroupFile) GetFeedMsgTime() uint32 {
	if x != nil {
		return x.FeedMsgTime
	}
	return 0
}

func (x *IMMessageBody_GroupFile) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

// GroupPostElem
type IMMessageBody_GroupPostElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransportType    uint32 `protobuf:"varint,1,opt,name=transport_type,json=transportType,proto3" json:"transport_type,omitempty"`         // "uint32_trans_type"
	TransportMessage []byte `protobuf:"bytes,2,opt,name=transport_message,json=transportMessage,proto3" json:"transport_message,omitempty"` // "bytes_trans_msg"
}

func (x *IMMessageBody_GroupPostElement) Reset() {
	*x = IMMessageBody_GroupPostElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_GroupPostElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_GroupPostElement) ProtoMessage() {}

func (x *IMMessageBody_GroupPostElement) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_GroupPostElement.ProtoReflect.Descriptor instead.
func (*IMMessageBody_GroupPostElement) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 23}
}

func (x *IMMessageBody_GroupPostElement) GetTransportType() uint32 {
	if x != nil {
		return x.TransportType
	}
	return 0
}

func (x *IMMessageBody_GroupPostElement) GetTransportMessage() []byte {
	if x != nil {
		return x.TransportMessage
	}
	return nil
}

// GroupPubAccountInfo
type IMMessageBody_GroupPublicAccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicAccount uint64 `protobuf:"varint,1,opt,name=public_account,json=publicAccount,proto3" json:"public_account,omitempty"` // "uint64_pub_account"
}

func (x *IMMessageBody_GroupPublicAccountInfo) Reset() {
	*x = IMMessageBody_GroupPublicAccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_GroupPublicAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_GroupPublicAccountInfo) ProtoMessage() {}

func (x *IMMessageBody_GroupPublicAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_GroupPublicAccountInfo.ProtoReflect.Descriptor instead.
func (*IMMessageBody_GroupPublicAccountInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 24}
}

func (x *IMMessageBody_GroupPublicAccountInfo) GetPublicAccount() uint64 {
	if x != nil {
		return x.PublicAccount
	}
	return 0
}

// LifeOnlineAccount
type IMMessageBody_LifeOnlineAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueId   uint64 `protobuf:"varint,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`        // "uint64_unique_id"
	Op         uint32 `protobuf:"varint,2,opt,name=op,proto3" json:"op,omitempty"`                                    // "uint32_op"
	ShowTime   uint32 `protobuf:"varint,3,opt,name=show_time,json=showTime,proto3" json:"show_time,omitempty"`        // "uint32_show_time"
	Report     uint32 `protobuf:"varint,4,opt,name=report,proto3" json:"report,omitempty"`                            // "uint32_report"
	Ack        uint32 `protobuf:"varint,5,opt,name=ack,proto3" json:"ack,omitempty"`                                  // "uint32_ack"
	Bitmap     uint64 `protobuf:"varint,6,opt,name=bitmap,proto3" json:"bitmap,omitempty"`                            // "uint64_bitmap"
	GdtImpData []byte `protobuf:"bytes,7,opt,name=gdt_imp_data,json=gdtImpData,proto3" json:"gdt_imp_data,omitempty"` // "gdt_imp_data"
	GdtCliData []byte `protobuf:"bytes,8,opt,name=gdt_cli_data,json=gdtCliData,proto3" json:"gdt_cli_data,omitempty"` // "gdt_cli_data"
	ViewId     []byte `protobuf:"bytes,9,opt,name=view_id,json=viewId,proto3" json:"view_id,omitempty"`               // "view_id"
}

func (x *IMMessageBody_LifeOnlineAccount) Reset() {
	*x = IMMessageBody_LifeOnlineAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_LifeOnlineAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_LifeOnlineAccount) ProtoMessage() {}

func (x *IMMessageBody_LifeOnlineAccount) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_LifeOnlineAccount.ProtoReflect.Descriptor instead.
func (*IMMessageBody_LifeOnlineAccount) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 25}
}

func (x *IMMessageBody_LifeOnlineAccount) GetUniqueId() uint64 {
	if x != nil {
		return x.UniqueId
	}
	return 0
}

func (x *IMMessageBody_LifeOnlineAccount) GetOp() uint32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *IMMessageBody_LifeOnlineAccount) GetShowTime() uint32 {
	if x != nil {
		return x.ShowTime
	}
	return 0
}

func (x *IMMessageBody_LifeOnlineAccount) GetReport() uint32 {
	if x != nil {
		return x.Report
	}
	return 0
}

func (x *IMMessageBody_LifeOnlineAccount) GetAck() uint32 {
	if x != nil {
		return x.Ack
	}
	return 0
}

func (x *IMMessageBody_LifeOnlineAccount) GetBitmap() uint64 {
	if x != nil {
		return x.Bitmap
	}
	return 0
}

func (x *IMMessageBody_LifeOnlineAccount) GetGdtImpData() []byte {
	if x != nil {
		return x.GdtImpData
	}
	return nil
}

func (x *IMMessageBody_LifeOnlineAccount) GetGdtCliData() []byte {
	if x != nil {
		return x.GdtCliData
	}
	return nil
}

func (x *IMMessageBody_LifeOnlineAccount) GetViewId() []byte {
	if x != nil {
		return x.ViewId
	}
	return nil
}

// LightAppElem
type IMMessageBody_LightAppElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`                               // "bytes_data"
	ResourceId []byte `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"` // "bytes_msg_resid"
}

func (x *IMMessageBody_LightAppElement) Reset() {
	*x = IMMessageBody_LightAppElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_LightAppElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_LightAppElement) ProtoMessage() {}

func (x *IMMessageBody_LightAppElement) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_LightAppElement.ProtoReflect.Descriptor instead.
func (*IMMessageBody_LightAppElement) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 26}
}

func (x *IMMessageBody_LightAppElement) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *IMMessageBody_LightAppElement) GetResourceId() []byte {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

// LolaMsg
type IMMessageBody_LolaMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageResid  []byte `protobuf:"bytes,1,opt,name=message_resid,json=messageResid,proto3" json:"message_resid,omitempty"`    // "bytes_msg_resid"
	EncodeContent []byte `protobuf:"bytes,2,opt,name=encode_content,json=encodeContent,proto3" json:"encode_content,omitempty"` // "bytes_encode_content"
	LongMsgUrl    []byte `protobuf:"bytes,3,opt,name=long_msg_url,json=longMsgUrl,proto3" json:"long_msg_url,omitempty"`        // "bytes_long_msg_url"
	DownloadKey   []byte `protobuf:"bytes,4,opt,name=download_key,json=downloadKey,proto3" json:"download_key,omitempty"`       // "bytes_download_key"
}

func (x *IMMessageBody_LolaMessage) Reset() {
	*x = IMMessageBody_LolaMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_LolaMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_LolaMessage) ProtoMessage() {}

func (x *IMMessageBody_LolaMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_LolaMessage.ProtoReflect.Descriptor instead.
func (*IMMessageBody_LolaMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 27}
}

func (x *IMMessageBody_LolaMessage) GetMessageResid() []byte {
	if x != nil {
		return x.MessageResid
	}
	return nil
}

func (x *IMMessageBody_LolaMessage) GetEncodeContent() []byte {
	if x != nil {
		return x.EncodeContent
	}
	return nil
}

func (x *IMMessageBody_LolaMessage) GetLongMsgUrl() []byte {
	if x != nil {
		return x.LongMsgUrl
	}
	return nil
}

func (x *IMMessageBody_LolaMessage) GetDownloadKey() []byte {
	if x != nil {
		return x.DownloadKey
	}
	return nil
}

// LowVersionTips
type IMMessageBody_LowVersionTips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId  uint32 `protobuf:"varint,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`    // "uint32_business_id"
	SessionType uint32 `protobuf:"varint,2,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"` // "uint32_session_type"
	SessionUin  uint64 `protobuf:"varint,3,opt,name=session_uin,json=sessionUin,proto3" json:"session_uin,omitempty"`    // "uint64_session_uin"
	SenderUin   uint64 `protobuf:"varint,4,opt,name=sender_uin,json=senderUin,proto3" json:"sender_uin,omitempty"`       // "uint64_sender_uin"
	Text        string `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`                                   // "str_text"
}

func (x *IMMessageBody_LowVersionTips) Reset() {
	*x = IMMessageBody_LowVersionTips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_LowVersionTips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_LowVersionTips) ProtoMessage() {}

func (x *IMMessageBody_LowVersionTips) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_LowVersionTips.ProtoReflect.Descriptor instead.
func (*IMMessageBody_LowVersionTips) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 28}
}

func (x *IMMessageBody_LowVersionTips) GetBusinessId() uint32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *IMMessageBody_LowVersionTips) GetSessionType() uint32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *IMMessageBody_LowVersionTips) GetSessionUin() uint64 {
	if x != nil {
		return x.SessionUin
	}
	return 0
}

func (x *IMMessageBody_LowVersionTips) GetSenderUin() uint64 {
	if x != nil {
		return x.SenderUin
	}
	return 0
}

func (x *IMMessageBody_LowVersionTips) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// MarketFace
type IMMessageBody_MarketFace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaceName    []byte `protobuf:"bytes,1,opt,name=face_name,json=faceName,proto3" json:"face_name,omitempty"`            // "bytes_face_name"
	ItemType    uint32 `protobuf:"varint,2,opt,name=item_type,json=itemType,proto3" json:"item_type,omitempty"`           // "uint32_item_type"
	FaceInfo    uint32 `protobuf:"varint,3,opt,name=face_info,json=faceInfo,proto3" json:"face_info,omitempty"`           // "uint32_face_info"
	FaceId      []byte `protobuf:"bytes,4,opt,name=face_id,json=faceId,proto3" json:"face_id,omitempty"`                  // "bytes_face_id"
	TabId       uint32 `protobuf:"varint,5,opt,name=tab_id,json=tabId,proto3" json:"tab_id,omitempty"`                    // "uint32_tab_id"
	SubType     uint32 `protobuf:"varint,6,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`              // "uint32_sub_type"
	Key         []byte `protobuf:"bytes,7,opt,name=key,proto3" json:"key,omitempty"`                                      // "bytes_key"
	Param       []byte `protobuf:"bytes,8,opt,name=param,proto3" json:"param,omitempty"`                                  // "bytes_param"
	MediaType   uint32 `protobuf:"varint,9,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`        // "uint32_media_type"
	ImageWidth  uint32 `protobuf:"varint,10,opt,name=image_width,json=imageWidth,proto3" json:"image_width,omitempty"`    // "uint32_image_width"
	ImageHeight uint32 `protobuf:"varint,11,opt,name=image_height,json=imageHeight,proto3" json:"image_height,omitempty"` // "uint32_image_height"
	MobileParam []byte `protobuf:"bytes,12,opt,name=mobile_param,json=mobileParam,proto3" json:"mobile_param,omitempty"`  // "bytes_mobileparam"
	PbReserve   []byte `protobuf:"bytes,13,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`        // "bytes_pb_reserve"
}

func (x *IMMessageBody_MarketFace) Reset() {
	*x = IMMessageBody_MarketFace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_MarketFace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_MarketFace) ProtoMessage() {}

func (x *IMMessageBody_MarketFace) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_MarketFace.ProtoReflect.Descriptor instead.
func (*IMMessageBody_MarketFace) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 29}
}

func (x *IMMessageBody_MarketFace) GetFaceName() []byte {
	if x != nil {
		return x.FaceName
	}
	return nil
}

func (x *IMMessageBody_MarketFace) GetItemType() uint32 {
	if x != nil {
		return x.ItemType
	}
	return 0
}

func (x *IMMessageBody_MarketFace) GetFaceInfo() uint32 {
	if x != nil {
		return x.FaceInfo
	}
	return 0
}

func (x *IMMessageBody_MarketFace) GetFaceId() []byte {
	if x != nil {
		return x.FaceId
	}
	return nil
}

func (x *IMMessageBody_MarketFace) GetTabId() uint32 {
	if x != nil {
		return x.TabId
	}
	return 0
}

func (x *IMMessageBody_MarketFace) GetSubType() uint32 {
	if x != nil {
		return x.SubType
	}
	return 0
}

func (x *IMMessageBody_MarketFace) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *IMMessageBody_MarketFace) GetParam() []byte {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *IMMessageBody_MarketFace) GetMediaType() uint32 {
	if x != nil {
		return x.MediaType
	}
	return 0
}

func (x *IMMessageBody_MarketFace) GetImageWidth() uint32 {
	if x != nil {
		return x.ImageWidth
	}
	return 0
}

func (x *IMMessageBody_MarketFace) GetImageHeight() uint32 {
	if x != nil {
		return x.ImageHeight
	}
	return 0
}

func (x *IMMessageBody_MarketFace) GetMobileParam() []byte {
	if x != nil {
		return x.MobileParam
	}
	return nil
}

func (x *IMMessageBody_MarketFace) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

// MarketTrans
type IMMessageBody_MarketTransport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag         int32  `protobuf:"varint,1,opt,name=flag,proto3" json:"flag,omitempty"`                                    // "int32_flag"
	Xml          []byte `protobuf:"bytes,2,opt,name=xml,proto3" json:"xml,omitempty"`                                       // "bytes_xml"
	MessageResid []byte `protobuf:"bytes,3,opt,name=message_resid,json=messageResid,proto3" json:"message_resid,omitempty"` // "bytes_msg_resid"
	Ability      uint32 `protobuf:"varint,4,opt,name=ability,proto3" json:"ability,omitempty"`                              // "uint32_ability"
	MinAbility   uint32 `protobuf:"varint,5,opt,name=min_ability,json=minAbility,proto3" json:"min_ability,omitempty"`      // "uint32_min_ability"
}

func (x *IMMessageBody_MarketTransport) Reset() {
	*x = IMMessageBody_MarketTransport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_MarketTransport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_MarketTransport) ProtoMessage() {}

func (x *IMMessageBody_MarketTransport) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_MarketTransport.ProtoReflect.Descriptor instead.
func (*IMMessageBody_MarketTransport) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 30}
}

func (x *IMMessageBody_MarketTransport) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *IMMessageBody_MarketTransport) GetXml() []byte {
	if x != nil {
		return x.Xml
	}
	return nil
}

func (x *IMMessageBody_MarketTransport) GetMessageResid() []byte {
	if x != nil {
		return x.MessageResid
	}
	return nil
}

func (x *IMMessageBody_MarketTransport) GetAbility() uint32 {
	if x != nil {
		return x.Ability
	}
	return 0
}

func (x *IMMessageBody_MarketTransport) GetMinAbility() uint32 {
	if x != nil {
		return x.MinAbility
	}
	return 0
}

// MsgBody
type IMMessageBody_MessageBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RichText       *IMMessageBody_RichText `protobuf:"bytes,1,opt,name=rich_text,json=richText,proto3" json:"rich_text,omitempty"`                   // "rich_text"
	Content        []byte                  `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`                                     // "msg_content"
	EncryptContent []byte                  `protobuf:"bytes,3,opt,name=encrypt_content,json=encryptContent,proto3" json:"encrypt_content,omitempty"` // "msg_encrypt_content"
}

func (x *IMMessageBody_MessageBody) Reset() {
	*x = IMMessageBody_MessageBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_MessageBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_MessageBody) ProtoMessage() {}

func (x *IMMessageBody_MessageBody) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_MessageBody.ProtoReflect.Descriptor instead.
func (*IMMessageBody_MessageBody) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 31}
}

func (x *IMMessageBody_MessageBody) GetRichText() *IMMessageBody_RichText {
	if x != nil {
		return x.RichText
	}
	return nil
}

func (x *IMMessageBody_MessageBody) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *IMMessageBody_MessageBody) GetEncryptContent() []byte {
	if x != nil {
		return x.EncryptContent
	}
	return nil
}

// MsgBody_subtype4
type IMMessageBody_MessageBodySubType4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotOnlineFile *IMMessageBody_NotOnlineFile `protobuf:"bytes,1,opt,name=not_online_file,json=notOnlineFile,proto3" json:"not_online_file,omitempty"` // "msg_not_online_file"
	Time          uint32                       `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`                                         // "uint32_msg_time"
}

func (x *IMMessageBody_MessageBodySubType4) Reset() {
	*x = IMMessageBody_MessageBodySubType4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_MessageBodySubType4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_MessageBodySubType4) ProtoMessage() {}

func (x *IMMessageBody_MessageBodySubType4) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_MessageBodySubType4.ProtoReflect.Descriptor instead.
func (*IMMessageBody_MessageBodySubType4) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 32}
}

func (x *IMMessageBody_MessageBodySubType4) GetNotOnlineFile() *IMMessageBody_NotOnlineFile {
	if x != nil {
		return x.NotOnlineFile
	}
	return nil
}

func (x *IMMessageBody_MessageBodySubType4) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

// NearByMessageType
type IMMessageBody_NearByMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                                     // "uint32_type"
	IdentifyType uint32 `protobuf:"varint,2,opt,name=identify_type,json=identifyType,proto3" json:"identify_type,omitempty"` // "uint32_identify_type"
}

func (x *IMMessageBody_NearByMessageType) Reset() {
	*x = IMMessageBody_NearByMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_NearByMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_NearByMessageType) ProtoMessage() {}

func (x *IMMessageBody_NearByMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_NearByMessageType.ProtoReflect.Descriptor instead.
func (*IMMessageBody_NearByMessageType) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 33}
}

func (x *IMMessageBody_NearByMessageType) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *IMMessageBody_NearByMessageType) GetIdentifyType() uint32 {
	if x != nil {
		return x.IdentifyType
	}
	return 0
}

// NotOnlineFile
type IMMessageBody_NotOnlineFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileType       uint32   `protobuf:"varint,1,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`                   // "uint32_file_type"
	Sig            []byte   `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`                                              // "bytes_sig"
	FileUuid       []byte   `protobuf:"bytes,3,opt,name=file_uuid,json=fileUuid,proto3" json:"file_uuid,omitempty"`                    // "bytes_file_uuid"
	FileMd5        []byte   `protobuf:"bytes,4,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                       // "bytes_file_md5"
	FileName       string   `protobuf:"bytes,5,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`                    // "bytes_file_name"
	FileSize       uint64   `protobuf:"varint,6,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`                   // "uint64_file_size"
	Note           []byte   `protobuf:"bytes,7,opt,name=note,proto3" json:"note,omitempty"`                                            // "bytes_note"
	Reserved       uint32   `protobuf:"varint,8,opt,name=reserved,proto3" json:"reserved,omitempty"`                                   // "uint32_reserved"
	Subcmd         uint32   `protobuf:"varint,9,opt,name=subcmd,proto3" json:"subcmd,omitempty"`                                       // "uint32_subcmd"
	MicroCloud     uint32   `protobuf:"varint,10,opt,name=micro_cloud,json=microCloud,proto3" json:"micro_cloud,omitempty"`            // "uint32_micro_cloud"
	FileUrls       []string `protobuf:"bytes,11,rep,name=file_urls,json=fileUrls,proto3" json:"file_urls,omitempty"`                   // "rpt_bytes_file_urls"
	DownloadFlag   uint32   `protobuf:"varint,12,opt,name=download_flag,json=downloadFlag,proto3" json:"download_flag,omitempty"`      // "uint32_download_flag"
	DangerEvel     uint32   `protobuf:"varint,50,opt,name=danger_evel,json=dangerEvel,proto3" json:"danger_evel,omitempty"`            // "uint32_danger_evel"
	LifeTime       uint32   `protobuf:"varint,51,opt,name=life_time,json=lifeTime,proto3" json:"life_time,omitempty"`                  // "uint32_life_time"
	UploadTime     uint32   `protobuf:"varint,52,opt,name=upload_time,json=uploadTime,proto3" json:"upload_time,omitempty"`            // "uint32_upload_time"
	AbsFileType    uint32   `protobuf:"varint,53,opt,name=abs_file_type,json=absFileType,proto3" json:"abs_file_type,omitempty"`       // "uint32_abs_file_type"
	ClientType     uint32   `protobuf:"varint,54,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`            // "uint32_client_type"
	ExpireTime     uint32   `protobuf:"varint,55,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`            // "uint32_expire_time"
	PbReserve      []byte   `protobuf:"bytes,56,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`                // "bytes_pb_reserve"
	FileidcrcMedia string   `protobuf:"bytes,57,opt,name=fileidcrc_media,json=fileidcrcMedia,proto3" json:"fileidcrc_media,omitempty"` // "str_fileidcrc_media"
}

func (x *IMMessageBody_NotOnlineFile) Reset() {
	*x = IMMessageBody_NotOnlineFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_NotOnlineFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_NotOnlineFile) ProtoMessage() {}

func (x *IMMessageBody_NotOnlineFile) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_NotOnlineFile.ProtoReflect.Descriptor instead.
func (*IMMessageBody_NotOnlineFile) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 34}
}

func (x *IMMessageBody_NotOnlineFile) GetFileType() uint32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *IMMessageBody_NotOnlineFile) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *IMMessageBody_NotOnlineFile) GetFileUuid() []byte {
	if x != nil {
		return x.FileUuid
	}
	return nil
}

func (x *IMMessageBody_NotOnlineFile) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *IMMessageBody_NotOnlineFile) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *IMMessageBody_NotOnlineFile) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *IMMessageBody_NotOnlineFile) GetNote() []byte {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *IMMessageBody_NotOnlineFile) GetReserved() uint32 {
	if x != nil {
		return x.Reserved
	}
	return 0
}

func (x *IMMessageBody_NotOnlineFile) GetSubcmd() uint32 {
	if x != nil {
		return x.Subcmd
	}
	return 0
}

func (x *IMMessageBody_NotOnlineFile) GetMicroCloud() uint32 {
	if x != nil {
		return x.MicroCloud
	}
	return 0
}

func (x *IMMessageBody_NotOnlineFile) GetFileUrls() []string {
	if x != nil {
		return x.FileUrls
	}
	return nil
}

func (x *IMMessageBody_NotOnlineFile) GetDownloadFlag() uint32 {
	if x != nil {
		return x.DownloadFlag
	}
	return 0
}

func (x *IMMessageBody_NotOnlineFile) GetDangerEvel() uint32 {
	if x != nil {
		return x.DangerEvel
	}
	return 0
}

func (x *IMMessageBody_NotOnlineFile) GetLifeTime() uint32 {
	if x != nil {
		return x.LifeTime
	}
	return 0
}

func (x *IMMessageBody_NotOnlineFile) GetUploadTime() uint32 {
	if x != nil {
		return x.UploadTime
	}
	return 0
}

func (x *IMMessageBody_NotOnlineFile) GetAbsFileType() uint32 {
	if x != nil {
		return x.AbsFileType
	}
	return 0
}

func (x *IMMessageBody_NotOnlineFile) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *IMMessageBody_NotOnlineFile) GetExpireTime() uint32 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *IMMessageBody_NotOnlineFile) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

func (x *IMMessageBody_NotOnlineFile) GetFileidcrcMedia() string {
	if x != nil {
		return x.FileidcrcMedia
	}
	return ""
}

// NotOnlineImage
type IMMessageBody_NotOnlineImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath       string `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`                       // "file_path"
	FileSize       uint32 `protobuf:"varint,2,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`                      // "file_len"
	DownloadPath   string `protobuf:"bytes,3,opt,name=download_path,json=downloadPath,proto3" json:"download_path,omitempty"`           // "download_path"
	OldVerSendFile []byte `protobuf:"bytes,4,opt,name=old_ver_send_file,json=oldVerSendFile,proto3" json:"old_ver_send_file,omitempty"` // "old_ver_send_file"
	ImgType        uint32 `protobuf:"varint,5,opt,name=img_type,json=imgType,proto3" json:"img_type,omitempty"`                         // "img_type"
	PreviewsImage  []byte `protobuf:"bytes,6,opt,name=previews_image,json=previewsImage,proto3" json:"previews_image,omitempty"`        // "previews_image"
	FileMd5        []byte `protobuf:"bytes,7,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                          // "pic_md5"
	Height         uint32 `protobuf:"varint,8,opt,name=height,proto3" json:"height,omitempty"`                                          // "pic_height"
	Width          uint32 `protobuf:"varint,9,opt,name=width,proto3" json:"width,omitempty"`                                            // "pic_width"
	ResourceId     string `protobuf:"bytes,10,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`                // "res_id"
	Flag           []byte `protobuf:"bytes,11,opt,name=flag,proto3" json:"flag,omitempty"`                                              // "flag"
	ThumbUrl       string `protobuf:"bytes,12,opt,name=thumb_url,json=thumbUrl,proto3" json:"thumb_url,omitempty"`                      // "str_thumb_url"
	Original       uint32 `protobuf:"varint,13,opt,name=original,proto3" json:"original,omitempty"`                                     // "original"
	BigUrl         string `protobuf:"bytes,14,opt,name=big_url,json=bigUrl,proto3" json:"big_url,omitempty"`                            // "str_big_url"
	OrigUrl        string `protobuf:"bytes,15,opt,name=orig_url,json=origUrl,proto3" json:"orig_url,omitempty"`                         // "str_orig_url"
	BizType        uint32 `protobuf:"varint,16,opt,name=biz_type,json=bizType,proto3" json:"biz_type,omitempty"`                        // "biz_type"
	Result         uint32 `protobuf:"varint,17,opt,name=result,proto3" json:"result,omitempty"`                                         // "result"
	Index          uint32 `protobuf:"varint,18,opt,name=index,proto3" json:"index,omitempty"`                                           // "index"
	OpFaceBuffer   []byte `protobuf:"bytes,19,opt,name=op_face_buffer,json=opFaceBuffer,proto3" json:"op_face_buffer,omitempty"`        // "op_face_buf"
	OldFileMd5     bool   `protobuf:"varint,20,opt,name=old_file_md5,json=oldFileMd5,proto3" json:"old_file_md5,omitempty"`             // "old_pic_md5"
	ThumbWidth     uint32 `protobuf:"varint,21,opt,name=thumb_width,json=thumbWidth,proto3" json:"thumb_width,omitempty"`               // "uint32_thumb_width"
	ThumbHeight    uint32 `protobuf:"varint,22,opt,name=thumb_height,json=thumbHeight,proto3" json:"thumb_height,omitempty"`            // "uint32_thumb_height"
	FileId         uint32 `protobuf:"varint,23,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`                           // "uint32_file_id"
	ShowLen        uint32 `protobuf:"varint,24,opt,name=show_len,json=showLen,proto3" json:"show_len,omitempty"`                        // "uint32_show_len"
	DownloadLen    uint32 `protobuf:"varint,25,opt,name=download_len,json=downloadLen,proto3" json:"download_len,omitempty"`            // "uint32_download_len"
	Url_400        string `protobuf:"bytes,26,opt,name=url_400,json=url400,proto3" json:"url_400,omitempty"`                            // "str_400_url"
	Width_400      uint32 `protobuf:"varint,27,opt,name=width_400,json=width400,proto3" json:"width_400,omitempty"`                     // "uint32_400_width"
	Height_400     uint32 `protobuf:"varint,28,opt,name=height_400,json=height400,proto3" json:"height_400,omitempty"`                  // "uint32_400_height"
	PbReserve      []byte `protobuf:"bytes,29,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`                   // "bytes_pb_reserve"
}

func (x *IMMessageBody_NotOnlineImage) Reset() {
	*x = IMMessageBody_NotOnlineImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_NotOnlineImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_NotOnlineImage) ProtoMessage() {}

func (x *IMMessageBody_NotOnlineImage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_NotOnlineImage.ProtoReflect.Descriptor instead.
func (*IMMessageBody_NotOnlineImage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 35}
}

func (x *IMMessageBody_NotOnlineImage) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *IMMessageBody_NotOnlineImage) GetFileSize() uint32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *IMMessageBody_NotOnlineImage) GetDownloadPath() string {
	if x != nil {
		return x.DownloadPath
	}
	return ""
}

func (x *IMMessageBody_NotOnlineImage) GetOldVerSendFile() []byte {
	if x != nil {
		return x.OldVerSendFile
	}
	return nil
}

func (x *IMMessageBody_NotOnlineImage) GetImgType() uint32 {
	if x != nil {
		return x.ImgType
	}
	return 0
}

func (x *IMMessageBody_NotOnlineImage) GetPreviewsImage() []byte {
	if x != nil {
		return x.PreviewsImage
	}
	return nil
}

func (x *IMMessageBody_NotOnlineImage) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *IMMessageBody_NotOnlineImage) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *IMMessageBody_NotOnlineImage) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *IMMessageBody_NotOnlineImage) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *IMMessageBody_NotOnlineImage) GetFlag() []byte {
	if x != nil {
		return x.Flag
	}
	return nil
}

func (x *IMMessageBody_NotOnlineImage) GetThumbUrl() string {
	if x != nil {
		return x.ThumbUrl
	}
	return ""
}

func (x *IMMessageBody_NotOnlineImage) GetOriginal() uint32 {
	if x != nil {
		return x.Original
	}
	return 0
}

func (x *IMMessageBody_NotOnlineImage) GetBigUrl() string {
	if x != nil {
		return x.BigUrl
	}
	return ""
}

func (x *IMMessageBody_NotOnlineImage) GetOrigUrl() string {
	if x != nil {
		return x.OrigUrl
	}
	return ""
}

func (x *IMMessageBody_NotOnlineImage) GetBizType() uint32 {
	if x != nil {
		return x.BizType
	}
	return 0
}

func (x *IMMessageBody_NotOnlineImage) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *IMMessageBody_NotOnlineImage) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *IMMessageBody_NotOnlineImage) GetOpFaceBuffer() []byte {
	if x != nil {
		return x.OpFaceBuffer
	}
	return nil
}

func (x *IMMessageBody_NotOnlineImage) GetOldFileMd5() bool {
	if x != nil {
		return x.OldFileMd5
	}
	return false
}

func (x *IMMessageBody_NotOnlineImage) GetThumbWidth() uint32 {
	if x != nil {
		return x.ThumbWidth
	}
	return 0
}

func (x *IMMessageBody_NotOnlineImage) GetThumbHeight() uint32 {
	if x != nil {
		return x.ThumbHeight
	}
	return 0
}

func (x *IMMessageBody_NotOnlineImage) GetFileId() uint32 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *IMMessageBody_NotOnlineImage) GetShowLen() uint32 {
	if x != nil {
		return x.ShowLen
	}
	return 0
}

func (x *IMMessageBody_NotOnlineImage) GetDownloadLen() uint32 {
	if x != nil {
		return x.DownloadLen
	}
	return 0
}

func (x *IMMessageBody_NotOnlineImage) GetUrl_400() string {
	if x != nil {
		return x.Url_400
	}
	return ""
}

func (x *IMMessageBody_NotOnlineImage) GetWidth_400() uint32 {
	if x != nil {
		return x.Width_400
	}
	return 0
}

func (x *IMMessageBody_NotOnlineImage) GetHeight_400() uint32 {
	if x != nil {
		return x.Height_400
	}
	return 0
}

func (x *IMMessageBody_NotOnlineImage) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

// OnlineImage
type IMMessageBody_OnlineImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid           []byte `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`                                               // "guid"
	FilePath       []byte `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`                       // "file_path"
	OldVerSendFile []byte `protobuf:"bytes,3,opt,name=old_ver_send_file,json=oldVerSendFile,proto3" json:"old_ver_send_file,omitempty"` // "old_ver_send_file"
}

func (x *IMMessageBody_OnlineImage) Reset() {
	*x = IMMessageBody_OnlineImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_OnlineImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_OnlineImage) ProtoMessage() {}

func (x *IMMessageBody_OnlineImage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_OnlineImage.ProtoReflect.Descriptor instead.
func (*IMMessageBody_OnlineImage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 36}
}

func (x *IMMessageBody_OnlineImage) GetGuid() []byte {
	if x != nil {
		return x.Guid
	}
	return nil
}

func (x *IMMessageBody_OnlineImage) GetFilePath() []byte {
	if x != nil {
		return x.FilePath
	}
	return nil
}

func (x *IMMessageBody_OnlineImage) GetOldVerSendFile() []byte {
	if x != nil {
		return x.OldVerSendFile
	}
	return nil
}

// OpenQQData
type IMMessageBody_OpenQQData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarQqData []byte `protobuf:"bytes,1,opt,name=car_qq_data,json=carQqData,proto3" json:"car_qq_data,omitempty"` // "bytes_car_qq_data"
}

func (x *IMMessageBody_OpenQQData) Reset() {
	*x = IMMessageBody_OpenQQData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_OpenQQData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_OpenQQData) ProtoMessage() {}

func (x *IMMessageBody_OpenQQData) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_OpenQQData.ProtoReflect.Descriptor instead.
func (*IMMessageBody_OpenQQData) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 37}
}

func (x *IMMessageBody_OpenQQData) GetCarQqData() []byte {
	if x != nil {
		return x.CarQqData
	}
	return nil
}

// PatsElem
type IMMessageBody_PatsElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatType  uint32 `protobuf:"varint,1,opt,name=pat_type,json=patType,proto3" json:"pat_type,omitempty"`    // "uint32_pat_type"
	PatCount uint32 `protobuf:"varint,2,opt,name=pat_count,json=patCount,proto3" json:"pat_count,omitempty"` // "uint32_pat_count"
}

func (x *IMMessageBody_PatsElement) Reset() {
	*x = IMMessageBody_PatsElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_PatsElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_PatsElement) ProtoMessage() {}

func (x *IMMessageBody_PatsElement) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_PatsElement.ProtoReflect.Descriptor instead.
func (*IMMessageBody_PatsElement) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 38}
}

func (x *IMMessageBody_PatsElement) GetPatType() uint32 {
	if x != nil {
		return x.PatType
	}
	return 0
}

func (x *IMMessageBody_PatsElement) GetPatCount() uint32 {
	if x != nil {
		return x.PatCount
	}
	return 0
}

// PcSupportDef
type IMMessageBody_PCSupportDefine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PcPtlBegin     uint32   `protobuf:"varint,1,opt,name=pc_ptl_begin,json=pcPtlBegin,proto3" json:"pc_ptl_begin,omitempty"`                    // "uint32_pc_ptl_begin"
	PcPtlEnd       uint32   `protobuf:"varint,2,opt,name=pc_ptl_end,json=pcPtlEnd,proto3" json:"pc_ptl_end,omitempty"`                          // "uint32_pc_ptl_end"
	MacPtlBegin    uint32   `protobuf:"varint,3,opt,name=mac_ptl_begin,json=macPtlBegin,proto3" json:"mac_ptl_begin,omitempty"`                 // "uint32_mac_ptl_begin"
	MacPtlEnd      uint32   `protobuf:"varint,4,opt,name=mac_ptl_end,json=macPtlEnd,proto3" json:"mac_ptl_end,omitempty"`                       // "uint32_mac_ptl_end"
	PtlsSupport    []uint32 `protobuf:"varint,5,rep,packed,name=ptls_support,json=ptlsSupport,proto3" json:"ptls_support,omitempty"`            // "rpt_ptls_support"
	PtlsNotSupport []uint32 `protobuf:"varint,6,rep,packed,name=ptls_not_support,json=ptlsNotSupport,proto3" json:"ptls_not_support,omitempty"` // "rpt_ptls_not_support"
}

func (x *IMMessageBody_PCSupportDefine) Reset() {
	*x = IMMessageBody_PCSupportDefine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_PCSupportDefine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_PCSupportDefine) ProtoMessage() {}

func (x *IMMessageBody_PCSupportDefine) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_PCSupportDefine.ProtoReflect.Descriptor instead.
func (*IMMessageBody_PCSupportDefine) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 39}
}

func (x *IMMessageBody_PCSupportDefine) GetPcPtlBegin() uint32 {
	if x != nil {
		return x.PcPtlBegin
	}
	return 0
}

func (x *IMMessageBody_PCSupportDefine) GetPcPtlEnd() uint32 {
	if x != nil {
		return x.PcPtlEnd
	}
	return 0
}

func (x *IMMessageBody_PCSupportDefine) GetMacPtlBegin() uint32 {
	if x != nil {
		return x.MacPtlBegin
	}
	return 0
}

func (x *IMMessageBody_PCSupportDefine) GetMacPtlEnd() uint32 {
	if x != nil {
		return x.MacPtlEnd
	}
	return 0
}

func (x *IMMessageBody_PCSupportDefine) GetPtlsSupport() []uint32 {
	if x != nil {
		return x.PtlsSupport
	}
	return nil
}

func (x *IMMessageBody_PCSupportDefine) GetPtlsNotSupport() []uint32 {
	if x != nil {
		return x.PtlsNotSupport
	}
	return nil
}

// Ptt
type IMMessageBody_PTT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileType      uint32   `protobuf:"varint,1,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`                   // "uint32_file_type"
	SrcUin        uint64   `protobuf:"varint,2,opt,name=src_uin,json=srcUin,proto3" json:"src_uin,omitempty"`                         // "uint64_src_uin"
	FileUuid      []byte   `protobuf:"bytes,3,opt,name=file_uuid,json=fileUuid,proto3" json:"file_uuid,omitempty"`                    // "bytes_file_uuid"
	FileMd5       []byte   `protobuf:"bytes,4,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                       // "bytes_file_md5"
	FileName      []byte   `protobuf:"bytes,5,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`                    // "bytes_file_name"
	FileSize      uint32   `protobuf:"varint,6,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`                   // "uint32_file_size"
	Reserve       []byte   `protobuf:"bytes,7,opt,name=reserve,proto3" json:"reserve,omitempty"`                                      // "bytes_reserve"
	FileId        uint32   `protobuf:"varint,8,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`                         // "uint32_file_id"
	ServerIp      uint32   `protobuf:"varint,9,opt,name=server_ip,json=serverIp,proto3" json:"server_ip,omitempty"`                   // "uint32_server_ip"
	ServerPort    uint32   `protobuf:"varint,10,opt,name=server_port,json=serverPort,proto3" json:"server_port,omitempty"`            // "uint32_server_port"
	Valid         bool     `protobuf:"varint,11,opt,name=valid,proto3" json:"valid,omitempty"`                                        // "bool_valid"
	Signature     []byte   `protobuf:"bytes,12,opt,name=signature,proto3" json:"signature,omitempty"`                                 // "bytes_signature"
	Shortcut      []byte   `protobuf:"bytes,13,opt,name=shortcut,proto3" json:"shortcut,omitempty"`                                   // "bytes_shortcut"
	FileKey       []byte   `protobuf:"bytes,14,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`                      // "bytes_file_key"
	MagicPttIndex uint32   `protobuf:"varint,15,opt,name=magic_ptt_index,json=magicPttIndex,proto3" json:"magic_ptt_index,omitempty"` // "uint32_magic_ptt_index"
	VoiceSwitch   uint32   `protobuf:"varint,16,opt,name=voice_switch,json=voiceSwitch,proto3" json:"voice_switch,omitempty"`         // "uint32_voice_switch"
	PttUrl        []byte   `protobuf:"bytes,17,opt,name=ptt_url,json=pttUrl,proto3" json:"ptt_url,omitempty"`                         // "bytes_ptt_url"
	GroupFileKey  []byte   `protobuf:"bytes,18,opt,name=group_file_key,json=groupFileKey,proto3" json:"group_file_key,omitempty"`     // "bytes_group_file_key"
	Time          uint32   `protobuf:"varint,19,opt,name=time,proto3" json:"time,omitempty"`                                          // "uint32_time"
	DownPara      []byte   `protobuf:"bytes,20,opt,name=down_para,json=downPara,proto3" json:"down_para,omitempty"`                   // "bytes_down_para"
	Format        uint32   `protobuf:"varint,29,opt,name=format,proto3" json:"format,omitempty"`                                      // "uint32_format"
	PbReserve     []byte   `protobuf:"bytes,30,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`                // "bytes_pb_reserve"
	PttUrls       []string `protobuf:"bytes,31,rep,name=ptt_urls,json=pttUrls,proto3" json:"ptt_urls,omitempty"`                      // "rpt_bytes_ptt_urls"
	DownloadFlag  uint32   `protobuf:"varint,32,opt,name=download_flag,json=downloadFlag,proto3" json:"download_flag,omitempty"`      // "uint32_download_flag"
}

func (x *IMMessageBody_PTT) Reset() {
	*x = IMMessageBody_PTT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_PTT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_PTT) ProtoMessage() {}

func (x *IMMessageBody_PTT) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_PTT.ProtoReflect.Descriptor instead.
func (*IMMessageBody_PTT) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 40}
}

func (x *IMMessageBody_PTT) GetFileType() uint32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *IMMessageBody_PTT) GetSrcUin() uint64 {
	if x != nil {
		return x.SrcUin
	}
	return 0
}

func (x *IMMessageBody_PTT) GetFileUuid() []byte {
	if x != nil {
		return x.FileUuid
	}
	return nil
}

func (x *IMMessageBody_PTT) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *IMMessageBody_PTT) GetFileName() []byte {
	if x != nil {
		return x.FileName
	}
	return nil
}

func (x *IMMessageBody_PTT) GetFileSize() uint32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *IMMessageBody_PTT) GetReserve() []byte {
	if x != nil {
		return x.Reserve
	}
	return nil
}

func (x *IMMessageBody_PTT) GetFileId() uint32 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *IMMessageBody_PTT) GetServerIp() uint32 {
	if x != nil {
		return x.ServerIp
	}
	return 0
}

func (x *IMMessageBody_PTT) GetServerPort() uint32 {
	if x != nil {
		return x.ServerPort
	}
	return 0
}

func (x *IMMessageBody_PTT) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *IMMessageBody_PTT) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *IMMessageBody_PTT) GetShortcut() []byte {
	if x != nil {
		return x.Shortcut
	}
	return nil
}

func (x *IMMessageBody_PTT) GetFileKey() []byte {
	if x != nil {
		return x.FileKey
	}
	return nil
}

func (x *IMMessageBody_PTT) GetMagicPttIndex() uint32 {
	if x != nil {
		return x.MagicPttIndex
	}
	return 0
}

func (x *IMMessageBody_PTT) GetVoiceSwitch() uint32 {
	if x != nil {
		return x.VoiceSwitch
	}
	return 0
}

func (x *IMMessageBody_PTT) GetPttUrl() []byte {
	if x != nil {
		return x.PttUrl
	}
	return nil
}

func (x *IMMessageBody_PTT) GetGroupFileKey() []byte {
	if x != nil {
		return x.GroupFileKey
	}
	return nil
}

func (x *IMMessageBody_PTT) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *IMMessageBody_PTT) GetDownPara() []byte {
	if x != nil {
		return x.DownPara
	}
	return nil
}

func (x *IMMessageBody_PTT) GetFormat() uint32 {
	if x != nil {
		return x.Format
	}
	return 0
}

func (x *IMMessageBody_PTT) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

func (x *IMMessageBody_PTT) GetPttUrls() []string {
	if x != nil {
		return x.PttUrls
	}
	return nil
}

func (x *IMMessageBody_PTT) GetDownloadFlag() uint32 {
	if x != nil {
		return x.DownloadFlag
	}
	return 0
}

// PubAccInfo
type IMMessageBody_PublicAccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInterNum    uint32 `protobuf:"varint,1,opt,name=is_inter_num,json=isInterNum,proto3" json:"is_inter_num,omitempty"`         // "uint32_is_inter_num"
	MsgTemplateId string `protobuf:"bytes,2,opt,name=msg_template_id,json=msgTemplateId,proto3" json:"msg_template_id,omitempty"` // "string_msg_template_id"
	LongMsgUrl    string `protobuf:"bytes,3,opt,name=long_msg_url,json=longMsgUrl,proto3" json:"long_msg_url,omitempty"`          // "string_long_msg_url"
	DownloadKey   []byte `protobuf:"bytes,4,opt,name=download_key,json=downloadKey,proto3" json:"download_key,omitempty"`         // "bytes_download_key"
}

func (x *IMMessageBody_PublicAccountInfo) Reset() {
	*x = IMMessageBody_PublicAccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_PublicAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_PublicAccountInfo) ProtoMessage() {}

func (x *IMMessageBody_PublicAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_PublicAccountInfo.ProtoReflect.Descriptor instead.
func (*IMMessageBody_PublicAccountInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 41}
}

func (x *IMMessageBody_PublicAccountInfo) GetIsInterNum() uint32 {
	if x != nil {
		return x.IsInterNum
	}
	return 0
}

func (x *IMMessageBody_PublicAccountInfo) GetMsgTemplateId() string {
	if x != nil {
		return x.MsgTemplateId
	}
	return ""
}

func (x *IMMessageBody_PublicAccountInfo) GetLongMsgUrl() string {
	if x != nil {
		return x.LongMsgUrl
	}
	return ""
}

func (x *IMMessageBody_PublicAccountInfo) GetDownloadKey() []byte {
	if x != nil {
		return x.DownloadKey
	}
	return nil
}

// PubAccount
type IMMessageBody_PublicAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buf           []byte `protobuf:"bytes,1,opt,name=buf,proto3" json:"buf,omitempty"`                                             // "bytes_buf"
	PubAccountUin uint64 `protobuf:"varint,2,opt,name=pub_account_uin,json=pubAccountUin,proto3" json:"pub_account_uin,omitempty"` // "uint64_pub_account_uin"
}

func (x *IMMessageBody_PublicAccount) Reset() {
	*x = IMMessageBody_PublicAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_PublicAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_PublicAccount) ProtoMessage() {}

func (x *IMMessageBody_PublicAccount) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_PublicAccount.ProtoReflect.Descriptor instead.
func (*IMMessageBody_PublicAccount) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 42}
}

func (x *IMMessageBody_PublicAccount) GetBuf() []byte {
	if x != nil {
		return x.Buf
	}
	return nil
}

func (x *IMMessageBody_PublicAccount) GetPubAccountUin() uint64 {
	if x != nil {
		return x.PubAccountUin
	}
	return 0
}

// PubGroup
type IMMessageBody_PublicGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname []byte `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`  // "bytes_nickname"
	Gender   uint32 `protobuf:"varint,2,opt,name=gender,proto3" json:"gender,omitempty"`     // "uint32_gender"
	Age      uint32 `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`           // "uint32_age"
	Distance uint32 `protobuf:"varint,4,opt,name=distance,proto3" json:"distance,omitempty"` // "uint32_distance"
}

func (x *IMMessageBody_PublicGroup) Reset() {
	*x = IMMessageBody_PublicGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_PublicGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_PublicGroup) ProtoMessage() {}

func (x *IMMessageBody_PublicGroup) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_PublicGroup.ProtoReflect.Descriptor instead.
func (*IMMessageBody_PublicGroup) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 43}
}

func (x *IMMessageBody_PublicGroup) GetNickname() []byte {
	if x != nil {
		return x.Nickname
	}
	return nil
}

func (x *IMMessageBody_PublicGroup) GetGender() uint32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *IMMessageBody_PublicGroup) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *IMMessageBody_PublicGroup) GetDistance() uint32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

// QQLiveOld
type IMMessageBody_QQLiveOld struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubCmd    uint32 `protobuf:"varint,1,opt,name=sub_cmd,json=subCmd,proto3" json:"sub_cmd,omitempty"`      // "uint32_sub_cmd"
	ShowText  []byte `protobuf:"bytes,2,opt,name=show_text,json=showText,proto3" json:"show_text,omitempty"` // "str_show_text"
	Param     []byte `protobuf:"bytes,3,opt,name=param,proto3" json:"param,omitempty"`                       // "str_param"
	Introduce []byte `protobuf:"bytes,4,opt,name=introduce,proto3" json:"introduce,omitempty"`               // "str_introduce"
}

func (x *IMMessageBody_QQLiveOld) Reset() {
	*x = IMMessageBody_QQLiveOld{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_QQLiveOld) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_QQLiveOld) ProtoMessage() {}

func (x *IMMessageBody_QQLiveOld) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_QQLiveOld.ProtoReflect.Descriptor instead.
func (*IMMessageBody_QQLiveOld) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 44}
}

func (x *IMMessageBody_QQLiveOld) GetSubCmd() uint32 {
	if x != nil {
		return x.SubCmd
	}
	return 0
}

func (x *IMMessageBody_QQLiveOld) GetShowText() []byte {
	if x != nil {
		return x.ShowText
	}
	return nil
}

func (x *IMMessageBody_QQLiveOld) GetParam() []byte {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *IMMessageBody_QQLiveOld) GetIntroduce() []byte {
	if x != nil {
		return x.Introduce
	}
	return nil
}

// QQWalletAioBody
type IMMessageBody_QQWalletAIOBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Senduin         uint64                            `protobuf:"varint,1,opt,name=senduin,proto3" json:"senduin,omitempty"`                                        // "uint64_senduin"
	Sender          *IMMessageBody_QQWalletAIOElement `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`                                           // "sender"
	Receiver        *IMMessageBody_QQWalletAIOElement `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`                                       // "receiver"
	ChannelId       int32                             `protobuf:"zigzag32,4,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`                 // "sint32_channelid"
	TemplateId      int32                             `protobuf:"zigzag32,5,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`              // "sint32_templateid"
	Resend          uint32                            `protobuf:"varint,6,opt,name=resend,proto3" json:"resend,omitempty"`                                          // "uint32_resend"
	MessagePriority uint32                            `protobuf:"varint,7,opt,name=message_priority,json=messagePriority,proto3" json:"message_priority,omitempty"` // "uint32_msg_priority"
	Redtype         int32                             `protobuf:"zigzag32,8,opt,name=redtype,proto3" json:"redtype,omitempty"`                                      // "sint32_redtype"
	Billno          []byte                            `protobuf:"bytes,9,opt,name=billno,proto3" json:"billno,omitempty"`                                           // "bytes_billno"
	Authkey         []byte                            `protobuf:"bytes,10,opt,name=authkey,proto3" json:"authkey,omitempty"`                                        // "bytes_authkey"
	Sessiontype     int32                             `protobuf:"zigzag32,11,opt,name=sessiontype,proto3" json:"sessiontype,omitempty"`                             // "sint32_sessiontype"
	Msgtype         int32                             `protobuf:"zigzag32,12,opt,name=msgtype,proto3" json:"msgtype,omitempty"`                                     // "sint32_msgtype"
	Envelopeid      int32                             `protobuf:"zigzag32,13,opt,name=envelopeid,proto3" json:"envelopeid,omitempty"`                               // "sint32_envelopeid"
	Name            []byte                            `protobuf:"bytes,14,opt,name=name,proto3" json:"name,omitempty"`                                              // "bytes_name"
	Conftype        int32                             `protobuf:"zigzag32,15,opt,name=conftype,proto3" json:"conftype,omitempty"`                                   // "sint32_conftype"
	MessageFrom     int32                             `protobuf:"zigzag32,16,opt,name=message_from,json=messageFrom,proto3" json:"message_from,omitempty"`          // "sint32_msg_from"
	PcBody          []byte                            `protobuf:"bytes,17,opt,name=pc_body,json=pcBody,proto3" json:"pc_body,omitempty"`                            // "bytes_pc_body"
	Index           []byte                            `protobuf:"bytes,18,opt,name=index,proto3" json:"index,omitempty"`                                            // "string_index"
	Redchannel      uint32                            `protobuf:"varint,19,opt,name=redchannel,proto3" json:"redchannel,omitempty"`                                 // "uint32_redchannel"
	GrapUin         []uint64                          `protobuf:"varint,20,rep,packed,name=grap_uin,json=grapUin,proto3" json:"grap_uin,omitempty"`                 // "uint64_grap_uin"
	PbReserve       []byte                            `protobuf:"bytes,21,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`                   // "bytes_pb_reserve"
}

func (x *IMMessageBody_QQWalletAIOBody) Reset() {
	*x = IMMessageBody_QQWalletAIOBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_QQWalletAIOBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_QQWalletAIOBody) ProtoMessage() {}

func (x *IMMessageBody_QQWalletAIOBody) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_QQWalletAIOBody.ProtoReflect.Descriptor instead.
func (*IMMessageBody_QQWalletAIOBody) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 45}
}

func (x *IMMessageBody_QQWalletAIOBody) GetSenduin() uint64 {
	if x != nil {
		return x.Senduin
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOBody) GetSender() *IMMessageBody_QQWalletAIOElement {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOBody) GetReceiver() *IMMessageBody_QQWalletAIOElement {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOBody) GetChannelId() int32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOBody) GetTemplateId() int32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOBody) GetResend() uint32 {
	if x != nil {
		return x.Resend
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOBody) GetMessagePriority() uint32 {
	if x != nil {
		return x.MessagePriority
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOBody) GetRedtype() int32 {
	if x != nil {
		return x.Redtype
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOBody) GetBillno() []byte {
	if x != nil {
		return x.Billno
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOBody) GetAuthkey() []byte {
	if x != nil {
		return x.Authkey
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOBody) GetSessiontype() int32 {
	if x != nil {
		return x.Sessiontype
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOBody) GetMsgtype() int32 {
	if x != nil {
		return x.Msgtype
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOBody) GetEnvelopeid() int32 {
	if x != nil {
		return x.Envelopeid
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOBody) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOBody) GetConftype() int32 {
	if x != nil {
		return x.Conftype
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOBody) GetMessageFrom() int32 {
	if x != nil {
		return x.MessageFrom
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOBody) GetPcBody() []byte {
	if x != nil {
		return x.PcBody
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOBody) GetIndex() []byte {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOBody) GetRedchannel() uint32 {
	if x != nil {
		return x.Redchannel
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOBody) GetGrapUin() []uint64 {
	if x != nil {
		return x.GrapUin
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOBody) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

// QQWalletAioElem
type IMMessageBody_QQWalletAIOElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Background      uint32 `protobuf:"varint,1,opt,name=background,proto3" json:"background,omitempty"`                                  // "uint32_background"
	Icon            uint32 `protobuf:"varint,2,opt,name=icon,proto3" json:"icon,omitempty"`                                              // "uint32_icon"
	Title           []byte `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                                             // "bytes_title"
	Subtitle        []byte `protobuf:"bytes,4,opt,name=subtitle,proto3" json:"subtitle,omitempty"`                                       // "bytes_subtitle"
	Content         []byte `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`                                         // "bytes_content"
	Linkurl         []byte `protobuf:"bytes,6,opt,name=linkurl,proto3" json:"linkurl,omitempty"`                                         // "bytes_linkurl"
	Blackstripe     []byte `protobuf:"bytes,7,opt,name=blackstripe,proto3" json:"blackstripe,omitempty"`                                 // "bytes_blackstripe"
	Notice          []byte `protobuf:"bytes,8,opt,name=notice,proto3" json:"notice,omitempty"`                                           // "bytes_notice"
	TitleColor      uint32 `protobuf:"varint,9,opt,name=title_color,json=titleColor,proto3" json:"title_color,omitempty"`                // "uint32_title_color"
	SubtitleColor   uint32 `protobuf:"varint,10,opt,name=subtitle_color,json=subtitleColor,proto3" json:"subtitle_color,omitempty"`      // "uint32_subtitle_color"
	ActionsPriority []byte `protobuf:"bytes,11,opt,name=actions_priority,json=actionsPriority,proto3" json:"actions_priority,omitempty"` // "bytes_actions_priority"
	JumpUrl         []byte `protobuf:"bytes,12,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`                         // "bytes_jump_url"
	NativeIos       []byte `protobuf:"bytes,13,opt,name=native_ios,json=nativeIos,proto3" json:"native_ios,omitempty"`                   // "bytes_native_ios"
	NativeAndroid   []byte `protobuf:"bytes,14,opt,name=native_android,json=nativeAndroid,proto3" json:"native_android,omitempty"`       // "bytes_native_android"
	Iconurl         []byte `protobuf:"bytes,15,opt,name=iconurl,proto3" json:"iconurl,omitempty"`                                        // "bytes_iconurl"
	ContentColor    uint32 `protobuf:"varint,16,opt,name=content_color,json=contentColor,proto3" json:"content_color,omitempty"`         // "uint32_content_color"
	ContentBgcolor  uint32 `protobuf:"varint,17,opt,name=content_bgcolor,json=contentBgcolor,proto3" json:"content_bgcolor,omitempty"`   // "uint32_content_bgcolor"
	AioImageLeft    []byte `protobuf:"bytes,18,opt,name=aio_image_left,json=aioImageLeft,proto3" json:"aio_image_left,omitempty"`        // "bytes_aio_image_left"
	AioImageRight   []byte `protobuf:"bytes,19,opt,name=aio_image_right,json=aioImageRight,proto3" json:"aio_image_right,omitempty"`     // "bytes_aio_image_right"
	CftImage        []byte `protobuf:"bytes,20,opt,name=cft_image,json=cftImage,proto3" json:"cft_image,omitempty"`                      // "bytes_cft_image"
	PbReserve       []byte `protobuf:"bytes,21,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`                   // "bytes_pb_reserve"
}

func (x *IMMessageBody_QQWalletAIOElement) Reset() {
	*x = IMMessageBody_QQWalletAIOElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_QQWalletAIOElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_QQWalletAIOElement) ProtoMessage() {}

func (x *IMMessageBody_QQWalletAIOElement) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_QQWalletAIOElement.ProtoReflect.Descriptor instead.
func (*IMMessageBody_QQWalletAIOElement) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 46}
}

func (x *IMMessageBody_QQWalletAIOElement) GetBackground() uint32 {
	if x != nil {
		return x.Background
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOElement) GetIcon() uint32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOElement) GetTitle() []byte {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOElement) GetSubtitle() []byte {
	if x != nil {
		return x.Subtitle
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOElement) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOElement) GetLinkurl() []byte {
	if x != nil {
		return x.Linkurl
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOElement) GetBlackstripe() []byte {
	if x != nil {
		return x.Blackstripe
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOElement) GetNotice() []byte {
	if x != nil {
		return x.Notice
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOElement) GetTitleColor() uint32 {
	if x != nil {
		return x.TitleColor
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOElement) GetSubtitleColor() uint32 {
	if x != nil {
		return x.SubtitleColor
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOElement) GetActionsPriority() []byte {
	if x != nil {
		return x.ActionsPriority
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOElement) GetJumpUrl() []byte {
	if x != nil {
		return x.JumpUrl
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOElement) GetNativeIos() []byte {
	if x != nil {
		return x.NativeIos
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOElement) GetNativeAndroid() []byte {
	if x != nil {
		return x.NativeAndroid
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOElement) GetIconurl() []byte {
	if x != nil {
		return x.Iconurl
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOElement) GetContentColor() uint32 {
	if x != nil {
		return x.ContentColor
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOElement) GetContentBgcolor() uint32 {
	if x != nil {
		return x.ContentBgcolor
	}
	return 0
}

func (x *IMMessageBody_QQWalletAIOElement) GetAioImageLeft() []byte {
	if x != nil {
		return x.AioImageLeft
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOElement) GetAioImageRight() []byte {
	if x != nil {
		return x.AioImageRight
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOElement) GetCftImage() []byte {
	if x != nil {
		return x.CftImage
	}
	return nil
}

func (x *IMMessageBody_QQWalletAIOElement) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

// QQWalletMsg
type IMMessageBody_QQWalletMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AioBody *IMMessageBody_QQWalletAIOBody `protobuf:"bytes,1,opt,name=aio_body,json=aioBody,proto3" json:"aio_body,omitempty"` // "aio_body"
}

func (x *IMMessageBody_QQWalletMessage) Reset() {
	*x = IMMessageBody_QQWalletMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_QQWalletMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_QQWalletMessage) ProtoMessage() {}

func (x *IMMessageBody_QQWalletMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_QQWalletMessage.ProtoReflect.Descriptor instead.
func (*IMMessageBody_QQWalletMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 47}
}

func (x *IMMessageBody_QQWalletMessage) GetAioBody() *IMMessageBody_QQWalletAIOBody {
	if x != nil {
		return x.AioBody
	}
	return nil
}

// RedBagInfo
type IMMessageBody_RedBagInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RedbagType uint32 `protobuf:"varint,1,opt,name=redbag_type,json=redbagType,proto3" json:"redbag_type,omitempty"` // "redbag_type"
}

func (x *IMMessageBody_RedBagInfo) Reset() {
	*x = IMMessageBody_RedBagInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_RedBagInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_RedBagInfo) ProtoMessage() {}

func (x *IMMessageBody_RedBagInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_RedBagInfo.ProtoReflect.Descriptor instead.
func (*IMMessageBody_RedBagInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 48}
}

func (x *IMMessageBody_RedBagInfo) GetRedbagType() uint32 {
	if x != nil {
		return x.RedbagType
	}
	return 0
}

// RichMsg
type IMMessageBody_RichMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template   []byte `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`                       // "bytes_template_1"
	ServiceId  uint32 `protobuf:"varint,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`   // "uint32_service_id"
	ResourceId []byte `protobuf:"bytes,3,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"` // "bytes_msg_resid"
	Random     uint32 `protobuf:"varint,4,opt,name=random,proto3" json:"random,omitempty"`                          // "uint32_rand"
	Seq        uint32 `protobuf:"varint,5,opt,name=seq,proto3" json:"seq,omitempty"`                                // "uint32_seq"
	Flags      uint32 `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`                            // "uint32_flags"
}

func (x *IMMessageBody_RichMessage) Reset() {
	*x = IMMessageBody_RichMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_RichMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_RichMessage) ProtoMessage() {}

func (x *IMMessageBody_RichMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_RichMessage.ProtoReflect.Descriptor instead.
func (*IMMessageBody_RichMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 49}
}

func (x *IMMessageBody_RichMessage) GetTemplate() []byte {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *IMMessageBody_RichMessage) GetServiceId() uint32 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *IMMessageBody_RichMessage) GetResourceId() []byte {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *IMMessageBody_RichMessage) GetRandom() uint32 {
	if x != nil {
		return x.Random
	}
	return 0
}

func (x *IMMessageBody_RichMessage) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *IMMessageBody_RichMessage) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

// RichText
type IMMessageBody_RichText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attribute               *IMMessageBody_Attribute               `protobuf:"bytes,1,opt,name=attribute,proto3" json:"attribute,omitempty"`                                                             // "attr"
	Elements                []*IMMessageBody_Element               `protobuf:"bytes,2,rep,name=elements,proto3" json:"elements,omitempty"`                                                               // "elems"
	NotOnlineFile           *IMMessageBody_NotOnlineFile           `protobuf:"bytes,3,opt,name=not_online_file,json=notOnlineFile,proto3" json:"not_online_file,omitempty"`                              // "not_online_file"
	Ptt                     *IMMessageBody_PTT                     `protobuf:"bytes,4,opt,name=ptt,proto3" json:"ptt,omitempty"`                                                                         // "ptt"
	TempPtt                 *IMMessageBody_TempPTT                 `protobuf:"bytes,5,opt,name=temp_ptt,json=tempPtt,proto3" json:"temp_ptt,omitempty"`                                                  // "tmp_ptt"
	Transport_211TmpMessage *IMMessageBody_Transport211TempMessage `protobuf:"bytes,6,opt,name=transport_211_tmp_message,json=transport211TmpMessage,proto3" json:"transport_211_tmp_message,omitempty"` // "trans_211_tmp_msg"
}

func (x *IMMessageBody_RichText) Reset() {
	*x = IMMessageBody_RichText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_RichText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_RichText) ProtoMessage() {}

func (x *IMMessageBody_RichText) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_RichText.ProtoReflect.Descriptor instead.
func (*IMMessageBody_RichText) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 50}
}

func (x *IMMessageBody_RichText) GetAttribute() *IMMessageBody_Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *IMMessageBody_RichText) GetElements() []*IMMessageBody_Element {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *IMMessageBody_RichText) GetNotOnlineFile() *IMMessageBody_NotOnlineFile {
	if x != nil {
		return x.NotOnlineFile
	}
	return nil
}

func (x *IMMessageBody_RichText) GetPtt() *IMMessageBody_PTT {
	if x != nil {
		return x.Ptt
	}
	return nil
}

func (x *IMMessageBody_RichText) GetTempPtt() *IMMessageBody_TempPTT {
	if x != nil {
		return x.TempPtt
	}
	return nil
}

func (x *IMMessageBody_RichText) GetTransport_211TmpMessage() *IMMessageBody_Transport211TempMessage {
	if x != nil {
		return x.Transport_211TmpMessage
	}
	return nil
}

// SecretFileMsg
type IMMessageBody_SecretFileMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileKey              []byte                        `protobuf:"bytes,1,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`                                           // "bytes_file_key"
	FromUin              uint64                        `protobuf:"varint,2,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`                                          // "uint64_from_uin"
	ToUin                uint64                        `protobuf:"varint,3,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`                                                // "uint64_to_uin"
	Status               uint32                        `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                                                           // "uint32_status"
	Ttl                  uint32                        `protobuf:"varint,5,opt,name=ttl,proto3" json:"ttl,omitempty"`                                                                 // "uint32_ttl"
	Type                 uint32                        `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`                                                               // "uint32_type"
	EncryptPreheadLength uint32                        `protobuf:"varint,7,opt,name=encrypt_prehead_length,json=encryptPreheadLength,proto3" json:"encrypt_prehead_length,omitempty"` // "uint32_encrypt_prehead_length"
	EncryptType          uint32                        `protobuf:"varint,8,opt,name=encrypt_type,json=encryptType,proto3" json:"encrypt_type,omitempty"`                              // "uint32_encrypt_type"
	EncryptKey           []byte                        `protobuf:"bytes,9,opt,name=encrypt_key,json=encryptKey,proto3" json:"encrypt_key,omitempty"`                                  // "bytes_encrypt_key"
	ReadTimes            uint32                        `protobuf:"varint,10,opt,name=read_times,json=readTimes,proto3" json:"read_times,omitempty"`                                   // "uint32_read_times"
	LeftTime             uint32                        `protobuf:"varint,11,opt,name=left_time,json=leftTime,proto3" json:"left_time,omitempty"`                                      // "uint32_left_time"
	NotOnlineImage       *IMMessageBody_NotOnlineImage `protobuf:"bytes,12,opt,name=not_online_image,json=notOnlineImage,proto3" json:"not_online_image,omitempty"`                   // "not_online_image"
	ElemFlags2           *IMMessageBody_ElementFlags2  `protobuf:"bytes,13,opt,name=elem_flags2,json=elemFlags2,proto3" json:"elem_flags2,omitempty"`                                 // "elem_flags2"
	Opertype             uint32                        `protobuf:"varint,14,opt,name=opertype,proto3" json:"opertype,omitempty"`                                                      // "uint32_opertype"
	Fromphonenum         string                        `protobuf:"bytes,15,opt,name=fromphonenum,proto3" json:"fromphonenum,omitempty"`                                               // "str_fromphonenum"
}

func (x *IMMessageBody_SecretFileMessage) Reset() {
	*x = IMMessageBody_SecretFileMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_SecretFileMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_SecretFileMessage) ProtoMessage() {}

func (x *IMMessageBody_SecretFileMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_SecretFileMessage.ProtoReflect.Descriptor instead.
func (*IMMessageBody_SecretFileMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 51}
}

func (x *IMMessageBody_SecretFileMessage) GetFileKey() []byte {
	if x != nil {
		return x.FileKey
	}
	return nil
}

func (x *IMMessageBody_SecretFileMessage) GetFromUin() uint64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *IMMessageBody_SecretFileMessage) GetToUin() uint64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *IMMessageBody_SecretFileMessage) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *IMMessageBody_SecretFileMessage) GetTtl() uint32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *IMMessageBody_SecretFileMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *IMMessageBody_SecretFileMessage) GetEncryptPreheadLength() uint32 {
	if x != nil {
		return x.EncryptPreheadLength
	}
	return 0
}

func (x *IMMessageBody_SecretFileMessage) GetEncryptType() uint32 {
	if x != nil {
		return x.EncryptType
	}
	return 0
}

func (x *IMMessageBody_SecretFileMessage) GetEncryptKey() []byte {
	if x != nil {
		return x.EncryptKey
	}
	return nil
}

func (x *IMMessageBody_SecretFileMessage) GetReadTimes() uint32 {
	if x != nil {
		return x.ReadTimes
	}
	return 0
}

func (x *IMMessageBody_SecretFileMessage) GetLeftTime() uint32 {
	if x != nil {
		return x.LeftTime
	}
	return 0
}

func (x *IMMessageBody_SecretFileMessage) GetNotOnlineImage() *IMMessageBody_NotOnlineImage {
	if x != nil {
		return x.NotOnlineImage
	}
	return nil
}

func (x *IMMessageBody_SecretFileMessage) GetElemFlags2() *IMMessageBody_ElementFlags2 {
	if x != nil {
		return x.ElemFlags2
	}
	return nil
}

func (x *IMMessageBody_SecretFileMessage) GetOpertype() uint32 {
	if x != nil {
		return x.Opertype
	}
	return 0
}

func (x *IMMessageBody_SecretFileMessage) GetFromphonenum() string {
	if x != nil {
		return x.Fromphonenum
	}
	return ""
}

// ShakeWindow
type IMMessageBody_ShakeWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`       // "uint32_type"
	Reserve uint32 `protobuf:"varint,2,opt,name=reserve,proto3" json:"reserve,omitempty"` // "uint32_reserve"
	Uin     uint64 `protobuf:"varint,3,opt,name=uin,proto3" json:"uin,omitempty"`         // "uint64_uin"
}

func (x *IMMessageBody_ShakeWindow) Reset() {
	*x = IMMessageBody_ShakeWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_ShakeWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_ShakeWindow) ProtoMessage() {}

func (x *IMMessageBody_ShakeWindow) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_ShakeWindow.ProtoReflect.Descriptor instead.
func (*IMMessageBody_ShakeWindow) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 52}
}

func (x *IMMessageBody_ShakeWindow) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *IMMessageBody_ShakeWindow) GetReserve() uint32 {
	if x != nil {
		return x.Reserve
	}
	return 0
}

func (x *IMMessageBody_ShakeWindow) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

// SmallEmoji
type IMMessageBody_SmallEmoji struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackIdSum uint32 `protobuf:"varint,1,opt,name=packIdSum,proto3" json:"packIdSum,omitempty"` // "packIdSum"
	ImageType uint32 `protobuf:"varint,2,opt,name=imageType,proto3" json:"imageType,omitempty"` // "imageType"
}

func (x *IMMessageBody_SmallEmoji) Reset() {
	*x = IMMessageBody_SmallEmoji{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_SmallEmoji) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_SmallEmoji) ProtoMessage() {}

func (x *IMMessageBody_SmallEmoji) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_SmallEmoji.ProtoReflect.Descriptor instead.
func (*IMMessageBody_SmallEmoji) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 53}
}

func (x *IMMessageBody_SmallEmoji) GetPackIdSum() uint32 {
	if x != nil {
		return x.PackIdSum
	}
	return 0
}

func (x *IMMessageBody_SmallEmoji) GetImageType() uint32 {
	if x != nil {
		return x.ImageType
	}
	return 0
}

// SourceMsg
type IMMessageBody_SourceMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrigSeqs    []uint32                 `protobuf:"varint,1,rep,packed,name=orig_seqs,json=origSeqs,proto3" json:"orig_seqs,omitempty"` // "uint32_orig_seqs"
	FromUin     uint64                   `protobuf:"varint,2,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`           // "uint64_sender_uin"
	Time        uint32                   `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`                                // "uint32_time"
	Flag        uint32                   `protobuf:"varint,4,opt,name=flag,proto3" json:"flag,omitempty"`                                // "uint32_flag"
	Elems       []*IMMessageBody_Element `protobuf:"bytes,5,rep,name=elems,proto3" json:"elems,omitempty"`                               // "elems"
	Type        uint32                   `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`                                // "uint32_type"
	RichMessage []byte                   `protobuf:"bytes,7,opt,name=richMessage,proto3" json:"richMessage,omitempty"`                   // "bytes_richMsg"
	PbReserve   []byte                   `protobuf:"bytes,8,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`      // "bytes_pb_reserve"
	SrcMessage  []byte                   `protobuf:"bytes,9,opt,name=src_message,json=srcMessage,proto3" json:"src_message,omitempty"`   // "bytes_src_msg"
	ToUin       uint64                   `protobuf:"varint,10,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`                // "uint64_to_uin"
	TroopName   []byte                   `protobuf:"bytes,11,opt,name=troop_name,json=troopName,proto3" json:"troop_name,omitempty"`     // "bytes_troop_name"
}

func (x *IMMessageBody_SourceMessage) Reset() {
	*x = IMMessageBody_SourceMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_SourceMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_SourceMessage) ProtoMessage() {}

func (x *IMMessageBody_SourceMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_SourceMessage.ProtoReflect.Descriptor instead.
func (*IMMessageBody_SourceMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 54}
}

func (x *IMMessageBody_SourceMessage) GetOrigSeqs() []uint32 {
	if x != nil {
		return x.OrigSeqs
	}
	return nil
}

func (x *IMMessageBody_SourceMessage) GetFromUin() uint64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *IMMessageBody_SourceMessage) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *IMMessageBody_SourceMessage) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *IMMessageBody_SourceMessage) GetElems() []*IMMessageBody_Element {
	if x != nil {
		return x.Elems
	}
	return nil
}

func (x *IMMessageBody_SourceMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *IMMessageBody_SourceMessage) GetRichMessage() []byte {
	if x != nil {
		return x.RichMessage
	}
	return nil
}

func (x *IMMessageBody_SourceMessage) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

func (x *IMMessageBody_SourceMessage) GetSrcMessage() []byte {
	if x != nil {
		return x.SrcMessage
	}
	return nil
}

func (x *IMMessageBody_SourceMessage) GetToUin() uint64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *IMMessageBody_SourceMessage) GetTroopName() []byte {
	if x != nil {
		return x.TroopName
	}
	return nil
}

// Text
type IMMessageBody_Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text             string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`                                                 // "str"
	Link             string `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`                                                 // "link"
	Attribute6Buffer []byte `protobuf:"bytes,3,opt,name=attribute6_buffer,json=attribute6Buffer,proto3" json:"attribute6_buffer,omitempty"` // "attr_6_buf"
	Attribute7Buffer []byte `protobuf:"bytes,4,opt,name=attribute7_buffer,json=attribute7Buffer,proto3" json:"attribute7_buffer,omitempty"` // "attr_7_buf"
	Buffer           []byte `protobuf:"bytes,11,opt,name=buffer,proto3" json:"buffer,omitempty"`                                            // "buf"
	PbReserve        []byte `protobuf:"bytes,12,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`                     // "bytes_pb_reserve"
}

func (x *IMMessageBody_Text) Reset() {
	*x = IMMessageBody_Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_Text) ProtoMessage() {}

func (x *IMMessageBody_Text) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_Text.ProtoReflect.Descriptor instead.
func (*IMMessageBody_Text) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 55}
}

func (x *IMMessageBody_Text) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *IMMessageBody_Text) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *IMMessageBody_Text) GetAttribute6Buffer() []byte {
	if x != nil {
		return x.Attribute6Buffer
	}
	return nil
}

func (x *IMMessageBody_Text) GetAttribute7Buffer() []byte {
	if x != nil {
		return x.Attribute7Buffer
	}
	return nil
}

func (x *IMMessageBody_Text) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

func (x *IMMessageBody_Text) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

// TipsInfo
type IMMessageBody_TipsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"` // "text"
}

func (x *IMMessageBody_TipsInfo) Reset() {
	*x = IMMessageBody_TipsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_TipsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_TipsInfo) ProtoMessage() {}

func (x *IMMessageBody_TipsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_TipsInfo.ProtoReflect.Descriptor instead.
func (*IMMessageBody_TipsInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 56}
}

func (x *IMMessageBody_TipsInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// TmpPtt
type IMMessageBody_TempPTT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileType      uint32 `protobuf:"varint,1,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`                  // "uint32_file_type"
	FileUuid      []byte `protobuf:"bytes,2,opt,name=file_uuid,json=fileUuid,proto3" json:"file_uuid,omitempty"`                   // "bytes_file_uuid"
	FileMd5       []byte `protobuf:"bytes,3,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                      // "bytes_file_md5"
	FileName      []byte `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`                   // "bytes_file_name"
	FileSize      uint32 `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`                  // "uint32_file_size"
	PttTimes      uint32 `protobuf:"varint,6,opt,name=ptt_times,json=pttTimes,proto3" json:"ptt_times,omitempty"`                  // "uint64_ptt_times"
	UserType      uint32 `protobuf:"varint,7,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`                  // "uint32_user_type"
	PtttransFlag  uint32 `protobuf:"varint,8,opt,name=ptttrans_flag,json=ptttransFlag,proto3" json:"ptttrans_flag,omitempty"`      // "uint32_ptttrans_flag"
	BusiType      uint32 `protobuf:"varint,9,opt,name=busi_type,json=busiType,proto3" json:"busi_type,omitempty"`                  // "uint32_busi_type"
	MessageId     uint64 `protobuf:"varint,10,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`              // "uint64_msg_id"
	PbReserve     []byte `protobuf:"bytes,30,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`               // "bytes_pb_reserve"
	PttEncodeData []byte `protobuf:"bytes,31,opt,name=ptt_encode_data,json=pttEncodeData,proto3" json:"ptt_encode_data,omitempty"` // "ptt_encode_data"
}

func (x *IMMessageBody_TempPTT) Reset() {
	*x = IMMessageBody_TempPTT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_TempPTT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_TempPTT) ProtoMessage() {}

func (x *IMMessageBody_TempPTT) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_TempPTT.ProtoReflect.Descriptor instead.
func (*IMMessageBody_TempPTT) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 57}
}

func (x *IMMessageBody_TempPTT) GetFileType() uint32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *IMMessageBody_TempPTT) GetFileUuid() []byte {
	if x != nil {
		return x.FileUuid
	}
	return nil
}

func (x *IMMessageBody_TempPTT) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *IMMessageBody_TempPTT) GetFileName() []byte {
	if x != nil {
		return x.FileName
	}
	return nil
}

func (x *IMMessageBody_TempPTT) GetFileSize() uint32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *IMMessageBody_TempPTT) GetPttTimes() uint32 {
	if x != nil {
		return x.PttTimes
	}
	return 0
}

func (x *IMMessageBody_TempPTT) GetUserType() uint32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *IMMessageBody_TempPTT) GetPtttransFlag() uint32 {
	if x != nil {
		return x.PtttransFlag
	}
	return 0
}

func (x *IMMessageBody_TempPTT) GetBusiType() uint32 {
	if x != nil {
		return x.BusiType
	}
	return 0
}

func (x *IMMessageBody_TempPTT) GetMessageId() uint64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *IMMessageBody_TempPTT) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

func (x *IMMessageBody_TempPTT) GetPttEncodeData() []byte {
	if x != nil {
		return x.PttEncodeData
	}
	return nil
}

// Trans211TmpMsg
type IMMessageBody_Transport211TempMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageBody []byte `protobuf:"bytes,1,opt,name=message_body,json=messageBody,proto3" json:"message_body,omitempty"` // "bytes_msg_body"
	C2CCmd      uint32 `protobuf:"varint,2,opt,name=c2c_cmd,json=c2cCmd,proto3" json:"c2c_cmd,omitempty"`               // "uint32_c2c_cmd"
}

func (x *IMMessageBody_Transport211TempMessage) Reset() {
	*x = IMMessageBody_Transport211TempMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_Transport211TempMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_Transport211TempMessage) ProtoMessage() {}

func (x *IMMessageBody_Transport211TempMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_Transport211TempMessage.ProtoReflect.Descriptor instead.
func (*IMMessageBody_Transport211TempMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 58}
}

func (x *IMMessageBody_Transport211TempMessage) GetMessageBody() []byte {
	if x != nil {
		return x.MessageBody
	}
	return nil
}

func (x *IMMessageBody_Transport211TempMessage) GetC2CCmd() uint32 {
	if x != nil {
		return x.C2CCmd
	}
	return 0
}

// TransElem
type IMMessageBody_TransportElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ElemType  uint32 `protobuf:"varint,1,opt,name=elem_type,json=elemType,proto3" json:"elem_type,omitempty"`   // "elem_type"
	ElemValue []byte `protobuf:"bytes,2,opt,name=elem_value,json=elemValue,proto3" json:"elem_value,omitempty"` // "elem_value"
}

func (x *IMMessageBody_TransportElement) Reset() {
	*x = IMMessageBody_TransportElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_TransportElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_TransportElement) ProtoMessage() {}

func (x *IMMessageBody_TransportElement) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_TransportElement.ProtoReflect.Descriptor instead.
func (*IMMessageBody_TransportElement) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 59}
}

func (x *IMMessageBody_TransportElement) GetElemType() uint32 {
	if x != nil {
		return x.ElemType
	}
	return 0
}

func (x *IMMessageBody_TransportElement) GetElemValue() []byte {
	if x != nil {
		return x.ElemValue
	}
	return nil
}

// VideoFile
type IMMessageBody_VideoFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileUuid           []byte   `protobuf:"bytes,1,opt,name=file_uuid,json=fileUuid,proto3" json:"file_uuid,omitempty"`                                 // "bytes_file_uuid"
	FileMd5            []byte   `protobuf:"bytes,2,opt,name=file_md5,json=fileMd5,proto3" json:"file_md5,omitempty"`                                    // "bytes_file_md5"
	FileName           []byte   `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`                                 // "bytes_file_name"
	FileFormat         uint32   `protobuf:"varint,4,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty"`                          // "uint32_file_format"
	FileTime           uint32   `protobuf:"varint,5,opt,name=file_time,json=fileTime,proto3" json:"file_time,omitempty"`                                // "uint32_file_time"
	FileSize           uint32   `protobuf:"varint,6,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`                                // "uint32_file_size"
	ThumbWidth         uint32   `protobuf:"varint,7,opt,name=thumb_width,json=thumbWidth,proto3" json:"thumb_width,omitempty"`                          // "uint32_thumb_width"
	ThumbHeight        uint32   `protobuf:"varint,8,opt,name=thumb_height,json=thumbHeight,proto3" json:"thumb_height,omitempty"`                       // "uint32_thumb_height"
	ThumbFileMd5       []byte   `protobuf:"bytes,9,opt,name=thumb_file_md5,json=thumbFileMd5,proto3" json:"thumb_file_md5,omitempty"`                   // "bytes_thumb_file_md5"
	Source             []byte   `protobuf:"bytes,10,opt,name=source,proto3" json:"source,omitempty"`                                                    // "bytes_source"
	ThumbFileSize      uint32   `protobuf:"varint,11,opt,name=thumb_file_size,json=thumbFileSize,proto3" json:"thumb_file_size,omitempty"`              // "uint32_thumb_file_size"
	BusiType           uint32   `protobuf:"varint,12,opt,name=busi_type,json=busiType,proto3" json:"busi_type,omitempty"`                               // "uint32_busi_type"
	FromChatType       uint32   `protobuf:"varint,13,opt,name=from_chat_type,json=fromChatType,proto3" json:"from_chat_type,omitempty"`                 // "uint32_from_chat_type"
	ToChatType         uint32   `protobuf:"varint,14,opt,name=to_chat_type,json=toChatType,proto3" json:"to_chat_type,omitempty"`                       // "uint32_to_chat_type"
	SupportProgressive bool     `protobuf:"varint,15,opt,name=support_progressive,json=supportProgressive,proto3" json:"support_progressive,omitempty"` // "bool_support_progressive"
	FileWidth          uint32   `protobuf:"varint,16,opt,name=file_width,json=fileWidth,proto3" json:"file_width,omitempty"`                            // "uint32_file_width"
	FileHeight         uint32   `protobuf:"varint,17,opt,name=file_height,json=fileHeight,proto3" json:"file_height,omitempty"`                         // "uint32_file_height"
	SubBusiType        uint32   `protobuf:"varint,18,opt,name=sub_busi_type,json=subBusiType,proto3" json:"sub_busi_type,omitempty"`                    // "uint32_sub_busi_type"
	VideoAttr          uint32   `protobuf:"varint,19,opt,name=video_attr,json=videoAttr,proto3" json:"video_attr,omitempty"`                            // "uint32_video_attr"
	ThumbFileUrls      []string `protobuf:"bytes,20,rep,name=thumb_file_urls,json=thumbFileUrls,proto3" json:"thumb_file_urls,omitempty"`               // "rpt_bytes_thumb_file_urls"
	VideoFileUrls      []string `protobuf:"bytes,21,rep,name=video_file_urls,json=videoFileUrls,proto3" json:"video_file_urls,omitempty"`               // "rpt_bytes_video_file_urls"
	ThumbDownloadFlag  uint32   `protobuf:"varint,22,opt,name=thumb_download_flag,json=thumbDownloadFlag,proto3" json:"thumb_download_flag,omitempty"`  // "uint32_thumb_download_flag"
	VideoDownloadFlag  uint32   `protobuf:"varint,23,opt,name=video_download_flag,json=videoDownloadFlag,proto3" json:"video_download_flag,omitempty"`  // "uint32_video_download_flag"
	PbReserve          []byte   `protobuf:"bytes,24,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`                             // "bytes_pb_reserve"
}

func (x *IMMessageBody_VideoFile) Reset() {
	*x = IMMessageBody_VideoFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_VideoFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_VideoFile) ProtoMessage() {}

func (x *IMMessageBody_VideoFile) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_VideoFile.ProtoReflect.Descriptor instead.
func (*IMMessageBody_VideoFile) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 60}
}

func (x *IMMessageBody_VideoFile) GetFileUuid() []byte {
	if x != nil {
		return x.FileUuid
	}
	return nil
}

func (x *IMMessageBody_VideoFile) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *IMMessageBody_VideoFile) GetFileName() []byte {
	if x != nil {
		return x.FileName
	}
	return nil
}

func (x *IMMessageBody_VideoFile) GetFileFormat() uint32 {
	if x != nil {
		return x.FileFormat
	}
	return 0
}

func (x *IMMessageBody_VideoFile) GetFileTime() uint32 {
	if x != nil {
		return x.FileTime
	}
	return 0
}

func (x *IMMessageBody_VideoFile) GetFileSize() uint32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *IMMessageBody_VideoFile) GetThumbWidth() uint32 {
	if x != nil {
		return x.ThumbWidth
	}
	return 0
}

func (x *IMMessageBody_VideoFile) GetThumbHeight() uint32 {
	if x != nil {
		return x.ThumbHeight
	}
	return 0
}

func (x *IMMessageBody_VideoFile) GetThumbFileMd5() []byte {
	if x != nil {
		return x.ThumbFileMd5
	}
	return nil
}

func (x *IMMessageBody_VideoFile) GetSource() []byte {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *IMMessageBody_VideoFile) GetThumbFileSize() uint32 {
	if x != nil {
		return x.ThumbFileSize
	}
	return 0
}

func (x *IMMessageBody_VideoFile) GetBusiType() uint32 {
	if x != nil {
		return x.BusiType
	}
	return 0
}

func (x *IMMessageBody_VideoFile) GetFromChatType() uint32 {
	if x != nil {
		return x.FromChatType
	}
	return 0
}

func (x *IMMessageBody_VideoFile) GetToChatType() uint32 {
	if x != nil {
		return x.ToChatType
	}
	return 0
}

func (x *IMMessageBody_VideoFile) GetSupportProgressive() bool {
	if x != nil {
		return x.SupportProgressive
	}
	return false
}

func (x *IMMessageBody_VideoFile) GetFileWidth() uint32 {
	if x != nil {
		return x.FileWidth
	}
	return 0
}

func (x *IMMessageBody_VideoFile) GetFileHeight() uint32 {
	if x != nil {
		return x.FileHeight
	}
	return 0
}

func (x *IMMessageBody_VideoFile) GetSubBusiType() uint32 {
	if x != nil {
		return x.SubBusiType
	}
	return 0
}

func (x *IMMessageBody_VideoFile) GetVideoAttr() uint32 {
	if x != nil {
		return x.VideoAttr
	}
	return 0
}

func (x *IMMessageBody_VideoFile) GetThumbFileUrls() []string {
	if x != nil {
		return x.ThumbFileUrls
	}
	return nil
}

func (x *IMMessageBody_VideoFile) GetVideoFileUrls() []string {
	if x != nil {
		return x.VideoFileUrls
	}
	return nil
}

func (x *IMMessageBody_VideoFile) GetThumbDownloadFlag() uint32 {
	if x != nil {
		return x.ThumbDownloadFlag
	}
	return 0
}

func (x *IMMessageBody_VideoFile) GetVideoDownloadFlag() uint32 {
	if x != nil {
		return x.VideoDownloadFlag
	}
	return 0
}

func (x *IMMessageBody_VideoFile) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

// WorkflowNotifyMsg
type IMMessageBody_WorkflowNotifyMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExtraMessage []byte `protobuf:"bytes,1,opt,name=extra_message,json=extraMessage,proto3" json:"extra_message,omitempty"` // "bytes_ext_msg"
	CreateUin    uint64 `protobuf:"varint,2,opt,name=create_uin,json=createUin,proto3" json:"create_uin,omitempty"`         // "uint64_create_uin"
}

func (x *IMMessageBody_WorkflowNotifyMessage) Reset() {
	*x = IMMessageBody_WorkflowNotifyMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_WorkflowNotifyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_WorkflowNotifyMessage) ProtoMessage() {}

func (x *IMMessageBody_WorkflowNotifyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_WorkflowNotifyMessage.ProtoReflect.Descriptor instead.
func (*IMMessageBody_WorkflowNotifyMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 61}
}

func (x *IMMessageBody_WorkflowNotifyMessage) GetExtraMessage() []byte {
	if x != nil {
		return x.ExtraMessage
	}
	return nil
}

func (x *IMMessageBody_WorkflowNotifyMessage) GetCreateUin() uint64 {
	if x != nil {
		return x.CreateUin
	}
	return 0
}

// LocationInfo
type IMMessageBody_LocationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Longitude float64 `protobuf:"fixed64,1,opt,name=longitude,proto3" json:"longitude,omitempty"` // "double_longitude"
	Latitude  float64 `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`   // "double_latitude"
	Desc      []byte  `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`             // "bytes_desc"
}

func (x *IMMessageBody_LocationInfo) Reset() {
	*x = IMMessageBody_LocationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_LocationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_LocationInfo) ProtoMessage() {}

func (x *IMMessageBody_LocationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_LocationInfo.ProtoReflect.Descriptor instead.
func (*IMMessageBody_LocationInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 62}
}

func (x *IMMessageBody_LocationInfo) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *IMMessageBody_LocationInfo) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *IMMessageBody_LocationInfo) GetDesc() []byte {
	if x != nil {
		return x.Desc
	}
	return nil
}

// Inst
type IMMessageBody_ElementFlags2_Instance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      uint32 `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`                // uint32_app_id
	InstanceId uint32 `protobuf:"varint,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"` // uint32_inst_id
}

func (x *IMMessageBody_ElementFlags2_Instance) Reset() {
	*x = IMMessageBody_ElementFlags2_Instance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_ElementFlags2_Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_ElementFlags2_Instance) ProtoMessage() {}

func (x *IMMessageBody_ElementFlags2_Instance) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_ElementFlags2_Instance.ProtoReflect.Descriptor instead.
func (*IMMessageBody_ElementFlags2_Instance) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 15, 0}
}

func (x *IMMessageBody_ElementFlags2_Instance) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *IMMessageBody_ElementFlags2_Instance) GetInstanceId() uint32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

// Bomb
type IMMessageBody_FunFace_Bomb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Burst bool `protobuf:"varint,1,opt,name=burst,proto3" json:"burst,omitempty"` // bool_burst
}

func (x *IMMessageBody_FunFace_Bomb) Reset() {
	*x = IMMessageBody_FunFace_Bomb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_FunFace_Bomb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_FunFace_Bomb) ProtoMessage() {}

func (x *IMMessageBody_FunFace_Bomb) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_FunFace_Bomb.ProtoReflect.Descriptor instead.
func (*IMMessageBody_FunFace_Bomb) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 19, 0}
}

func (x *IMMessageBody_FunFace_Bomb) GetBurst() bool {
	if x != nil {
		return x.Burst
	}
	return false
}

// Turntable
type IMMessageBody_FunFace_Turntable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UinList    []uint64 `protobuf:"varint,1,rep,packed,name=uin_list,json=uinList,proto3" json:"uin_list,omitempty"`    // rpt_uint64_uin_list
	HitUin     uint64   `protobuf:"varint,2,opt,name=hit_uin,json=hitUin,proto3" json:"hit_uin,omitempty"`              // uint64_hit_uin
	HitUinNick string   `protobuf:"bytes,3,opt,name=hit_uin_nick,json=hitUinNick,proto3" json:"hit_uin_nick,omitempty"` // str_hit_uin_nick
}

func (x *IMMessageBody_FunFace_Turntable) Reset() {
	*x = IMMessageBody_FunFace_Turntable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody_FunFace_Turntable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody_FunFace_Turntable) ProtoMessage() {}

func (x *IMMessageBody_FunFace_Turntable) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody_FunFace_Turntable.ProtoReflect.Descriptor instead.
func (*IMMessageBody_FunFace_Turntable) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1, 19, 1}
}

func (x *IMMessageBody_FunFace_Turntable) GetUinList() []uint64 {
	if x != nil {
		return x.UinList
	}
	return nil
}

func (x *IMMessageBody_FunFace_Turntable) GetHitUin() uint64 {
	if x != nil {
		return x.HitUin
	}
	return 0
}

func (x *IMMessageBody_FunFace_Turntable) GetHitUinNick() string {
	if x != nil {
		return x.HitUinNick
	}
	return ""
}

// C2CHead
type IMMessageHead_C2CHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin       uint64 `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`                   // "uint64_to_uin"
	FromUin     uint64 `protobuf:"varint,2,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`             // "uint64_from_uin"
	CcType      uint32 `protobuf:"varint,3,opt,name=cc_type,json=ccType,proto3" json:"cc_type,omitempty"`                // "uint32_cc_type"
	CcCmd       uint32 `protobuf:"varint,4,opt,name=cc_cmd,json=ccCmd,proto3" json:"cc_cmd,omitempty"`                   // "uint32_cc_cmd"
	AuthPicSig  []byte `protobuf:"bytes,5,opt,name=auth_pic_sig,json=authPicSig,proto3" json:"auth_pic_sig,omitempty"`   // "bytes_auth_pic_sig"
	AuthSig     []byte `protobuf:"bytes,6,opt,name=auth_sig,json=authSig,proto3" json:"auth_sig,omitempty"`              // "bytes_auth_sig"
	AuthBuf     []byte `protobuf:"bytes,7,opt,name=auth_buf,json=authBuf,proto3" json:"auth_buf,omitempty"`              // "bytes_auth_buf"
	ServerTime  uint32 `protobuf:"varint,8,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`    // "uint32_server_time"
	ClientTime  uint32 `protobuf:"varint,9,opt,name=client_time,json=clientTime,proto3" json:"client_time,omitempty"`    // "uint32_client_time"
	Rand        uint32 `protobuf:"varint,10,opt,name=rand,proto3" json:"rand,omitempty"`                                 // "uint32_rand"
	PhoneNumber string `protobuf:"bytes,11,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"` // "string_phone_number"
}

func (x *IMMessageHead_C2CHead) Reset() {
	*x = IMMessageHead_C2CHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageHead_C2CHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageHead_C2CHead) ProtoMessage() {}

func (x *IMMessageHead_C2CHead) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageHead_C2CHead.ProtoReflect.Descriptor instead.
func (*IMMessageHead_C2CHead) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2, 0}
}

func (x *IMMessageHead_C2CHead) GetToUin() uint64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *IMMessageHead_C2CHead) GetFromUin() uint64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *IMMessageHead_C2CHead) GetCcType() uint32 {
	if x != nil {
		return x.CcType
	}
	return 0
}

func (x *IMMessageHead_C2CHead) GetCcCmd() uint32 {
	if x != nil {
		return x.CcCmd
	}
	return 0
}

func (x *IMMessageHead_C2CHead) GetAuthPicSig() []byte {
	if x != nil {
		return x.AuthPicSig
	}
	return nil
}

func (x *IMMessageHead_C2CHead) GetAuthSig() []byte {
	if x != nil {
		return x.AuthSig
	}
	return nil
}

func (x *IMMessageHead_C2CHead) GetAuthBuf() []byte {
	if x != nil {
		return x.AuthBuf
	}
	return nil
}

func (x *IMMessageHead_C2CHead) GetServerTime() uint32 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *IMMessageHead_C2CHead) GetClientTime() uint32 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

func (x *IMMessageHead_C2CHead) GetRand() uint32 {
	if x != nil {
		return x.Rand
	}
	return 0
}

func (x *IMMessageHead_C2CHead) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

// CSHead
type IMMessageHead_CSHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin           uint64 `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`                                           // "uint64_uin"
	Command       uint32 `protobuf:"varint,2,opt,name=command,proto3" json:"command,omitempty"`                                   // "uint32_command"
	Seq           uint32 `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`                                           // "uint32_seq"
	Version       uint32 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`                                   // "uint32_version"
	RetryTimes    uint32 `protobuf:"varint,5,opt,name=retry_times,json=retryTimes,proto3" json:"retry_times,omitempty"`           // "uint32_retry_times"
	ClientType    uint32 `protobuf:"varint,6,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`           // "uint32_client_type"
	Pubno         uint32 `protobuf:"varint,7,opt,name=pubno,proto3" json:"pubno,omitempty"`                                       // "uint32_pubno"
	Localid       uint32 `protobuf:"varint,8,opt,name=localid,proto3" json:"localid,omitempty"`                                   // "uint32_localid"
	Timezone      uint32 `protobuf:"varint,9,opt,name=timezone,proto3" json:"timezone,omitempty"`                                 // "uint32_timezone"
	ClientIp      uint32 `protobuf:"fixed32,10,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`               // "uint32_client_ip"
	ClientPort    uint32 `protobuf:"varint,11,opt,name=client_port,json=clientPort,proto3" json:"client_port,omitempty"`          // "uint32_client_port"
	ConnIp        uint32 `protobuf:"fixed32,12,opt,name=conn_ip,json=connIp,proto3" json:"conn_ip,omitempty"`                     // "uint32_conn_ip"
	ConnPort      uint32 `protobuf:"varint,13,opt,name=conn_port,json=connPort,proto3" json:"conn_port,omitempty"`                // "uint32_conn_port"
	InterfaceIp   uint32 `protobuf:"fixed32,14,opt,name=interface_ip,json=interfaceIp,proto3" json:"interface_ip,omitempty"`      // "uint32_interface_ip"
	InterfacePort uint32 `protobuf:"varint,15,opt,name=interface_port,json=interfacePort,proto3" json:"interface_port,omitempty"` // "uint32_interface_port"
	ActualIp      uint32 `protobuf:"fixed32,16,opt,name=actual_ip,json=actualIp,proto3" json:"actual_ip,omitempty"`               // "uint32_actual_ip"
	Flag          uint32 `protobuf:"varint,17,opt,name=flag,proto3" json:"flag,omitempty"`                                        // "uint32_flag"
	Timestamp     uint32 `protobuf:"fixed32,18,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                             // "uint32_timestamp"
	Subcmd        uint32 `protobuf:"varint,19,opt,name=subcmd,proto3" json:"subcmd,omitempty"`                                    // "uint32_subcmd"
	Result        uint32 `protobuf:"varint,20,opt,name=result,proto3" json:"result,omitempty"`                                    // "uint32_result"
	AppId         uint32 `protobuf:"varint,21,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`                         // "uint32_app_id"
	InstanceId    uint32 `protobuf:"varint,22,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`          // "uint32_instance_id"
	SessionId     uint64 `protobuf:"varint,23,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`             // "uint64_session_id"
	IdcId         uint32 `protobuf:"varint,24,opt,name=idc_id,json=idcId,proto3" json:"idc_id,omitempty"`                         // "uint32_idc_id"
}

func (x *IMMessageHead_CSHead) Reset() {
	*x = IMMessageHead_CSHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageHead_CSHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageHead_CSHead) ProtoMessage() {}

func (x *IMMessageHead_CSHead) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageHead_CSHead.ProtoReflect.Descriptor instead.
func (*IMMessageHead_CSHead) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2, 1}
}

func (x *IMMessageHead_CSHead) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetCommand() uint32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetRetryTimes() uint32 {
	if x != nil {
		return x.RetryTimes
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetPubno() uint32 {
	if x != nil {
		return x.Pubno
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetLocalid() uint32 {
	if x != nil {
		return x.Localid
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetTimezone() uint32 {
	if x != nil {
		return x.Timezone
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetClientIp() uint32 {
	if x != nil {
		return x.ClientIp
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetClientPort() uint32 {
	if x != nil {
		return x.ClientPort
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetConnIp() uint32 {
	if x != nil {
		return x.ConnIp
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetConnPort() uint32 {
	if x != nil {
		return x.ConnPort
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetInterfaceIp() uint32 {
	if x != nil {
		return x.InterfaceIp
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetInterfacePort() uint32 {
	if x != nil {
		return x.InterfacePort
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetActualIp() uint32 {
	if x != nil {
		return x.ActualIp
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetSubcmd() uint32 {
	if x != nil {
		return x.Subcmd
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetInstanceId() uint32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetSessionId() uint64 {
	if x != nil {
		return x.SessionId
	}
	return 0
}

func (x *IMMessageHead_CSHead) GetIdcId() uint32 {
	if x != nil {
		return x.IdcId
	}
	return 0
}

// DeltaHead
type IMMessageHead_DeltaHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalLen  uint64 `protobuf:"varint,1,opt,name=total_len,json=totalLen,proto3" json:"total_len,omitempty"`    // "uint64_total_len"
	Offset    uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`                        // "uint64_offset"
	AckOffset uint64 `protobuf:"varint,3,opt,name=ack_offset,json=ackOffset,proto3" json:"ack_offset,omitempty"` // "uint64_ack_offset"
	Cookie    []byte `protobuf:"bytes,4,opt,name=cookie,proto3" json:"cookie,omitempty"`                         // "bytes_cookie"
	AckCookie []byte `protobuf:"bytes,5,opt,name=ack_cookie,json=ackCookie,proto3" json:"ack_cookie,omitempty"`  // "bytes_ack_cookie"
	Result    uint32 `protobuf:"varint,6,opt,name=result,proto3" json:"result,omitempty"`                        // "uint32_result"
	Flags     uint32 `protobuf:"varint,7,opt,name=flags,proto3" json:"flags,omitempty"`                          // "uint32_flags"
}

func (x *IMMessageHead_DeltaHead) Reset() {
	*x = IMMessageHead_DeltaHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageHead_DeltaHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageHead_DeltaHead) ProtoMessage() {}

func (x *IMMessageHead_DeltaHead) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageHead_DeltaHead.ProtoReflect.Descriptor instead.
func (*IMMessageHead_DeltaHead) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2, 2}
}

func (x *IMMessageHead_DeltaHead) GetTotalLen() uint64 {
	if x != nil {
		return x.TotalLen
	}
	return 0
}

func (x *IMMessageHead_DeltaHead) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *IMMessageHead_DeltaHead) GetAckOffset() uint64 {
	if x != nil {
		return x.AckOffset
	}
	return 0
}

func (x *IMMessageHead_DeltaHead) GetCookie() []byte {
	if x != nil {
		return x.Cookie
	}
	return nil
}

func (x *IMMessageHead_DeltaHead) GetAckCookie() []byte {
	if x != nil {
		return x.AckCookie
	}
	return nil
}

func (x *IMMessageHead_DeltaHead) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *IMMessageHead_DeltaHead) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

// Head
type IMMessageHead_Head struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeadType        uint32                      `protobuf:"varint,1,opt,name=head_type,json=headType,proto3" json:"head_type,omitempty"`                       // "uint32_head_type"
	MsgCsHead       *IMMessageHead_CSHead       `protobuf:"bytes,2,opt,name=msg_cs_head,json=msgCsHead,proto3" json:"msg_cs_head,omitempty"`                   // "msg_cs_head"
	MsgS2CHead      *IMMessageHead_S2CHead      `protobuf:"bytes,3,opt,name=msg_s2c_head,json=msgS2cHead,proto3" json:"msg_s2c_head,omitempty"`                // "msg_s2c_head"
	MsgHttpconnHead *IMMessageHead_HttpConnHead `protobuf:"bytes,4,opt,name=msg_httpconn_head,json=msgHttpconnHead,proto3" json:"msg_httpconn_head,omitempty"` // "msg_httpconn_head"
	PaintFlag       uint32                      `protobuf:"varint,5,opt,name=paint_flag,json=paintFlag,proto3" json:"paint_flag,omitempty"`                    // "uint32_paint_flag"
	MsgLoginSig     *IMMessageHead_LoginSig     `protobuf:"bytes,6,opt,name=msg_login_sig,json=msgLoginSig,proto3" json:"msg_login_sig,omitempty"`             // "msg_login_sig"
	MsgDeltaHead    *IMMessageHead_DeltaHead    `protobuf:"bytes,7,opt,name=msg_delta_head,json=msgDeltaHead,proto3" json:"msg_delta_head,omitempty"`          // "msg_delta_head"
	MsgC2CHead      *IMMessageHead_C2CHead      `protobuf:"bytes,8,opt,name=msg_c2c_head,json=msgC2cHead,proto3" json:"msg_c2c_head,omitempty"`                // "msg_c2c_head"
	MsgSconnHead    *IMMessageHead_SConnHead    `protobuf:"bytes,9,opt,name=msg_sconn_head,json=msgSconnHead,proto3" json:"msg_sconn_head,omitempty"`          // "msg_sconn_head"
	MsgInstCtrl     *IMMessageHead_InstCtrl     `protobuf:"bytes,10,opt,name=msg_inst_ctrl,json=msgInstCtrl,proto3" json:"msg_inst_ctrl,omitempty"`            // "msg_inst_ctrl"
}

func (x *IMMessageHead_Head) Reset() {
	*x = IMMessageHead_Head{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageHead_Head) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageHead_Head) ProtoMessage() {}

func (x *IMMessageHead_Head) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageHead_Head.ProtoReflect.Descriptor instead.
func (*IMMessageHead_Head) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2, 3}
}

func (x *IMMessageHead_Head) GetHeadType() uint32 {
	if x != nil {
		return x.HeadType
	}
	return 0
}

func (x *IMMessageHead_Head) GetMsgCsHead() *IMMessageHead_CSHead {
	if x != nil {
		return x.MsgCsHead
	}
	return nil
}

func (x *IMMessageHead_Head) GetMsgS2CHead() *IMMessageHead_S2CHead {
	if x != nil {
		return x.MsgS2CHead
	}
	return nil
}

func (x *IMMessageHead_Head) GetMsgHttpconnHead() *IMMessageHead_HttpConnHead {
	if x != nil {
		return x.MsgHttpconnHead
	}
	return nil
}

func (x *IMMessageHead_Head) GetPaintFlag() uint32 {
	if x != nil {
		return x.PaintFlag
	}
	return 0
}

func (x *IMMessageHead_Head) GetMsgLoginSig() *IMMessageHead_LoginSig {
	if x != nil {
		return x.MsgLoginSig
	}
	return nil
}

func (x *IMMessageHead_Head) GetMsgDeltaHead() *IMMessageHead_DeltaHead {
	if x != nil {
		return x.MsgDeltaHead
	}
	return nil
}

func (x *IMMessageHead_Head) GetMsgC2CHead() *IMMessageHead_C2CHead {
	if x != nil {
		return x.MsgC2CHead
	}
	return nil
}

func (x *IMMessageHead_Head) GetMsgSconnHead() *IMMessageHead_SConnHead {
	if x != nil {
		return x.MsgSconnHead
	}
	return nil
}

func (x *IMMessageHead_Head) GetMsgInstCtrl() *IMMessageHead_InstCtrl {
	if x != nil {
		return x.MsgInstCtrl
	}
	return nil
}

// HttpConnHead
type IMMessageHead_HttpConnHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin          uint64                       `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`                                        // "uint64_uin"
	Command      uint32                       `protobuf:"varint,2,opt,name=command,proto3" json:"command,omitempty"`                                // "uint32_command"
	SubCommand   uint32                       `protobuf:"varint,3,opt,name=sub_command,json=subCommand,proto3" json:"sub_command,omitempty"`        // "uint32_sub_command"
	Seq          uint32                       `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`                                        // "uint32_seq"
	Version      uint32                       `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`                                // "uint32_version"
	RetryTimes   uint32                       `protobuf:"varint,6,opt,name=retry_times,json=retryTimes,proto3" json:"retry_times,omitempty"`        // "uint32_retry_times"
	ClientType   uint32                       `protobuf:"varint,7,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`        // "uint32_client_type"
	PubNo        uint32                       `protobuf:"varint,8,opt,name=pub_no,json=pubNo,proto3" json:"pub_no,omitempty"`                       // "uint32_pub_no"
	LocalId      uint32                       `protobuf:"varint,9,opt,name=local_id,json=localId,proto3" json:"local_id,omitempty"`                 // "uint32_local_id"
	TimeZone     uint32                       `protobuf:"varint,10,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`             // "uint32_time_zone"
	ClientIp     uint32                       `protobuf:"fixed32,11,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`            // "uint32_client_ip"
	ClientPort   uint32                       `protobuf:"varint,12,opt,name=client_port,json=clientPort,proto3" json:"client_port,omitempty"`       // "uint32_client_port"
	QzhttpIp     uint32                       `protobuf:"fixed32,13,opt,name=qzhttp_ip,json=qzhttpIp,proto3" json:"qzhttp_ip,omitempty"`            // "uint32_qzhttp_ip"
	QzhttpPort   uint32                       `protobuf:"varint,14,opt,name=qzhttp_port,json=qzhttpPort,proto3" json:"qzhttp_port,omitempty"`       // "uint32_qzhttp_port"
	SppIp        uint32                       `protobuf:"fixed32,15,opt,name=spp_ip,json=sppIp,proto3" json:"spp_ip,omitempty"`                     // "uint32_spp_ip"
	SppPort      uint32                       `protobuf:"varint,16,opt,name=spp_port,json=sppPort,proto3" json:"spp_port,omitempty"`                // "uint32_spp_port"
	Flag         uint32                       `protobuf:"varint,17,opt,name=flag,proto3" json:"flag,omitempty"`                                     // "uint32_flag"
	Key          []byte                       `protobuf:"bytes,18,opt,name=key,proto3" json:"key,omitempty"`                                        // "bytes_key"
	CompressType uint32                       `protobuf:"varint,19,opt,name=compress_type,json=compressType,proto3" json:"compress_type,omitempty"` // "uint32_compress_type"
	OriginSize   uint32                       `protobuf:"varint,20,opt,name=origin_size,json=originSize,proto3" json:"origin_size,omitempty"`       // "uint32_origin_size"
	ErrorCode    uint32                       `protobuf:"varint,21,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`          // "uint32_error_code"
	MsgRedirect  *IMMessageHead_RedirectMsg   `protobuf:"bytes,22,opt,name=msg_redirect,json=msgRedirect,proto3" json:"msg_redirect,omitempty"`     // "msg_redirect"
	CommandId    uint32                       `protobuf:"varint,23,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`          // "uint32_command_id"
	ServiceCmdid uint32                       `protobuf:"varint,24,opt,name=service_cmdid,json=serviceCmdid,proto3" json:"service_cmdid,omitempty"` // "uint32_service_cmdid"
	MsgOidbhead  *IMMessageHead_TransOidbHead `protobuf:"bytes,25,opt,name=msg_oidbhead,json=msgOidbhead,proto3" json:"msg_oidbhead,omitempty"`     // "msg_oidbhead"
}

func (x *IMMessageHead_HttpConnHead) Reset() {
	*x = IMMessageHead_HttpConnHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageHead_HttpConnHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageHead_HttpConnHead) ProtoMessage() {}

func (x *IMMessageHead_HttpConnHead) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageHead_HttpConnHead.ProtoReflect.Descriptor instead.
func (*IMMessageHead_HttpConnHead) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2, 4}
}

func (x *IMMessageHead_HttpConnHead) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetCommand() uint32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetSubCommand() uint32 {
	if x != nil {
		return x.SubCommand
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetRetryTimes() uint32 {
	if x != nil {
		return x.RetryTimes
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetClientType() uint32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetPubNo() uint32 {
	if x != nil {
		return x.PubNo
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetLocalId() uint32 {
	if x != nil {
		return x.LocalId
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetTimeZone() uint32 {
	if x != nil {
		return x.TimeZone
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetClientIp() uint32 {
	if x != nil {
		return x.ClientIp
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetClientPort() uint32 {
	if x != nil {
		return x.ClientPort
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetQzhttpIp() uint32 {
	if x != nil {
		return x.QzhttpIp
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetQzhttpPort() uint32 {
	if x != nil {
		return x.QzhttpPort
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetSppIp() uint32 {
	if x != nil {
		return x.SppIp
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetSppPort() uint32 {
	if x != nil {
		return x.SppPort
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *IMMessageHead_HttpConnHead) GetCompressType() uint32 {
	if x != nil {
		return x.CompressType
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetOriginSize() uint32 {
	if x != nil {
		return x.OriginSize
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetMsgRedirect() *IMMessageHead_RedirectMsg {
	if x != nil {
		return x.MsgRedirect
	}
	return nil
}

func (x *IMMessageHead_HttpConnHead) GetCommandId() uint32 {
	if x != nil {
		return x.CommandId
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetServiceCmdid() uint32 {
	if x != nil {
		return x.ServiceCmdid
	}
	return 0
}

func (x *IMMessageHead_HttpConnHead) GetMsgOidbhead() *IMMessageHead_TransOidbHead {
	if x != nil {
		return x.MsgOidbhead
	}
	return nil
}

// InstCtrl
type IMMessageHead_InstCtrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgSendToInst  []*IMMessageHead_InstInfo `protobuf:"bytes,1,rep,name=msg_send_to_inst,json=msgSendToInst,proto3" json:"msg_send_to_inst,omitempty"`  // "rpt_msg_send_to_inst"
	MsgExcludeInst []*IMMessageHead_InstInfo `protobuf:"bytes,2,rep,name=msg_exclude_inst,json=msgExcludeInst,proto3" json:"msg_exclude_inst,omitempty"` // "rpt_msg_exclude_inst"
	MsgFromInst    *IMMessageHead_InstInfo   `protobuf:"bytes,3,opt,name=msg_from_inst,json=msgFromInst,proto3" json:"msg_from_inst,omitempty"`          // "msg_from_inst"
}

func (x *IMMessageHead_InstCtrl) Reset() {
	*x = IMMessageHead_InstCtrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageHead_InstCtrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageHead_InstCtrl) ProtoMessage() {}

func (x *IMMessageHead_InstCtrl) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageHead_InstCtrl.ProtoReflect.Descriptor instead.
func (*IMMessageHead_InstCtrl) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2, 5}
}

func (x *IMMessageHead_InstCtrl) GetMsgSendToInst() []*IMMessageHead_InstInfo {
	if x != nil {
		return x.MsgSendToInst
	}
	return nil
}

func (x *IMMessageHead_InstCtrl) GetMsgExcludeInst() []*IMMessageHead_InstInfo {
	if x != nil {
		return x.MsgExcludeInst
	}
	return nil
}

func (x *IMMessageHead_InstCtrl) GetMsgFromInst() *IMMessageHead_InstInfo {
	if x != nil {
		return x.MsgFromInst
	}
	return nil
}

// InstInfo
type IMMessageHead_InstInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apppid         uint32 `protobuf:"varint,1,opt,name=apppid,proto3" json:"apppid,omitempty"`                                          // "uint32_apppid"
	Instid         uint32 `protobuf:"varint,2,opt,name=instid,proto3" json:"instid,omitempty"`                                          // "uint32_instid"
	Platform       uint32 `protobuf:"varint,3,opt,name=platform,proto3" json:"platform,omitempty"`                                      // "uint32_platform"
	EnumDeviceType uint32 `protobuf:"varint,10,opt,name=enum_device_type,json=enumDeviceType,proto3" json:"enum_device_type,omitempty"` // "enum_device_type" Enum
}

func (x *IMMessageHead_InstInfo) Reset() {
	*x = IMMessageHead_InstInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageHead_InstInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageHead_InstInfo) ProtoMessage() {}

func (x *IMMessageHead_InstInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageHead_InstInfo.ProtoReflect.Descriptor instead.
func (*IMMessageHead_InstInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2, 6}
}

func (x *IMMessageHead_InstInfo) GetApppid() uint32 {
	if x != nil {
		return x.Apppid
	}
	return 0
}

func (x *IMMessageHead_InstInfo) GetInstid() uint32 {
	if x != nil {
		return x.Instid
	}
	return 0
}

func (x *IMMessageHead_InstInfo) GetPlatform() uint32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *IMMessageHead_InstInfo) GetEnumDeviceType() uint32 {
	if x != nil {
		return x.EnumDeviceType
	}
	return 0
}

// LoginSig
type IMMessageHead_LoginSig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"` // "uint32_type"
	Sig  []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`    // "bytes_sig"
}

func (x *IMMessageHead_LoginSig) Reset() {
	*x = IMMessageHead_LoginSig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageHead_LoginSig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageHead_LoginSig) ProtoMessage() {}

func (x *IMMessageHead_LoginSig) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageHead_LoginSig.ProtoReflect.Descriptor instead.
func (*IMMessageHead_LoginSig) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2, 7}
}

func (x *IMMessageHead_LoginSig) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *IMMessageHead_LoginSig) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

// RedirectMsg
type IMMessageHead_RedirectMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastRedirectIp   uint32 `protobuf:"fixed32,1,opt,name=last_redirect_ip,json=lastRedirectIp,proto3" json:"last_redirect_ip,omitempty"`      // "uint32_last_redirect_ip"
	LastRedirectPort uint32 `protobuf:"varint,2,opt,name=last_redirect_port,json=lastRedirectPort,proto3" json:"last_redirect_port,omitempty"` // "uint32_last_redirect_port"
	RedirectIp       uint32 `protobuf:"fixed32,3,opt,name=redirect_ip,json=redirectIp,proto3" json:"redirect_ip,omitempty"`                    // "uint32_redirect_ip"
	RedirectPort     uint32 `protobuf:"varint,4,opt,name=redirect_port,json=redirectPort,proto3" json:"redirect_port,omitempty"`               // "uint32_redirect_port"
	RedirectCount    uint32 `protobuf:"varint,5,opt,name=redirect_count,json=redirectCount,proto3" json:"redirect_count,omitempty"`            // "uint32_redirect_count"
}

func (x *IMMessageHead_RedirectMsg) Reset() {
	*x = IMMessageHead_RedirectMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageHead_RedirectMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageHead_RedirectMsg) ProtoMessage() {}

func (x *IMMessageHead_RedirectMsg) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageHead_RedirectMsg.ProtoReflect.Descriptor instead.
func (*IMMessageHead_RedirectMsg) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2, 8}
}

func (x *IMMessageHead_RedirectMsg) GetLastRedirectIp() uint32 {
	if x != nil {
		return x.LastRedirectIp
	}
	return 0
}

func (x *IMMessageHead_RedirectMsg) GetLastRedirectPort() uint32 {
	if x != nil {
		return x.LastRedirectPort
	}
	return 0
}

func (x *IMMessageHead_RedirectMsg) GetRedirectIp() uint32 {
	if x != nil {
		return x.RedirectIp
	}
	return 0
}

func (x *IMMessageHead_RedirectMsg) GetRedirectPort() uint32 {
	if x != nil {
		return x.RedirectPort
	}
	return 0
}

func (x *IMMessageHead_RedirectMsg) GetRedirectCount() uint32 {
	if x != nil {
		return x.RedirectCount
	}
	return 0
}

// S2CHead
type IMMessageHead_S2CHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubMsgtype uint32 `protobuf:"varint,1,opt,name=sub_msgtype,json=subMsgtype,proto3" json:"sub_msgtype,omitempty"` // "uint32_sub_msgtype"
	MsgType    uint32 `protobuf:"varint,2,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`          // "uint32_msg_type"
	FromUin    uint64 `protobuf:"varint,3,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`          // "uint64_from_uin"
	MsgId      uint32 `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`                // "uint32_msg_id"
	RelayIp    uint32 `protobuf:"fixed32,5,opt,name=relay_ip,json=relayIp,proto3" json:"relay_ip,omitempty"`         // "uint32_relay_ip"
	RelayPort  uint32 `protobuf:"varint,6,opt,name=relay_port,json=relayPort,proto3" json:"relay_port,omitempty"`    // "uint32_relay_port"
	ToUin      uint64 `protobuf:"varint,7,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`                // "uint64_to_uin"
}

func (x *IMMessageHead_S2CHead) Reset() {
	*x = IMMessageHead_S2CHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageHead_S2CHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageHead_S2CHead) ProtoMessage() {}

func (x *IMMessageHead_S2CHead) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageHead_S2CHead.ProtoReflect.Descriptor instead.
func (*IMMessageHead_S2CHead) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2, 9}
}

func (x *IMMessageHead_S2CHead) GetSubMsgtype() uint32 {
	if x != nil {
		return x.SubMsgtype
	}
	return 0
}

func (x *IMMessageHead_S2CHead) GetMsgType() uint32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *IMMessageHead_S2CHead) GetFromUin() uint64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *IMMessageHead_S2CHead) GetMsgId() uint32 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

func (x *IMMessageHead_S2CHead) GetRelayIp() uint32 {
	if x != nil {
		return x.RelayIp
	}
	return 0
}

func (x *IMMessageHead_S2CHead) GetRelayPort() uint32 {
	if x != nil {
		return x.RelayPort
	}
	return 0
}

func (x *IMMessageHead_S2CHead) GetToUin() uint64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

// SConnHead
type IMMessageHead_SConnHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IMMessageHead_SConnHead) Reset() {
	*x = IMMessageHead_SConnHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageHead_SConnHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageHead_SConnHead) ProtoMessage() {}

func (x *IMMessageHead_SConnHead) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageHead_SConnHead.ProtoReflect.Descriptor instead.
func (*IMMessageHead_SConnHead) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2, 10}
}

// TransOidbHead
type IMMessageHead_TransOidbHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command     uint32 `protobuf:"varint,1,opt,name=command,proto3" json:"command,omitempty"`                            // "uint32_command"
	ServiceType uint32 `protobuf:"varint,2,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"` // "uint32_service_type"
	Result      uint32 `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`                              // "uint32_result"
	ErrorMsg    string `protobuf:"bytes,4,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`           // "str_error_msg"
}

func (x *IMMessageHead_TransOidbHead) Reset() {
	*x = IMMessageHead_TransOidbHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageHead_TransOidbHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageHead_TransOidbHead) ProtoMessage() {}

func (x *IMMessageHead_TransOidbHead) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageHead_TransOidbHead.ProtoReflect.Descriptor instead.
func (*IMMessageHead_TransOidbHead) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2, 11}
}

func (x *IMMessageHead_TransOidbHead) GetCommand() uint32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *IMMessageHead_TransOidbHead) GetServiceType() uint32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *IMMessageHead_TransOidbHead) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *IMMessageHead_TransOidbHead) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

// MsgInfo
type IMReceipt_MessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUin       int64 `protobuf:"varint,1,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`                   // "uint64_from_uin"
	ToUin         int64 `protobuf:"varint,2,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`                         // "uint64_to_uin"
	MessageSeq    int32 `protobuf:"varint,3,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`          // "uint32_msg_seq"
	MessageRandom int32 `protobuf:"varint,4,opt,name=message_random,json=messageRandom,proto3" json:"message_random,omitempty"` // "uint32_msg_random"
}

func (x *IMReceipt_MessageInfo) Reset() {
	*x = IMReceipt_MessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMReceipt_MessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMReceipt_MessageInfo) ProtoMessage() {}

func (x *IMReceipt_MessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMReceipt_MessageInfo.ProtoReflect.Descriptor instead.
func (*IMReceipt_MessageInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3, 0}
}

func (x *IMReceipt_MessageInfo) GetFromUin() int64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *IMReceipt_MessageInfo) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *IMReceipt_MessageInfo) GetMessageSeq() int32 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

func (x *IMReceipt_MessageInfo) GetMessageRandom() int32 {
	if x != nil {
		return x.MessageRandom
	}
	return 0
}

// ReceiptInfo
type IMReceipt_ReceiptInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadTime int64 `protobuf:"varint,1,opt,name=read_time,json=readTime,proto3" json:"read_time,omitempty"` // "uint64_read_time"
}

func (x *IMReceipt_ReceiptInfo) Reset() {
	*x = IMReceipt_ReceiptInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMReceipt_ReceiptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMReceipt_ReceiptInfo) ProtoMessage() {}

func (x *IMReceipt_ReceiptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMReceipt_ReceiptInfo.ProtoReflect.Descriptor instead.
func (*IMReceipt_ReceiptInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3, 1}
}

func (x *IMReceipt_ReceiptInfo) GetReadTime() int64 {
	if x != nil {
		return x.ReadTime
	}
	return 0
}

// ReceiptReq
type IMReceipt_ReceiptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command     int32                  `protobuf:"varint,1,opt,name=command,proto3" json:"command,omitempty"`                           // "command" Enum
	MessageInfo *IMReceipt_MessageInfo `protobuf:"bytes,2,opt,name=message_info,json=messageInfo,proto3" json:"message_info,omitempty"` // "msg_info"
}

func (x *IMReceipt_ReceiptRequest) Reset() {
	*x = IMReceipt_ReceiptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMReceipt_ReceiptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMReceipt_ReceiptRequest) ProtoMessage() {}

func (x *IMReceipt_ReceiptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMReceipt_ReceiptRequest.ProtoReflect.Descriptor instead.
func (*IMReceipt_ReceiptRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3, 2}
}

func (x *IMReceipt_ReceiptRequest) GetCommand() int32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *IMReceipt_ReceiptRequest) GetMessageInfo() *IMReceipt_MessageInfo {
	if x != nil {
		return x.MessageInfo
	}
	return nil
}

// ReceiptResp
type IMReceipt_ReceiptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command     int32                  `protobuf:"varint,1,opt,name=command,proto3" json:"command,omitempty"`                           // "command" Enum
	ReceiptInfo *IMReceipt_ReceiptInfo `protobuf:"bytes,2,opt,name=receipt_info,json=receiptInfo,proto3" json:"receipt_info,omitempty"` // "receipt_info"
}

func (x *IMReceipt_ReceiptResponse) Reset() {
	*x = IMReceipt_ReceiptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMReceipt_ReceiptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMReceipt_ReceiptResponse) ProtoMessage() {}

func (x *IMReceipt_ReceiptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMReceipt_ReceiptResponse.ProtoReflect.Descriptor instead.
func (*IMReceipt_ReceiptResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3, 3}
}

func (x *IMReceipt_ReceiptResponse) GetCommand() int32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *IMReceipt_ReceiptResponse) GetReceiptInfo() *IMReceipt_ReceiptInfo {
	if x != nil {
		return x.ReceiptInfo
	}
	return nil
}

// AppShareInfo
type MessageCommon_AppShareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            // "appshare_id"
	Cookie   []byte                    `protobuf:"bytes,2,opt,name=cookie,proto3" json:"cookie,omitempty"`     // "appshare_cookie"
	Resource *MessageCommon_PluginInfo `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"` // "appshare_resource"
}

func (x *MessageCommon_AppShareInfo) Reset() {
	*x = MessageCommon_AppShareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCommon_AppShareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCommon_AppShareInfo) ProtoMessage() {}

func (x *MessageCommon_AppShareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCommon_AppShareInfo.ProtoReflect.Descriptor instead.
func (*MessageCommon_AppShareInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4, 0}
}

func (x *MessageCommon_AppShareInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MessageCommon_AppShareInfo) GetCookie() []byte {
	if x != nil {
		return x.Cookie
	}
	return nil
}

func (x *MessageCommon_AppShareInfo) GetResource() *MessageCommon_PluginInfo {
	if x != nil {
		return x.Resource
	}
	return nil
}

// C2CTmpMsgHead
type MessageCommon_C2CTempMessageHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	C2CType            int32  `protobuf:"varint,1,opt,name=c2c_type,json=c2cType,proto3" json:"c2c_type,omitempty"`                                    // "c2c_type"
	ServiceType        int32  `protobuf:"varint,2,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`                        // "service_type"
	GroupUin           int64  `protobuf:"varint,3,opt,name=group_uin,json=groupUin,proto3" json:"group_uin,omitempty"`                                 // "group_uin"
	GroupCode          int64  `protobuf:"varint,4,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`                              // "group_code"
	Sig                []byte `protobuf:"bytes,5,opt,name=sig,proto3" json:"sig,omitempty"`                                                            // "sig"
	SigType            int32  `protobuf:"varint,6,opt,name=sig_type,json=sigType,proto3" json:"sig_type,omitempty"`                                    // "sig_type"
	FromPhone          string `protobuf:"bytes,7,opt,name=from_phone,json=fromPhone,proto3" json:"from_phone,omitempty"`                               // "from_phone"
	ToPhone            string `protobuf:"bytes,8,opt,name=to_phone,json=toPhone,proto3" json:"to_phone,omitempty"`                                     // "to_phone"
	LockDisplay        int32  `protobuf:"varint,9,opt,name=lock_display,json=lockDisplay,proto3" json:"lock_display,omitempty"`                        // "lock_display"
	DirectionFlag      uint32 `protobuf:"varint,10,opt,name=direction_flag,json=directionFlag,proto3" json:"direction_flag,omitempty"`                 // "direction_flag"
	Reserved           []byte `protobuf:"bytes,11,opt,name=reserved,proto3" json:"reserved,omitempty"`                                                 // "reserved"
	BusinessName       []byte `protobuf:"bytes,14,opt,name=business_name,json=businessName,proto3" json:"business_name,omitempty"`                     // "business_name"
	BusinessSubContent []byte `protobuf:"bytes,15,opt,name=business_sub_content,json=businessSubContent,proto3" json:"business_sub_content,omitempty"` // "business_sub_content"
}

func (x *MessageCommon_C2CTempMessageHead) Reset() {
	*x = MessageCommon_C2CTempMessageHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCommon_C2CTempMessageHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCommon_C2CTempMessageHead) ProtoMessage() {}

func (x *MessageCommon_C2CTempMessageHead) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCommon_C2CTempMessageHead.ProtoReflect.Descriptor instead.
func (*MessageCommon_C2CTempMessageHead) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4, 1}
}

func (x *MessageCommon_C2CTempMessageHead) GetC2CType() int32 {
	if x != nil {
		return x.C2CType
	}
	return 0
}

func (x *MessageCommon_C2CTempMessageHead) GetServiceType() int32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *MessageCommon_C2CTempMessageHead) GetGroupUin() int64 {
	if x != nil {
		return x.GroupUin
	}
	return 0
}

func (x *MessageCommon_C2CTempMessageHead) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *MessageCommon_C2CTempMessageHead) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *MessageCommon_C2CTempMessageHead) GetSigType() int32 {
	if x != nil {
		return x.SigType
	}
	return 0
}

func (x *MessageCommon_C2CTempMessageHead) GetFromPhone() string {
	if x != nil {
		return x.FromPhone
	}
	return ""
}

func (x *MessageCommon_C2CTempMessageHead) GetToPhone() string {
	if x != nil {
		return x.ToPhone
	}
	return ""
}

func (x *MessageCommon_C2CTempMessageHead) GetLockDisplay() int32 {
	if x != nil {
		return x.LockDisplay
	}
	return 0
}

func (x *MessageCommon_C2CTempMessageHead) GetDirectionFlag() uint32 {
	if x != nil {
		return x.DirectionFlag
	}
	return 0
}

func (x *MessageCommon_C2CTempMessageHead) GetReserved() []byte {
	if x != nil {
		return x.Reserved
	}
	return nil
}

func (x *MessageCommon_C2CTempMessageHead) GetBusinessName() []byte {
	if x != nil {
		return x.BusinessName
	}
	return nil
}

func (x *MessageCommon_C2CTempMessageHead) GetBusinessSubContent() []byte {
	if x != nil {
		return x.BusinessSubContent
	}
	return nil
}

// ContentHead
type MessageCommon_ContentHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageNum   int32 `protobuf:"varint,1,opt,name=package_num,json=packageNum,proto3" json:"package_num,omitempty"`       // "pkg_num"
	PackageIndex int32 `protobuf:"varint,2,opt,name=package_index,json=packageIndex,proto3" json:"package_index,omitempty"` // "pkg_index"
	DivSeq       int32 `protobuf:"varint,3,opt,name=div_seq,json=divSeq,proto3" json:"div_seq,omitempty"`                   // "div_seq"
	AutoReply    int32 `protobuf:"varint,4,opt,name=auto_reply,json=autoReply,proto3" json:"auto_reply,omitempty"`          // "auto_reply"
}

func (x *MessageCommon_ContentHead) Reset() {
	*x = MessageCommon_ContentHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCommon_ContentHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCommon_ContentHead) ProtoMessage() {}

func (x *MessageCommon_ContentHead) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCommon_ContentHead.ProtoReflect.Descriptor instead.
func (*MessageCommon_ContentHead) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4, 2}
}

func (x *MessageCommon_ContentHead) GetPackageNum() int32 {
	if x != nil {
		return x.PackageNum
	}
	return 0
}

func (x *MessageCommon_ContentHead) GetPackageIndex() int32 {
	if x != nil {
		return x.PackageIndex
	}
	return 0
}

func (x *MessageCommon_ContentHead) GetDivSeq() int32 {
	if x != nil {
		return x.DivSeq
	}
	return 0
}

func (x *MessageCommon_ContentHead) GetAutoReply() int32 {
	if x != nil {
		return x.AutoReply
	}
	return 0
}

// DiscussInfo
type MessageCommon_DiscussInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscussUin     int64  `protobuf:"varint,1,opt,name=discuss_uin,json=discussUin,proto3" json:"discuss_uin,omitempty"`               // "discuss_uin"
	DiscussType    int32  `protobuf:"varint,2,opt,name=discuss_type,json=discussType,proto3" json:"discuss_type,omitempty"`            // "discuss_type"
	DiscussInfoSeq int64  `protobuf:"varint,3,opt,name=discuss_info_seq,json=discussInfoSeq,proto3" json:"discuss_info_seq,omitempty"` // "discuss_info_seq"
	DiscussRemark  []byte `protobuf:"bytes,4,opt,name=discuss_remark,json=discussRemark,proto3" json:"discuss_remark,omitempty"`       // "discuss_remark"
	DiscussName    []byte `protobuf:"bytes,5,opt,name=discuss_name,json=discussName,proto3" json:"discuss_name,omitempty"`             // "discuss_name"
}

func (x *MessageCommon_DiscussInfo) Reset() {
	*x = MessageCommon_DiscussInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCommon_DiscussInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCommon_DiscussInfo) ProtoMessage() {}

func (x *MessageCommon_DiscussInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCommon_DiscussInfo.ProtoReflect.Descriptor instead.
func (*MessageCommon_DiscussInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4, 3}
}

func (x *MessageCommon_DiscussInfo) GetDiscussUin() int64 {
	if x != nil {
		return x.DiscussUin
	}
	return 0
}

func (x *MessageCommon_DiscussInfo) GetDiscussType() int32 {
	if x != nil {
		return x.DiscussType
	}
	return 0
}

func (x *MessageCommon_DiscussInfo) GetDiscussInfoSeq() int64 {
	if x != nil {
		return x.DiscussInfoSeq
	}
	return 0
}

func (x *MessageCommon_DiscussInfo) GetDiscussRemark() []byte {
	if x != nil {
		return x.DiscussRemark
	}
	return nil
}

func (x *MessageCommon_DiscussInfo) GetDiscussName() []byte {
	if x != nil {
		return x.DiscussName
	}
	return nil
}

// ExtGroupKeyInfo
type MessageCommon_ExtraGroupKeyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentMaxSeq    int32  `protobuf:"varint,1,opt,name=current_max_seq,json=currentMaxSeq,proto3" json:"current_max_seq,omitempty"`          // "cur_max_seq"
	CurrentTime      int64  `protobuf:"varint,2,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`                  // "cur_time"
	OperateByParents int32  `protobuf:"varint,3,opt,name=operate_by_parents,json=operateByParents,proto3" json:"operate_by_parents,omitempty"` // "operate_by_parents"
	ExtraGroupInfo   []byte `protobuf:"bytes,4,opt,name=extra_group_info,json=extraGroupInfo,proto3" json:"extra_group_info,omitempty"`        // "bytes_ext_group_info"
}

func (x *MessageCommon_ExtraGroupKeyInfo) Reset() {
	*x = MessageCommon_ExtraGroupKeyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCommon_ExtraGroupKeyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCommon_ExtraGroupKeyInfo) ProtoMessage() {}

func (x *MessageCommon_ExtraGroupKeyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCommon_ExtraGroupKeyInfo.ProtoReflect.Descriptor instead.
func (*MessageCommon_ExtraGroupKeyInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4, 4}
}

func (x *MessageCommon_ExtraGroupKeyInfo) GetCurrentMaxSeq() int32 {
	if x != nil {
		return x.CurrentMaxSeq
	}
	return 0
}

func (x *MessageCommon_ExtraGroupKeyInfo) GetCurrentTime() int64 {
	if x != nil {
		return x.CurrentTime
	}
	return 0
}

func (x *MessageCommon_ExtraGroupKeyInfo) GetOperateByParents() int32 {
	if x != nil {
		return x.OperateByParents
	}
	return 0
}

func (x *MessageCommon_ExtraGroupKeyInfo) GetExtraGroupInfo() []byte {
	if x != nil {
		return x.ExtraGroupInfo
	}
	return nil
}

// GroupInfo
type MessageCommon_GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode     int64  `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`               // "group_code"
	GroupType     int32  `protobuf:"varint,2,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"`               // "group_type"
	GroupInfoSeq  int64  `protobuf:"varint,3,opt,name=group_info_seq,json=groupInfoSeq,proto3" json:"group_info_seq,omitempty"`    // "group_info_seq"
	GroupCard     []byte `protobuf:"bytes,4,opt,name=group_card,json=groupCard,proto3" json:"group_card,omitempty"`                // "group_card"
	GroupRank     []byte `protobuf:"bytes,5,opt,name=group_rank,json=groupRank,proto3" json:"group_rank,omitempty"`                // "group_rank"
	GroupLevel    int32  `protobuf:"varint,6,opt,name=group_level,json=groupLevel,proto3" json:"group_level,omitempty"`            // "group_level"
	GroupCardType int32  `protobuf:"varint,7,opt,name=group_card_type,json=groupCardType,proto3" json:"group_card_type,omitempty"` // "group_card_type"
	GroupName     []byte `protobuf:"bytes,8,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`                // "group_name"
}

func (x *MessageCommon_GroupInfo) Reset() {
	*x = MessageCommon_GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCommon_GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCommon_GroupInfo) ProtoMessage() {}

func (x *MessageCommon_GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCommon_GroupInfo.ProtoReflect.Descriptor instead.
func (*MessageCommon_GroupInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4, 5}
}

func (x *MessageCommon_GroupInfo) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *MessageCommon_GroupInfo) GetGroupType() int32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

func (x *MessageCommon_GroupInfo) GetGroupInfoSeq() int64 {
	if x != nil {
		return x.GroupInfoSeq
	}
	return 0
}

func (x *MessageCommon_GroupInfo) GetGroupCard() []byte {
	if x != nil {
		return x.GroupCard
	}
	return nil
}

func (x *MessageCommon_GroupInfo) GetGroupRank() []byte {
	if x != nil {
		return x.GroupRank
	}
	return nil
}

func (x *MessageCommon_GroupInfo) GetGroupLevel() int32 {
	if x != nil {
		return x.GroupLevel
	}
	return 0
}

func (x *MessageCommon_GroupInfo) GetGroupCardType() int32 {
	if x != nil {
		return x.GroupCardType
	}
	return 0
}

func (x *MessageCommon_GroupInfo) GetGroupName() []byte {
	if x != nil {
		return x.GroupName
	}
	return nil
}

// Msg
type MessageCommon_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageHead  *MessageCommon_MessageHead  `protobuf:"bytes,1,opt,name=message_head,json=messageHead,proto3" json:"message_head,omitempty"`      // "msg_head"
	ContentHead  *MessageCommon_ContentHead  `protobuf:"bytes,2,opt,name=content_head,json=contentHead,proto3" json:"content_head,omitempty"`      // "content_head"
	MessageBody  *IMMessageBody_MessageBody  `protobuf:"bytes,3,opt,name=message_body,json=messageBody,proto3" json:"message_body,omitempty"`      // "msg_body"
	AppShareInfo *MessageCommon_AppShareInfo `protobuf:"bytes,4,opt,name=app_share_info,json=appShareInfo,proto3" json:"app_share_info,omitempty"` // "appshare_info"
}

func (x *MessageCommon_Message) Reset() {
	*x = MessageCommon_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCommon_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCommon_Message) ProtoMessage() {}

func (x *MessageCommon_Message) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCommon_Message.ProtoReflect.Descriptor instead.
func (*MessageCommon_Message) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4, 6}
}

func (x *MessageCommon_Message) GetMessageHead() *MessageCommon_MessageHead {
	if x != nil {
		return x.MessageHead
	}
	return nil
}

func (x *MessageCommon_Message) GetContentHead() *MessageCommon_ContentHead {
	if x != nil {
		return x.ContentHead
	}
	return nil
}

func (x *MessageCommon_Message) GetMessageBody() *IMMessageBody_MessageBody {
	if x != nil {
		return x.MessageBody
	}
	return nil
}

func (x *MessageCommon_Message) GetAppShareInfo() *MessageCommon_AppShareInfo {
	if x != nil {
		return x.AppShareInfo
	}
	return nil
}

// MsgHead
type MessageCommon_MessageHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUin                    int64                             `protobuf:"varint,1,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`                                                                 // "from_uin"
	ToUin                      int64                             `protobuf:"varint,2,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`                                                                       // "to_uin"
	MessageType                int32                             `protobuf:"varint,3,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`                                                     // "msg_type"
	C2CCmd                     uint32                            `protobuf:"varint,4,opt,name=c2c_cmd,json=c2cCmd,proto3" json:"c2c_cmd,omitempty"`                                                                    // "c2c_cmd"
	MessageSeq                 int32                             `protobuf:"varint,5,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`                                                        // "msg_seq"
	MessageTime                int64                             `protobuf:"varint,6,opt,name=message_time,json=messageTime,proto3" json:"message_time,omitempty"`                                                     // "msg_time"
	MessageUid                 int64                             `protobuf:"varint,7,opt,name=message_uid,json=messageUid,proto3" json:"message_uid,omitempty"`                                                        // "msg_uid"
	C2CTempMessageHead         *MessageCommon_C2CTempMessageHead `protobuf:"bytes,8,opt,name=c2c_temp_message_head,json=c2cTempMessageHead,proto3" json:"c2c_temp_message_head,omitempty"`                             // "c2c_tmp_msg_head"
	GroupInfo                  *MessageCommon_GroupInfo          `protobuf:"bytes,9,opt,name=group_info,json=groupInfo,proto3" json:"group_info,omitempty"`                                                            // "group_info"
	FromAppid                  uint32                            `protobuf:"varint,10,opt,name=from_appid,json=fromAppid,proto3" json:"from_appid,omitempty"`                                                          // "from_appid"
	FromInstid                 uint32                            `protobuf:"varint,11,opt,name=from_instid,json=fromInstid,proto3" json:"from_instid,omitempty"`                                                       // "from_instid"
	UserActive                 uint32                            `protobuf:"varint,12,opt,name=user_active,json=userActive,proto3" json:"user_active,omitempty"`                                                       // "user_active"
	DiscussInfo                *MessageCommon_DiscussInfo        `protobuf:"bytes,13,opt,name=discuss_info,json=discussInfo,proto3" json:"discuss_info,omitempty"`                                                     // "discuss_info"
	FromNick                   string                            `protobuf:"bytes,14,opt,name=from_nick,json=fromNick,proto3" json:"from_nick,omitempty"`                                                              // "from_nick"
	AuthUin                    uint64                            `protobuf:"varint,15,opt,name=auth_uin,json=authUin,proto3" json:"auth_uin,omitempty"`                                                                // "auth_uin"
	AuthNick                   string                            `protobuf:"bytes,16,opt,name=auth_nick,json=authNick,proto3" json:"auth_nick,omitempty"`                                                              // "auth_nick"
	MessageFlag                uint32                            `protobuf:"varint,17,opt,name=message_flag,json=messageFlag,proto3" json:"message_flag,omitempty"`                                                    // "msg_flag"
	AuthRemark                 string                            `protobuf:"bytes,18,opt,name=auth_remark,json=authRemark,proto3" json:"auth_remark,omitempty"`                                                        // "auth_remark"
	GroupName                  string                            `protobuf:"bytes,19,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`                                                           // "group_name"
	MutilTransHead             *MessageCommon_MutilTransportHead `protobuf:"bytes,20,opt,name=mutil_trans_head,json=mutilTransHead,proto3" json:"mutil_trans_head,omitempty"`                                          // "mutiltrans_head"
	MessageInstCtrl            *IMMessageHead_InstCtrl           `protobuf:"bytes,21,opt,name=message_inst_ctrl,json=messageInstCtrl,proto3" json:"message_inst_ctrl,omitempty"`                                       // "msg_inst_ctrl"
	PublicAccountGroupSendFlag uint32                            `protobuf:"varint,22,opt,name=public_account_group_send_flag,json=publicAccountGroupSendFlag,proto3" json:"public_account_group_send_flag,omitempty"` // "public_account_group_send_flag"
	WseqInC2CMsghead           uint32                            `protobuf:"varint,23,opt,name=wseq_in_c2c_msghead,json=wseqInC2cMsghead,proto3" json:"wseq_in_c2c_msghead,omitempty"`                                 // "wseq_in_c2c_msghead"
	Cpid                       uint64                            `protobuf:"varint,24,opt,name=cpid,proto3" json:"cpid,omitempty"`                                                                                     // "cpid"
	ExtGroupKeyInfo            *MessageCommon_ExtraGroupKeyInfo  `protobuf:"bytes,25,opt,name=ext_group_key_info,json=extGroupKeyInfo,proto3" json:"ext_group_key_info,omitempty"`                                     // "ext_group_key_info"
	MultiCompatibleText        string                            `protobuf:"bytes,26,opt,name=multi_compatible_text,json=multiCompatibleText,proto3" json:"multi_compatible_text,omitempty"`                           // "multi_compatible_text"
	AuthSex                    uint32                            `protobuf:"varint,27,opt,name=auth_sex,json=authSex,proto3" json:"auth_sex,omitempty"`                                                                // "auth_sex"
	IsSrcMessage               bool                              `protobuf:"varint,28,opt,name=is_src_message,json=isSrcMessage,proto3" json:"is_src_message,omitempty"`                                               // "is_src_msg"
}

func (x *MessageCommon_MessageHead) Reset() {
	*x = MessageCommon_MessageHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCommon_MessageHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCommon_MessageHead) ProtoMessage() {}

func (x *MessageCommon_MessageHead) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCommon_MessageHead.ProtoReflect.Descriptor instead.
func (*MessageCommon_MessageHead) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4, 7}
}

func (x *MessageCommon_MessageHead) GetFromUin() int64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *MessageCommon_MessageHead) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageCommon_MessageHead) GetMessageType() int32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *MessageCommon_MessageHead) GetC2CCmd() uint32 {
	if x != nil {
		return x.C2CCmd
	}
	return 0
}

func (x *MessageCommon_MessageHead) GetMessageSeq() int32 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

func (x *MessageCommon_MessageHead) GetMessageTime() int64 {
	if x != nil {
		return x.MessageTime
	}
	return 0
}

func (x *MessageCommon_MessageHead) GetMessageUid() int64 {
	if x != nil {
		return x.MessageUid
	}
	return 0
}

func (x *MessageCommon_MessageHead) GetC2CTempMessageHead() *MessageCommon_C2CTempMessageHead {
	if x != nil {
		return x.C2CTempMessageHead
	}
	return nil
}

func (x *MessageCommon_MessageHead) GetGroupInfo() *MessageCommon_GroupInfo {
	if x != nil {
		return x.GroupInfo
	}
	return nil
}

func (x *MessageCommon_MessageHead) GetFromAppid() uint32 {
	if x != nil {
		return x.FromAppid
	}
	return 0
}

func (x *MessageCommon_MessageHead) GetFromInstid() uint32 {
	if x != nil {
		return x.FromInstid
	}
	return 0
}

func (x *MessageCommon_MessageHead) GetUserActive() uint32 {
	if x != nil {
		return x.UserActive
	}
	return 0
}

func (x *MessageCommon_MessageHead) GetDiscussInfo() *MessageCommon_DiscussInfo {
	if x != nil {
		return x.DiscussInfo
	}
	return nil
}

func (x *MessageCommon_MessageHead) GetFromNick() string {
	if x != nil {
		return x.FromNick
	}
	return ""
}

func (x *MessageCommon_MessageHead) GetAuthUin() uint64 {
	if x != nil {
		return x.AuthUin
	}
	return 0
}

func (x *MessageCommon_MessageHead) GetAuthNick() string {
	if x != nil {
		return x.AuthNick
	}
	return ""
}

func (x *MessageCommon_MessageHead) GetMessageFlag() uint32 {
	if x != nil {
		return x.MessageFlag
	}
	return 0
}

func (x *MessageCommon_MessageHead) GetAuthRemark() string {
	if x != nil {
		return x.AuthRemark
	}
	return ""
}

func (x *MessageCommon_MessageHead) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *MessageCommon_MessageHead) GetMutilTransHead() *MessageCommon_MutilTransportHead {
	if x != nil {
		return x.MutilTransHead
	}
	return nil
}

func (x *MessageCommon_MessageHead) GetMessageInstCtrl() *IMMessageHead_InstCtrl {
	if x != nil {
		return x.MessageInstCtrl
	}
	return nil
}

func (x *MessageCommon_MessageHead) GetPublicAccountGroupSendFlag() uint32 {
	if x != nil {
		return x.PublicAccountGroupSendFlag
	}
	return 0
}

func (x *MessageCommon_MessageHead) GetWseqInC2CMsghead() uint32 {
	if x != nil {
		return x.WseqInC2CMsghead
	}
	return 0
}

func (x *MessageCommon_MessageHead) GetCpid() uint64 {
	if x != nil {
		return x.Cpid
	}
	return 0
}

func (x *MessageCommon_MessageHead) GetExtGroupKeyInfo() *MessageCommon_ExtraGroupKeyInfo {
	if x != nil {
		return x.ExtGroupKeyInfo
	}
	return nil
}

func (x *MessageCommon_MessageHead) GetMultiCompatibleText() string {
	if x != nil {
		return x.MultiCompatibleText
	}
	return ""
}

func (x *MessageCommon_MessageHead) GetAuthSex() uint32 {
	if x != nil {
		return x.AuthSex
	}
	return 0
}

func (x *MessageCommon_MessageHead) GetIsSrcMessage() bool {
	if x != nil {
		return x.IsSrcMessage
	}
	return false
}

// MsgType0x210
type MessageCommon_MessageType0210 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubType uint32 `protobuf:"varint,1,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"` // "sub_msg_type"
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`                 // "msg_content"
}

func (x *MessageCommon_MessageType0210) Reset() {
	*x = MessageCommon_MessageType0210{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCommon_MessageType0210) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCommon_MessageType0210) ProtoMessage() {}

func (x *MessageCommon_MessageType0210) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCommon_MessageType0210.ProtoReflect.Descriptor instead.
func (*MessageCommon_MessageType0210) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4, 8}
}

func (x *MessageCommon_MessageType0210) GetSubType() uint32 {
	if x != nil {
		return x.SubType
	}
	return 0
}

func (x *MessageCommon_MessageType0210) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

// MutilTransHead
type MessageCommon_MutilTransportHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    uint32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                        // "status"
	MessageId uint32 `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // "msgId"
}

func (x *MessageCommon_MutilTransportHead) Reset() {
	*x = MessageCommon_MutilTransportHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCommon_MutilTransportHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCommon_MutilTransportHead) ProtoMessage() {}

func (x *MessageCommon_MutilTransportHead) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCommon_MutilTransportHead.ProtoReflect.Descriptor instead.
func (*MessageCommon_MutilTransportHead) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4, 9}
}

func (x *MessageCommon_MutilTransportHead) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MessageCommon_MutilTransportHead) GetMessageId() uint32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

// PluginInfo
type MessageCommon_PluginInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId       uint32 `protobuf:"varint,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`                     // "res_id"
	PackageName      string `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`                   // "pkg_name"
	NewVersion       uint32 `protobuf:"varint,3,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`                     // "new_ver"
	ResourceType     uint32 `protobuf:"varint,4,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`               // "res_type"
	LanType          uint32 `protobuf:"varint,5,opt,name=lan_type,json=lanType,proto3" json:"lan_type,omitempty"`                              // "lan_type"
	Priority         uint32 `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`                                           // "priority"
	ResourceName     string `protobuf:"bytes,7,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`                // "res_name"
	ResourceDesc     string `protobuf:"bytes,8,opt,name=resource_desc,json=resourceDesc,proto3" json:"resource_desc,omitempty"`                // "res_desc"
	ResourceUrlBig   string `protobuf:"bytes,9,opt,name=resource_url_big,json=resourceUrlBig,proto3" json:"resource_url_big,omitempty"`        // "res_url_big"
	ResourceUrlSmall string `protobuf:"bytes,10,opt,name=resource_url_small,json=resourceUrlSmall,proto3" json:"resource_url_small,omitempty"` // "res_url_small"
	ResourceConfig   string `protobuf:"bytes,11,opt,name=resource_config,json=resourceConfig,proto3" json:"resource_config,omitempty"`         // "res_conf"
}

func (x *MessageCommon_PluginInfo) Reset() {
	*x = MessageCommon_PluginInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCommon_PluginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCommon_PluginInfo) ProtoMessage() {}

func (x *MessageCommon_PluginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCommon_PluginInfo.ProtoReflect.Descriptor instead.
func (*MessageCommon_PluginInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4, 10}
}

func (x *MessageCommon_PluginInfo) GetResourceId() uint32 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *MessageCommon_PluginInfo) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *MessageCommon_PluginInfo) GetNewVersion() uint32 {
	if x != nil {
		return x.NewVersion
	}
	return 0
}

func (x *MessageCommon_PluginInfo) GetResourceType() uint32 {
	if x != nil {
		return x.ResourceType
	}
	return 0
}

func (x *MessageCommon_PluginInfo) GetLanType() uint32 {
	if x != nil {
		return x.LanType
	}
	return 0
}

func (x *MessageCommon_PluginInfo) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *MessageCommon_PluginInfo) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *MessageCommon_PluginInfo) GetResourceDesc() string {
	if x != nil {
		return x.ResourceDesc
	}
	return ""
}

func (x *MessageCommon_PluginInfo) GetResourceUrlBig() string {
	if x != nil {
		return x.ResourceUrlBig
	}
	return ""
}

func (x *MessageCommon_PluginInfo) GetResourceUrlSmall() string {
	if x != nil {
		return x.ResourceUrlSmall
	}
	return ""
}

func (x *MessageCommon_PluginInfo) GetResourceConfig() string {
	if x != nil {
		return x.ResourceConfig
	}
	return ""
}

// Uin2Nick
type MessageCommon_Uin2Nick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin  uint64 `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`  // "uint64_uin"
	Nick string `protobuf:"bytes,2,opt,name=nick,proto3" json:"nick,omitempty"` // "str_nick"
}

func (x *MessageCommon_Uin2Nick) Reset() {
	*x = MessageCommon_Uin2Nick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCommon_Uin2Nick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCommon_Uin2Nick) ProtoMessage() {}

func (x *MessageCommon_Uin2Nick) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCommon_Uin2Nick.ProtoReflect.Descriptor instead.
func (*MessageCommon_Uin2Nick) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4, 11}
}

func (x *MessageCommon_Uin2Nick) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MessageCommon_Uin2Nick) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

// UinPairMsg
type MessageCommon_UinPairMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastReadTime        int64                    `protobuf:"varint,1,opt,name=last_read_time,json=lastReadTime,proto3" json:"last_read_time,omitempty"`                      // "last_read_time"
	PeerUin             int64                    `protobuf:"varint,2,opt,name=peer_uin,json=peerUin,proto3" json:"peer_uin,omitempty"`                                       // "peer_uin"
	MessageCompleted    int32                    `protobuf:"varint,3,opt,name=message_completed,json=messageCompleted,proto3" json:"message_completed,omitempty"`            // "msg_completed"
	Items               []*MessageCommon_Message `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`                                                           // "msg"
	UnreadMessageNumber int32                    `protobuf:"varint,5,opt,name=unread_message_number,json=unreadMessageNumber,proto3" json:"unread_message_number,omitempty"` // "unread_msg_num"
	C2CType             uint32                   `protobuf:"varint,8,opt,name=c2c_type,json=c2cType,proto3" json:"c2c_type,omitempty"`                                       // "c2c_type"
	ServiceType         uint32                   `protobuf:"varint,9,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`                           // "service_type"
	PbReserve           []byte                   `protobuf:"bytes,10,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`                                 // "bytes_pb_reserve"
	ToTinyId            uint64                   `protobuf:"varint,11,opt,name=to_tiny_id,json=toTinyId,proto3" json:"to_tiny_id,omitempty"`                                 // "uint64_to_tiny_id"
}

func (x *MessageCommon_UinPairMessage) Reset() {
	*x = MessageCommon_UinPairMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageCommon_UinPairMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageCommon_UinPairMessage) ProtoMessage() {}

func (x *MessageCommon_UinPairMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageCommon_UinPairMessage.ProtoReflect.Descriptor instead.
func (*MessageCommon_UinPairMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4, 12}
}

func (x *MessageCommon_UinPairMessage) GetLastReadTime() int64 {
	if x != nil {
		return x.LastReadTime
	}
	return 0
}

func (x *MessageCommon_UinPairMessage) GetPeerUin() int64 {
	if x != nil {
		return x.PeerUin
	}
	return 0
}

func (x *MessageCommon_UinPairMessage) GetMessageCompleted() int32 {
	if x != nil {
		return x.MessageCompleted
	}
	return 0
}

func (x *MessageCommon_UinPairMessage) GetItems() []*MessageCommon_Message {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *MessageCommon_UinPairMessage) GetUnreadMessageNumber() int32 {
	if x != nil {
		return x.UnreadMessageNumber
	}
	return 0
}

func (x *MessageCommon_UinPairMessage) GetC2CType() uint32 {
	if x != nil {
		return x.C2CType
	}
	return 0
}

func (x *MessageCommon_UinPairMessage) GetServiceType() uint32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *MessageCommon_UinPairMessage) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

func (x *MessageCommon_UinPairMessage) GetToTinyId() uint64 {
	if x != nil {
		return x.ToTinyId
	}
	return 0
}

// ResvResvInfo
type MessageControl_ReserveInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag       uint32 `protobuf:"varint,1,opt,name=flag,proto3" json:"flag,omitempty"`                               // "uint32_flag"
	Reserv1    []byte `protobuf:"bytes,2,opt,name=reserv1,proto3" json:"reserv1,omitempty"`                          // "bytes_reserv1"
	Reserv2    uint64 `protobuf:"varint,3,opt,name=reserv2,proto3" json:"reserv2,omitempty"`                         // "uint64_reserv2"
	Reserv3    uint64 `protobuf:"varint,4,opt,name=reserv3,proto3" json:"reserv3,omitempty"`                         // "uint64_reserv3"
	CreateTime uint32 `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // "uint32_create_time"
	PicHeight  uint32 `protobuf:"varint,6,opt,name=pic_height,json=picHeight,proto3" json:"pic_height,omitempty"`    // "uint32_pic_height"
	PicWidth   uint32 `protobuf:"varint,7,opt,name=pic_width,json=picWidth,proto3" json:"pic_width,omitempty"`       // "uint32_pic_width"
	ResvFlag   uint32 `protobuf:"varint,8,opt,name=resv_flag,json=resvFlag,proto3" json:"resv_flag,omitempty"`       // "uint32_resv_flag"
}

func (x *MessageControl_ReserveInfo) Reset() {
	*x = MessageControl_ReserveInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageControl_ReserveInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageControl_ReserveInfo) ProtoMessage() {}

func (x *MessageControl_ReserveInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageControl_ReserveInfo.ProtoReflect.Descriptor instead.
func (*MessageControl_ReserveInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{5, 0}
}

func (x *MessageControl_ReserveInfo) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *MessageControl_ReserveInfo) GetReserv1() []byte {
	if x != nil {
		return x.Reserv1
	}
	return nil
}

func (x *MessageControl_ReserveInfo) GetReserv2() uint64 {
	if x != nil {
		return x.Reserv2
	}
	return 0
}

func (x *MessageControl_ReserveInfo) GetReserv3() uint64 {
	if x != nil {
		return x.Reserv3
	}
	return 0
}

func (x *MessageControl_ReserveInfo) GetCreateTime() uint32 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *MessageControl_ReserveInfo) GetPicHeight() uint32 {
	if x != nil {
		return x.PicHeight
	}
	return 0
}

func (x *MessageControl_ReserveInfo) GetPicWidth() uint32 {
	if x != nil {
		return x.PicWidth
	}
	return 0
}

func (x *MessageControl_ReserveInfo) GetResvFlag() uint32 {
	if x != nil {
		return x.ResvFlag
	}
	return 0
}

// AccostTmp
type MessageService_AccostTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin int64  `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"` // "to_uin"
	Sig   []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`                   // "sig"
	Reply bool   `protobuf:"varint,3,opt,name=reply,proto3" json:"reply,omitempty"`              // "reply"
}

func (x *MessageService_AccostTemp) Reset() {
	*x = MessageService_AccostTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_AccostTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_AccostTemp) ProtoMessage() {}

func (x *MessageService_AccostTemp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_AccostTemp.ProtoReflect.Descriptor instead.
func (*MessageService_AccostTemp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 0}
}

func (x *MessageService_AccostTemp) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_AccostTemp) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *MessageService_AccostTemp) GetReply() bool {
	if x != nil {
		return x.Reply
	}
	return false
}

// AddressListTmp
type MessageService_AddressListTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromPhone       string `protobuf:"bytes,1,opt,name=from_phone,json=fromPhone,proto3" json:"from_phone,omitempty"`                      // "from_phone"
	ToPhone         string `protobuf:"bytes,2,opt,name=to_phone,json=toPhone,proto3" json:"to_phone,omitempty"`                            // "to_phone"
	ToUin           int64  `protobuf:"varint,3,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`                                 // "to_uin"
	Sig             []byte `protobuf:"bytes,4,opt,name=sig,proto3" json:"sig,omitempty"`                                                   // "sig"
	FromContactSize uint32 `protobuf:"varint,5,opt,name=from_contact_size,json=fromContactSize,proto3" json:"from_contact_size,omitempty"` // "from_contact_size"
}

func (x *MessageService_AddressListTemp) Reset() {
	*x = MessageService_AddressListTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_AddressListTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_AddressListTemp) ProtoMessage() {}

func (x *MessageService_AddressListTemp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_AddressListTemp.ProtoReflect.Descriptor instead.
func (*MessageService_AddressListTemp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 1}
}

func (x *MessageService_AddressListTemp) GetFromPhone() string {
	if x != nil {
		return x.FromPhone
	}
	return ""
}

func (x *MessageService_AddressListTemp) GetToPhone() string {
	if x != nil {
		return x.ToPhone
	}
	return ""
}

func (x *MessageService_AddressListTemp) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_AddressListTemp) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *MessageService_AddressListTemp) GetFromContactSize() uint32 {
	if x != nil {
		return x.FromContactSize
	}
	return 0
}

// AuthTmp
type MessageService_AuthTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin int64  `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"` // "to_uin"
	Sig   []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`                   // "sig"
}

func (x *MessageService_AuthTemp) Reset() {
	*x = MessageService_AuthTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_AuthTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_AuthTemp) ProtoMessage() {}

func (x *MessageService_AuthTemp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_AuthTemp.ProtoReflect.Descriptor instead.
func (*MessageService_AuthTemp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 2}
}

func (x *MessageService_AuthTemp) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_AuthTemp) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

// BsnsTmp
type MessageService_BusinessTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin int64  `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"` // "to_uin"
	Sig   []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`                   // "sig"
}

func (x *MessageService_BusinessTemp) Reset() {
	*x = MessageService_BusinessTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_BusinessTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_BusinessTemp) ProtoMessage() {}

func (x *MessageService_BusinessTemp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_BusinessTemp.ProtoReflect.Descriptor instead.
func (*MessageService_BusinessTemp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 3}
}

func (x *MessageService_BusinessTemp) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_BusinessTemp) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

// BusinessWPATmp
type MessageService_BusinessWPATemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin int64  `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"` // "to_uin"
	Sig   []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`                   // "sig"
	Sigt  []byte `protobuf:"bytes,3,opt,name=sigt,proto3" json:"sigt,omitempty"`                 // "sigt"
}

func (x *MessageService_BusinessWPATemp) Reset() {
	*x = MessageService_BusinessWPATemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_BusinessWPATemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_BusinessWPATemp) ProtoMessage() {}

func (x *MessageService_BusinessWPATemp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_BusinessWPATemp.ProtoReflect.Descriptor instead.
func (*MessageService_BusinessWPATemp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 4}
}

func (x *MessageService_BusinessWPATemp) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_BusinessWPATemp) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *MessageService_BusinessWPATemp) GetSigt() []byte {
	if x != nil {
		return x.Sigt
	}
	return nil
}

// C2C
type MessageService_C2C struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin int64 `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"` // "to_uin"
}

func (x *MessageService_C2C) Reset() {
	*x = MessageService_C2C{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_C2C) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_C2C) ProtoMessage() {}

func (x *MessageService_C2C) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_C2C.ProtoReflect.Descriptor instead.
func (*MessageService_C2C) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 5}
}

func (x *MessageService_C2C) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

// CommTmp
type MessageService_CommonTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin    int64  `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`       // "to_uin"
	C2CType  uint32 `protobuf:"varint,2,opt,name=c2c_type,json=c2cType,proto3" json:"c2c_type,omitempty"` // "c2c_type"
	SvrType  uint32 `protobuf:"varint,3,opt,name=svr_type,json=svrType,proto3" json:"svr_type,omitempty"` // "svr_type"
	Sig      []byte `protobuf:"bytes,4,opt,name=sig,proto3" json:"sig,omitempty"`                         // "sig"
	Reserved []byte `protobuf:"bytes,5,opt,name=reserved,proto3" json:"reserved,omitempty"`               // "reserved"
}

func (x *MessageService_CommonTemp) Reset() {
	*x = MessageService_CommonTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_CommonTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_CommonTemp) ProtoMessage() {}

func (x *MessageService_CommonTemp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_CommonTemp.ProtoReflect.Descriptor instead.
func (*MessageService_CommonTemp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 6}
}

func (x *MessageService_CommonTemp) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_CommonTemp) GetC2CType() uint32 {
	if x != nil {
		return x.C2CType
	}
	return 0
}

func (x *MessageService_CommonTemp) GetSvrType() uint32 {
	if x != nil {
		return x.SvrType
	}
	return 0
}

func (x *MessageService_CommonTemp) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *MessageService_CommonTemp) GetReserved() []byte {
	if x != nil {
		return x.Reserved
	}
	return nil
}

// Dis
type MessageService_Discuss struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisUin int64 `protobuf:"varint,1,opt,name=dis_uin,json=disUin,proto3" json:"dis_uin,omitempty"` // "dis_uin"
}

func (x *MessageService_Discuss) Reset() {
	*x = MessageService_Discuss{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_Discuss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_Discuss) ProtoMessage() {}

func (x *MessageService_Discuss) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_Discuss.ProtoReflect.Descriptor instead.
func (*MessageService_Discuss) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 7}
}

func (x *MessageService_Discuss) GetDisUin() int64 {
	if x != nil {
		return x.DisUin
	}
	return 0
}

// DisTmp
type MessageService_DiscussTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisUin int64 `protobuf:"varint,1,opt,name=dis_uin,json=disUin,proto3" json:"dis_uin,omitempty"` // "dis_uin"
	ToUin  int64 `protobuf:"varint,2,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`    // "to_uin"
}

func (x *MessageService_DiscussTemp) Reset() {
	*x = MessageService_DiscussTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_DiscussTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_DiscussTemp) ProtoMessage() {}

func (x *MessageService_DiscussTemp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_DiscussTemp.ProtoReflect.Descriptor instead.
func (*MessageService_DiscussTemp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 8}
}

func (x *MessageService_DiscussTemp) GetDisUin() int64 {
	if x != nil {
		return x.DisUin
	}
	return 0
}

func (x *MessageService_DiscussTemp) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

// Grp
type MessageService_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode int64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"` // "group_code"
}

func (x *MessageService_Group) Reset() {
	*x = MessageService_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_Group) ProtoMessage() {}

func (x *MessageService_Group) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_Group.ProtoReflect.Descriptor instead.
func (*MessageService_Group) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 9}
}

func (x *MessageService_Group) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

// GrpTmp
type MessageService_GroupTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupUin int64 `protobuf:"varint,1,opt,name=group_uin,json=groupUin,proto3" json:"group_uin,omitempty"` // "group_uin"
	ToUin    int64 `protobuf:"varint,2,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`          // "to_uin"
}

func (x *MessageService_GroupTemp) Reset() {
	*x = MessageService_GroupTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GroupTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GroupTemp) ProtoMessage() {}

func (x *MessageService_GroupTemp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GroupTemp.ProtoReflect.Descriptor instead.
func (*MessageService_GroupTemp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 10}
}

func (x *MessageService_GroupTemp) GetGroupUin() int64 {
	if x != nil {
		return x.GroupUin
	}
	return 0
}

func (x *MessageService_GroupTemp) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

// NearByAssistantTmp
type MessageService_NearByAssistantTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin int64  `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"` // "to_uin"
	Sig   []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`                   // "sig"
	Reply bool   `protobuf:"varint,3,opt,name=reply,proto3" json:"reply,omitempty"`              // "reply"
}

func (x *MessageService_NearByAssistantTemp) Reset() {
	*x = MessageService_NearByAssistantTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_NearByAssistantTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_NearByAssistantTemp) ProtoMessage() {}

func (x *MessageService_NearByAssistantTemp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_NearByAssistantTemp.ProtoReflect.Descriptor instead.
func (*MessageService_NearByAssistantTemp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 11}
}

func (x *MessageService_NearByAssistantTemp) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_NearByAssistantTemp) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *MessageService_NearByAssistantTemp) GetReply() bool {
	if x != nil {
		return x.Reply
	}
	return false
}

// NearByDatingTmp
type MessageService_NearByDatingTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin int64  `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"` // "to_uin"
	Sig   []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`                   // "sig"
	Reply bool   `protobuf:"varint,3,opt,name=reply,proto3" json:"reply,omitempty"`              // "reply"
}

func (x *MessageService_NearByDatingTemp) Reset() {
	*x = MessageService_NearByDatingTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_NearByDatingTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_NearByDatingTemp) ProtoMessage() {}

func (x *MessageService_NearByDatingTemp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_NearByDatingTemp.ProtoReflect.Descriptor instead.
func (*MessageService_NearByDatingTemp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 12}
}

func (x *MessageService_NearByDatingTemp) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_NearByDatingTemp) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *MessageService_NearByDatingTemp) GetReply() bool {
	if x != nil {
		return x.Reply
	}
	return false
}

// PubGroupTmp
type MessageService_PublicGroupTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin    int64  `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`          // "to_uin"
	Sig      []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`                            // "sig"
	GroupUin int64  `protobuf:"varint,3,opt,name=group_uin,json=groupUin,proto3" json:"group_uin,omitempty"` // "group_uin"
}

func (x *MessageService_PublicGroupTemp) Reset() {
	*x = MessageService_PublicGroupTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_PublicGroupTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_PublicGroupTemp) ProtoMessage() {}

func (x *MessageService_PublicGroupTemp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_PublicGroupTemp.ProtoReflect.Descriptor instead.
func (*MessageService_PublicGroupTemp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 13}
}

func (x *MessageService_PublicGroupTemp) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_PublicGroupTemp) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *MessageService_PublicGroupTemp) GetGroupUin() int64 {
	if x != nil {
		return x.GroupUin
	}
	return 0
}

// PublicPlat
type MessageService_PublicPlat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin int64  `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"` // "to_uin"
	Sig   []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`                   // "sig"
}

func (x *MessageService_PublicPlat) Reset() {
	*x = MessageService_PublicPlat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_PublicPlat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_PublicPlat) ProtoMessage() {}

func (x *MessageService_PublicPlat) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_PublicPlat.ProtoReflect.Descriptor instead.
func (*MessageService_PublicPlat) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 14}
}

func (x *MessageService_PublicPlat) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_PublicPlat) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

// QQQueryBusinessTmp
type MessageService_QQQueryBusinessTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin int64  `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"` // "to_uin"
	Sig   []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`                   // "sig"
}

func (x *MessageService_QQQueryBusinessTemp) Reset() {
	*x = MessageService_QQQueryBusinessTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_QQQueryBusinessTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_QQQueryBusinessTemp) ProtoMessage() {}

func (x *MessageService_QQQueryBusinessTemp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_QQQueryBusinessTemp.ProtoReflect.Descriptor instead.
func (*MessageService_QQQueryBusinessTemp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 15}
}

func (x *MessageService_QQQueryBusinessTemp) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_QQQueryBusinessTemp) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

// RichStatusTmp
type MessageService_RichStatusTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin int64  `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"` // "to_uin"
	Sig   []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`                   // "sig"
}

func (x *MessageService_RichStatusTemp) Reset() {
	*x = MessageService_RichStatusTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_RichStatusTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_RichStatusTemp) ProtoMessage() {}

func (x *MessageService_RichStatusTemp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_RichStatusTemp.ProtoReflect.Descriptor instead.
func (*MessageService_RichStatusTemp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 16}
}

func (x *MessageService_RichStatusTemp) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_RichStatusTemp) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

// RoutingHead
type MessageService_RoutingHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	C2C                 *MessageService_C2C                 `protobuf:"bytes,1,opt,name=c2c,proto3" json:"c2c,omitempty"`                                                               // "c2c"
	Group               *MessageService_Group               `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`                                                           // "grp"
	GroupTemp           *MessageService_GroupTemp           `protobuf:"bytes,3,opt,name=group_temp,json=groupTemp,proto3" json:"group_temp,omitempty"`                                  // "grp_tmp"
	Discuss             *MessageService_Discuss             `protobuf:"bytes,4,opt,name=discuss,proto3" json:"discuss,omitempty"`                                                       // "dis"
	DiscussTemp         *MessageService_DiscussTemp         `protobuf:"bytes,5,opt,name=discuss_temp,json=discussTemp,proto3" json:"discuss_temp,omitempty"`                            // "dis_tmp"
	WpaTemp             *MessageService_WPATemp             `protobuf:"bytes,6,opt,name=wpa_temp,json=wpaTemp,proto3" json:"wpa_temp,omitempty"`                                        // "wpa_tmp"
	SecretFile          *MessageService_SecretFileHead      `protobuf:"bytes,7,opt,name=secret_file,json=secretFile,proto3" json:"secret_file,omitempty"`                               // "secret_file"
	PublicPlat          *MessageService_PublicPlat          `protobuf:"bytes,8,opt,name=public_plat,json=publicPlat,proto3" json:"public_plat,omitempty"`                               // "public_plat"
	TransMessage        *MessageService_TransportMessage    `protobuf:"bytes,9,opt,name=trans_message,json=transMessage,proto3" json:"trans_message,omitempty"`                         // "trans_msg"
	AddressList         *MessageService_AddressListTemp     `protobuf:"bytes,10,opt,name=address_list,json=addressList,proto3" json:"address_list,omitempty"`                           // "address_list"
	RichStatusTemp      *MessageService_RichStatusTemp      `protobuf:"bytes,11,opt,name=rich_status_temp,json=richStatusTemp,proto3" json:"rich_status_temp,omitempty"`                // "rich_status_tmp"
	TransportCmd        *MessageService_TransportCmd        `protobuf:"bytes,12,opt,name=transport_cmd,json=transportCmd,proto3" json:"transport_cmd,omitempty"`                        // "trans_cmd"
	AccostTemp          *MessageService_AccostTemp          `protobuf:"bytes,13,opt,name=accost_temp,json=accostTemp,proto3" json:"accost_temp,omitempty"`                              // "accost_tmp"
	PubGroupTemp        *MessageService_PublicGroupTemp     `protobuf:"bytes,14,opt,name=pub_group_temp,json=pubGroupTemp,proto3" json:"pub_group_temp,omitempty"`                      // "pub_group_tmp"
	Trans_0X211         *MessageService_Transport0X211      `protobuf:"bytes,15,opt,name=trans_0x211,json=trans0x211,proto3" json:"trans_0x211,omitempty"`                              // "trans_0x211"
	BusinessWpaTemp     *MessageService_BusinessWPATemp     `protobuf:"bytes,16,opt,name=business_wpa_temp,json=businessWpaTemp,proto3" json:"business_wpa_temp,omitempty"`             // "business_wpa_tmp"
	AuthTemp            *MessageService_AuthTemp            `protobuf:"bytes,17,opt,name=auth_temp,json=authTemp,proto3" json:"auth_temp,omitempty"`                                    // "auth_tmp"
	BusinessTemp        *MessageService_BusinessTemp        `protobuf:"bytes,18,opt,name=business_temp,json=businessTemp,proto3" json:"business_temp,omitempty"`                        // "bsns_tmp"
	QqQuerybusinessTemp *MessageService_QQQueryBusinessTemp `protobuf:"bytes,19,opt,name=qq_querybusiness_temp,json=qqQuerybusinessTemp,proto3" json:"qq_querybusiness_temp,omitempty"` // "qq_querybusiness_tmp"
	NearbyDatingTemp    *MessageService_NearByDatingTemp    `protobuf:"bytes,20,opt,name=nearby_dating_temp,json=nearbyDatingTemp,proto3" json:"nearby_dating_temp,omitempty"`          // "nearby_dating_tmp"
	NearbyAssistantTemp *MessageService_NearByAssistantTemp `protobuf:"bytes,21,opt,name=nearby_assistant_temp,json=nearbyAssistantTemp,proto3" json:"nearby_assistant_temp,omitempty"` // "nearby_assistant_tmp"
	CommomTemp          *MessageService_CommonTemp          `protobuf:"bytes,22,opt,name=commom_temp,json=commomTemp,proto3" json:"commom_temp,omitempty"`                              // "comm_tmp"
}

func (x *MessageService_RoutingHead) Reset() {
	*x = MessageService_RoutingHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_RoutingHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_RoutingHead) ProtoMessage() {}

func (x *MessageService_RoutingHead) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_RoutingHead.ProtoReflect.Descriptor instead.
func (*MessageService_RoutingHead) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 17}
}

func (x *MessageService_RoutingHead) GetC2C() *MessageService_C2C {
	if x != nil {
		return x.C2C
	}
	return nil
}

func (x *MessageService_RoutingHead) GetGroup() *MessageService_Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *MessageService_RoutingHead) GetGroupTemp() *MessageService_GroupTemp {
	if x != nil {
		return x.GroupTemp
	}
	return nil
}

func (x *MessageService_RoutingHead) GetDiscuss() *MessageService_Discuss {
	if x != nil {
		return x.Discuss
	}
	return nil
}

func (x *MessageService_RoutingHead) GetDiscussTemp() *MessageService_DiscussTemp {
	if x != nil {
		return x.DiscussTemp
	}
	return nil
}

func (x *MessageService_RoutingHead) GetWpaTemp() *MessageService_WPATemp {
	if x != nil {
		return x.WpaTemp
	}
	return nil
}

func (x *MessageService_RoutingHead) GetSecretFile() *MessageService_SecretFileHead {
	if x != nil {
		return x.SecretFile
	}
	return nil
}

func (x *MessageService_RoutingHead) GetPublicPlat() *MessageService_PublicPlat {
	if x != nil {
		return x.PublicPlat
	}
	return nil
}

func (x *MessageService_RoutingHead) GetTransMessage() *MessageService_TransportMessage {
	if x != nil {
		return x.TransMessage
	}
	return nil
}

func (x *MessageService_RoutingHead) GetAddressList() *MessageService_AddressListTemp {
	if x != nil {
		return x.AddressList
	}
	return nil
}

func (x *MessageService_RoutingHead) GetRichStatusTemp() *MessageService_RichStatusTemp {
	if x != nil {
		return x.RichStatusTemp
	}
	return nil
}

func (x *MessageService_RoutingHead) GetTransportCmd() *MessageService_TransportCmd {
	if x != nil {
		return x.TransportCmd
	}
	return nil
}

func (x *MessageService_RoutingHead) GetAccostTemp() *MessageService_AccostTemp {
	if x != nil {
		return x.AccostTemp
	}
	return nil
}

func (x *MessageService_RoutingHead) GetPubGroupTemp() *MessageService_PublicGroupTemp {
	if x != nil {
		return x.PubGroupTemp
	}
	return nil
}

func (x *MessageService_RoutingHead) GetTrans_0X211() *MessageService_Transport0X211 {
	if x != nil {
		return x.Trans_0X211
	}
	return nil
}

func (x *MessageService_RoutingHead) GetBusinessWpaTemp() *MessageService_BusinessWPATemp {
	if x != nil {
		return x.BusinessWpaTemp
	}
	return nil
}

func (x *MessageService_RoutingHead) GetAuthTemp() *MessageService_AuthTemp {
	if x != nil {
		return x.AuthTemp
	}
	return nil
}

func (x *MessageService_RoutingHead) GetBusinessTemp() *MessageService_BusinessTemp {
	if x != nil {
		return x.BusinessTemp
	}
	return nil
}

func (x *MessageService_RoutingHead) GetQqQuerybusinessTemp() *MessageService_QQQueryBusinessTemp {
	if x != nil {
		return x.QqQuerybusinessTemp
	}
	return nil
}

func (x *MessageService_RoutingHead) GetNearbyDatingTemp() *MessageService_NearByDatingTemp {
	if x != nil {
		return x.NearbyDatingTemp
	}
	return nil
}

func (x *MessageService_RoutingHead) GetNearbyAssistantTemp() *MessageService_NearByAssistantTemp {
	if x != nil {
		return x.NearbyAssistantTemp
	}
	return nil
}

func (x *MessageService_RoutingHead) GetCommomTemp() *MessageService_CommonTemp {
	if x != nil {
		return x.CommomTemp
	}
	return nil
}

// SecretFileHead
type MessageService_SecretFileHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretFileMessage *MessageType00A6_Type00C1_Body `protobuf:"bytes,1,opt,name=secret_file_message,json=secretFileMessage,proto3" json:"secret_file_message,omitempty"` // "secret_file_msg"
	SecretFileStatus  *MessageType0210_Type001A_Body `protobuf:"bytes,2,opt,name=secret_file_status,json=secretFileStatus,proto3" json:"secret_file_status,omitempty"`    // "secret_file_status"
}

func (x *MessageService_SecretFileHead) Reset() {
	*x = MessageService_SecretFileHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_SecretFileHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_SecretFileHead) ProtoMessage() {}

func (x *MessageService_SecretFileHead) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_SecretFileHead.ProtoReflect.Descriptor instead.
func (*MessageService_SecretFileHead) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 18}
}

func (x *MessageService_SecretFileHead) GetSecretFileMessage() *MessageType00A6_Type00C1_Body {
	if x != nil {
		return x.SecretFileMessage
	}
	return nil
}

func (x *MessageService_SecretFileHead) GetSecretFileStatus() *MessageType0210_Type001A_Body {
	if x != nil {
		return x.SecretFileStatus
	}
	return nil
}

// Trans0x211
type MessageService_Transport0X211 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin        uint64                  `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`                      // "to_uin"
	CcCmd        uint32                  `protobuf:"varint,2,opt,name=cc_cmd,json=ccCmd,proto3" json:"cc_cmd,omitempty"`                      // "cc_cmd"
	InstCtrl     *IMMessageHead_InstCtrl `protobuf:"bytes,3,opt,name=inst_ctrl,json=instCtrl,proto3" json:"inst_ctrl,omitempty"`              // "inst_ctrl"
	Sig          []byte                  `protobuf:"bytes,4,opt,name=sig,proto3" json:"sig,omitempty"`                                        // "sig"
	C2CType      uint32                  `protobuf:"varint,5,opt,name=c2c_type,json=c2cType,proto3" json:"c2c_type,omitempty"`                // "c2c_type"
	ServiceType  uint32                  `protobuf:"varint,6,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`    // "service_type"
	DatalineFlag uint32                  `protobuf:"varint,7,opt,name=dataline_flag,json=datalineFlag,proto3" json:"dataline_flag,omitempty"` // "dataline_flag"
}

func (x *MessageService_Transport0X211) Reset() {
	*x = MessageService_Transport0X211{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_Transport0X211) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_Transport0X211) ProtoMessage() {}

func (x *MessageService_Transport0X211) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_Transport0X211.ProtoReflect.Descriptor instead.
func (*MessageService_Transport0X211) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 19}
}

func (x *MessageService_Transport0X211) GetToUin() uint64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_Transport0X211) GetCcCmd() uint32 {
	if x != nil {
		return x.CcCmd
	}
	return 0
}

func (x *MessageService_Transport0X211) GetInstCtrl() *IMMessageHead_InstCtrl {
	if x != nil {
		return x.InstCtrl
	}
	return nil
}

func (x *MessageService_Transport0X211) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *MessageService_Transport0X211) GetC2CType() uint32 {
	if x != nil {
		return x.C2CType
	}
	return 0
}

func (x *MessageService_Transport0X211) GetServiceType() uint32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *MessageService_Transport0X211) GetDatalineFlag() uint32 {
	if x != nil {
		return x.DatalineFlag
	}
	return 0
}

// TransCmd
type MessageService_TransportCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin   uint64 `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`       // "to_uin"
	MsgType uint32 `protobuf:"varint,2,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"` // "msg_type"
}

func (x *MessageService_TransportCmd) Reset() {
	*x = MessageService_TransportCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_TransportCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_TransportCmd) ProtoMessage() {}

func (x *MessageService_TransportCmd) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_TransportCmd.ProtoReflect.Descriptor instead.
func (*MessageService_TransportCmd) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 20}
}

func (x *MessageService_TransportCmd) GetToUin() uint64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_TransportCmd) GetMsgType() uint32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

// TransMsg
type MessageService_TransportMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin  uint64 `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`    // "to_uin"
	C2CCmd uint32 `protobuf:"varint,2,opt,name=c2c_cmd,json=c2cCmd,proto3" json:"c2c_cmd,omitempty"` // "c2c_cmd"
}

func (x *MessageService_TransportMessage) Reset() {
	*x = MessageService_TransportMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_TransportMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_TransportMessage) ProtoMessage() {}

func (x *MessageService_TransportMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_TransportMessage.ProtoReflect.Descriptor instead.
func (*MessageService_TransportMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 21}
}

func (x *MessageService_TransportMessage) GetToUin() uint64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_TransportMessage) GetC2CCmd() uint32 {
	if x != nil {
		return x.C2CCmd
	}
	return 0
}

// TransReq
type MessageService_TransportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command int32  `protobuf:"varint,1,opt,name=command,proto3" json:"command,omitempty"`               // "command"
	ReqTag  uint32 `protobuf:"varint,2,opt,name=req_tag,json=reqTag,proto3" json:"req_tag,omitempty"`   // "req_tag"
	ReqBuff []byte `protobuf:"bytes,3,opt,name=req_buff,json=reqBuff,proto3" json:"req_buff,omitempty"` // "req_buff"
}

func (x *MessageService_TransportReq) Reset() {
	*x = MessageService_TransportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_TransportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_TransportReq) ProtoMessage() {}

func (x *MessageService_TransportReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_TransportReq.ProtoReflect.Descriptor instead.
func (*MessageService_TransportReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 22}
}

func (x *MessageService_TransportReq) GetCommand() int32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *MessageService_TransportReq) GetReqTag() uint32 {
	if x != nil {
		return x.ReqTag
	}
	return 0
}

func (x *MessageService_TransportReq) GetReqBuff() []byte {
	if x != nil {
		return x.ReqBuff
	}
	return nil
}

// TransResp
type MessageService_TransportResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                // "result"
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // "errmsg"
	RespTag      uint32 `protobuf:"varint,3,opt,name=resp_tag,json=respTag,proto3" json:"resp_tag,omitempty"`               // "resp_tag"
	RespBuff     []byte `protobuf:"bytes,4,opt,name=resp_buff,json=respBuff,proto3" json:"resp_buff,omitempty"`             // "resp_buff"
}

func (x *MessageService_TransportResp) Reset() {
	*x = MessageService_TransportResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_TransportResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_TransportResp) ProtoMessage() {}

func (x *MessageService_TransportResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_TransportResp.ProtoReflect.Descriptor instead.
func (*MessageService_TransportResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 23}
}

func (x *MessageService_TransportResp) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_TransportResp) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_TransportResp) GetRespTag() uint32 {
	if x != nil {
		return x.RespTag
	}
	return 0
}

func (x *MessageService_TransportResp) GetRespBuff() []byte {
	if x != nil {
		return x.RespBuff
	}
	return nil
}

// WPATmp
type MessageService_WPATemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin uint64 `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"` // "to_uin"
	Sig   []byte `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`                   // "sig"
}

func (x *MessageService_WPATemp) Reset() {
	*x = MessageService_WPATemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_WPATemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_WPATemp) ProtoMessage() {}

func (x *MessageService_WPATemp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_WPATemp.ProtoReflect.Descriptor instead.
func (*MessageService_WPATemp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 24}
}

func (x *MessageService_WPATemp) GetToUin() uint64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_WPATemp) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

// WithDrawWordingInfo
type MessageService_WithdrawWordingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId   int32  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`      // "int32_item_id"
	ItemName string `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"` // "string_item_name"
}

func (x *MessageService_WithdrawWordingInfo) Reset() {
	*x = MessageService_WithdrawWordingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_WithdrawWordingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_WithdrawWordingInfo) ProtoMessage() {}

func (x *MessageService_WithdrawWordingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_WithdrawWordingInfo.ProtoReflect.Descriptor instead.
func (*MessageService_WithdrawWordingInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 25}
}

func (x *MessageService_WithdrawWordingInfo) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *MessageService_WithdrawWordingInfo) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

// PbDeleteMsgReq
type MessageService_DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MessageService_DeleteRequest_MessageItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // "msgItems"
}

func (x *MessageService_DeleteRequest) Reset() {
	*x = MessageService_DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_DeleteRequest) ProtoMessage() {}

func (x *MessageService_DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_DeleteRequest.ProtoReflect.Descriptor instead.
func (*MessageService_DeleteRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 26}
}

func (x *MessageService_DeleteRequest) GetItems() []*MessageService_DeleteRequest_MessageItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// PbDeleteMsgResp
type MessageService_DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                // "result"
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // "errmsg"
}

func (x *MessageService_DeleteResponse) Reset() {
	*x = MessageService_DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_DeleteResponse) ProtoMessage() {}

func (x *MessageService_DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_DeleteResponse.ProtoReflect.Descriptor instead.
func (*MessageService_DeleteResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 27}
}

func (x *MessageService_DeleteResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_DeleteResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// PbDelRoamMsgReq
type MessageService_DeleteRoamingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	C2C     *MessageService_DeleteRoamingRequest_C2CMessage     `protobuf:"bytes,1,opt,name=c2c,proto3" json:"c2c,omitempty"`         // "c2c_msg"
	Group   *MessageService_DeleteRoamingRequest_GroupMessage   `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`     // "grp_msg"
	Discuss *MessageService_DeleteRoamingRequest_DiscussMessage `protobuf:"bytes,3,opt,name=discuss,proto3" json:"discuss,omitempty"` // "dis_msg"
}

func (x *MessageService_DeleteRoamingRequest) Reset() {
	*x = MessageService_DeleteRoamingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_DeleteRoamingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_DeleteRoamingRequest) ProtoMessage() {}

func (x *MessageService_DeleteRoamingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_DeleteRoamingRequest.ProtoReflect.Descriptor instead.
func (*MessageService_DeleteRoamingRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 28}
}

func (x *MessageService_DeleteRoamingRequest) GetC2C() *MessageService_DeleteRoamingRequest_C2CMessage {
	if x != nil {
		return x.C2C
	}
	return nil
}

func (x *MessageService_DeleteRoamingRequest) GetGroup() *MessageService_DeleteRoamingRequest_GroupMessage {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *MessageService_DeleteRoamingRequest) GetDiscuss() *MessageService_DeleteRoamingRequest_DiscussMessage {
	if x != nil {
		return x.Discuss
	}
	return nil
}

// PbDelRoamMsgResp
type MessageService_DeleteRoamingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                // "result"
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // "errmsg"
}

func (x *MessageService_DeleteRoamingResponse) Reset() {
	*x = MessageService_DeleteRoamingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_DeleteRoamingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_DeleteRoamingResponse) ProtoMessage() {}

func (x *MessageService_DeleteRoamingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_DeleteRoamingResponse.ProtoReflect.Descriptor instead.
func (*MessageService_DeleteRoamingResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 29}
}

func (x *MessageService_DeleteRoamingResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_DeleteRoamingResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// PbGetMsgReq
type MessageService_GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncFlag             uint32 `protobuf:"varint,1,opt,name=sync_flag,json=syncFlag,proto3" json:"sync_flag,omitempty"`                                       // "sync_flag" Enum
	SyncCookie           []byte `protobuf:"bytes,2,opt,name=sync_cookie,json=syncCookie,proto3" json:"sync_cookie,omitempty"`                                  // "sync_cookie"
	RambleFlag           uint32 `protobuf:"varint,3,opt,name=ramble_flag,json=rambleFlag,proto3" json:"ramble_flag,omitempty"`                                 // "ramble_flag"
	LatestRambleNumber   uint32 `protobuf:"varint,4,opt,name=latest_ramble_number,json=latestRambleNumber,proto3" json:"latest_ramble_number,omitempty"`       // "latest_ramble_number"
	OtherRambleNumber    uint32 `protobuf:"varint,5,opt,name=other_ramble_number,json=otherRambleNumber,proto3" json:"other_ramble_number,omitempty"`          // "other_ramble_number"
	OnlineSyncFlag       uint32 `protobuf:"varint,6,opt,name=online_sync_flag,json=onlineSyncFlag,proto3" json:"online_sync_flag,omitempty"`                   // "online_sync_flag"
	ContextFlag          uint32 `protobuf:"varint,7,opt,name=context_flag,json=contextFlag,proto3" json:"context_flag,omitempty"`                              // "context_flag"
	WhisperSessionId     uint32 `protobuf:"varint,8,opt,name=whisper_session_id,json=whisperSessionId,proto3" json:"whisper_session_id,omitempty"`             // "whisper_session_id"
	MessageRequestType   uint32 `protobuf:"varint,9,opt,name=message_request_type,json=messageRequestType,proto3" json:"message_request_type,omitempty"`       // "msg_req_type"
	PublicAccountCookie  []byte `protobuf:"bytes,10,opt,name=public_account_cookie,json=publicAccountCookie,proto3" json:"public_account_cookie,omitempty"`    // "pubaccount_cookie"
	MessageControlBuffer []byte `protobuf:"bytes,11,opt,name=message_control_buffer,json=messageControlBuffer,proto3" json:"message_control_buffer,omitempty"` // "msg_ctrl_buf"
	ServerBuffer         []byte `protobuf:"bytes,12,opt,name=server_buffer,json=serverBuffer,proto3" json:"server_buffer,omitempty"`                           // "bytes_server_buf"
}

func (x *MessageService_GetRequest) Reset() {
	*x = MessageService_GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetRequest) ProtoMessage() {}

func (x *MessageService_GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetRequest.ProtoReflect.Descriptor instead.
func (*MessageService_GetRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 30}
}

func (x *MessageService_GetRequest) GetSyncFlag() uint32 {
	if x != nil {
		return x.SyncFlag
	}
	return 0
}

func (x *MessageService_GetRequest) GetSyncCookie() []byte {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

func (x *MessageService_GetRequest) GetRambleFlag() uint32 {
	if x != nil {
		return x.RambleFlag
	}
	return 0
}

func (x *MessageService_GetRequest) GetLatestRambleNumber() uint32 {
	if x != nil {
		return x.LatestRambleNumber
	}
	return 0
}

func (x *MessageService_GetRequest) GetOtherRambleNumber() uint32 {
	if x != nil {
		return x.OtherRambleNumber
	}
	return 0
}

func (x *MessageService_GetRequest) GetOnlineSyncFlag() uint32 {
	if x != nil {
		return x.OnlineSyncFlag
	}
	return 0
}

func (x *MessageService_GetRequest) GetContextFlag() uint32 {
	if x != nil {
		return x.ContextFlag
	}
	return 0
}

func (x *MessageService_GetRequest) GetWhisperSessionId() uint32 {
	if x != nil {
		return x.WhisperSessionId
	}
	return 0
}

func (x *MessageService_GetRequest) GetMessageRequestType() uint32 {
	if x != nil {
		return x.MessageRequestType
	}
	return 0
}

func (x *MessageService_GetRequest) GetPublicAccountCookie() []byte {
	if x != nil {
		return x.PublicAccountCookie
	}
	return nil
}

func (x *MessageService_GetRequest) GetMessageControlBuffer() []byte {
	if x != nil {
		return x.MessageControlBuffer
	}
	return nil
}

func (x *MessageService_GetRequest) GetServerBuffer() []byte {
	if x != nil {
		return x.ServerBuffer
	}
	return nil
}

// PbGetMsgResp
type MessageService_GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result              uint32                          `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                                        // "result"
	ErrorMessage        string                          `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                         // "errmsg"
	SyncCookie          []byte                          `protobuf:"bytes,3,opt,name=sync_cookie,json=syncCookie,proto3" json:"sync_cookie,omitempty"`                               // "sync_cookie"
	SyncFlag            uint32                          `protobuf:"varint,4,opt,name=sync_flag,json=syncFlag,proto3" json:"sync_flag,omitempty"`                                    // "sync_flag" Enum
	UinPairMessages     []*MessageCommon_UinPairMessage `protobuf:"bytes,5,rep,name=uin_pair_messages,json=uinPairMessages,proto3" json:"uin_pair_messages,omitempty"`              // "uin_pair_msgs"
	BindUin             uint64                          `protobuf:"varint,6,opt,name=bind_uin,json=bindUin,proto3" json:"bind_uin,omitempty"`                                       // "bind_uin"
	MessageResponseType uint32                          `protobuf:"varint,7,opt,name=message_response_type,json=messageResponseType,proto3" json:"message_response_type,omitempty"` // "msg_rsp_type"
	PublicAccountCookie []byte                          `protobuf:"bytes,8,opt,name=public_account_cookie,json=publicAccountCookie,proto3" json:"public_account_cookie,omitempty"`  // "pubaccount_cookie"
	IsPartialSync       bool                            `protobuf:"varint,9,opt,name=is_partial_sync,json=isPartialSync,proto3" json:"is_partial_sync,omitempty"`                   // "is_partial_sync"
	MessageCtrlBuf      []byte                          `protobuf:"bytes,10,opt,name=message_ctrl_buf,json=messageCtrlBuf,proto3" json:"message_ctrl_buf,omitempty"`                // "msg_ctrl_buf"
}

func (x *MessageService_GetResponse) Reset() {
	*x = MessageService_GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetResponse) ProtoMessage() {}

func (x *MessageService_GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetResponse.ProtoReflect.Descriptor instead.
func (*MessageService_GetResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 31}
}

func (x *MessageService_GetResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_GetResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_GetResponse) GetSyncCookie() []byte {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

func (x *MessageService_GetResponse) GetSyncFlag() uint32 {
	if x != nil {
		return x.SyncFlag
	}
	return 0
}

func (x *MessageService_GetResponse) GetUinPairMessages() []*MessageCommon_UinPairMessage {
	if x != nil {
		return x.UinPairMessages
	}
	return nil
}

func (x *MessageService_GetResponse) GetBindUin() uint64 {
	if x != nil {
		return x.BindUin
	}
	return 0
}

func (x *MessageService_GetResponse) GetMessageResponseType() uint32 {
	if x != nil {
		return x.MessageResponseType
	}
	return 0
}

func (x *MessageService_GetResponse) GetPublicAccountCookie() []byte {
	if x != nil {
		return x.PublicAccountCookie
	}
	return nil
}

func (x *MessageService_GetResponse) GetIsPartialSync() bool {
	if x != nil {
		return x.IsPartialSync
	}
	return false
}

func (x *MessageService_GetResponse) GetMessageCtrlBuf() []byte {
	if x != nil {
		return x.MessageCtrlBuf
	}
	return nil
}

// PbGetDiscussMsgReq
type MessageService_GetDiscussRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscussUin     uint64 `protobuf:"varint,1,opt,name=discuss_uin,json=discussUin,proto3" json:"discuss_uin,omitempty"`               // "discuss_uin"
	EndSeq         uint64 `protobuf:"varint,2,opt,name=end_seq,json=endSeq,proto3" json:"end_seq,omitempty"`                           // "end_seq"
	BeginSeq       uint64 `protobuf:"varint,3,opt,name=begin_seq,json=beginSeq,proto3" json:"begin_seq,omitempty"`                     // "begin_seq"
	LastGetTime    uint64 `protobuf:"varint,4,opt,name=last_get_time,json=lastGetTime,proto3" json:"last_get_time,omitempty"`          // "last_get_time"
	DiscussInfoSeq uint64 `protobuf:"varint,5,opt,name=discuss_info_seq,json=discussInfoSeq,proto3" json:"discuss_info_seq,omitempty"` // "discuss_info_seq"
	Filter         uint32 `protobuf:"varint,6,opt,name=filter,proto3" json:"filter,omitempty"`                                         // "filter" Enum
	MemberSeq      uint64 `protobuf:"varint,7,opt,name=member_seq,json=memberSeq,proto3" json:"member_seq,omitempty"`                  // "member_seq"
}

func (x *MessageService_GetDiscussRequest) Reset() {
	*x = MessageService_GetDiscussRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetDiscussRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetDiscussRequest) ProtoMessage() {}

func (x *MessageService_GetDiscussRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetDiscussRequest.ProtoReflect.Descriptor instead.
func (*MessageService_GetDiscussRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 32}
}

func (x *MessageService_GetDiscussRequest) GetDiscussUin() uint64 {
	if x != nil {
		return x.DiscussUin
	}
	return 0
}

func (x *MessageService_GetDiscussRequest) GetEndSeq() uint64 {
	if x != nil {
		return x.EndSeq
	}
	return 0
}

func (x *MessageService_GetDiscussRequest) GetBeginSeq() uint64 {
	if x != nil {
		return x.BeginSeq
	}
	return 0
}

func (x *MessageService_GetDiscussRequest) GetLastGetTime() uint64 {
	if x != nil {
		return x.LastGetTime
	}
	return 0
}

func (x *MessageService_GetDiscussRequest) GetDiscussInfoSeq() uint64 {
	if x != nil {
		return x.DiscussInfoSeq
	}
	return 0
}

func (x *MessageService_GetDiscussRequest) GetFilter() uint32 {
	if x != nil {
		return x.Filter
	}
	return 0
}

func (x *MessageService_GetDiscussRequest) GetMemberSeq() uint64 {
	if x != nil {
		return x.MemberSeq
	}
	return 0
}

// PbGetDiscussMsgResp
type MessageService_GetDiscussResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         uint32                 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                         // "result"
	ErrorMessage   string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`          // "errmsg"
	DiscussUin     uint64                 `protobuf:"varint,3,opt,name=discuss_uin,json=discussUin,proto3" json:"discuss_uin,omitempty"`               // "discuss_uin"
	ReturnEndSeq   uint64                 `protobuf:"varint,4,opt,name=return_end_seq,json=returnEndSeq,proto3" json:"return_end_seq,omitempty"`       // "return_end_seq"
	ReturnBeginSeq uint64                 `protobuf:"varint,5,opt,name=return_begin_seq,json=returnBeginSeq,proto3" json:"return_begin_seq,omitempty"` // "return_begin_seq"
	Item           *MessageCommon_Message `protobuf:"bytes,6,opt,name=item,proto3" json:"item,omitempty"`                                              // "msg"
	LastGetTime    uint64                 `protobuf:"varint,7,opt,name=last_get_time,json=lastGetTime,proto3" json:"last_get_time,omitempty"`          // "last_get_time"
	DiscussInfoSeq uint64                 `protobuf:"varint,8,opt,name=discuss_info_seq,json=discussInfoSeq,proto3" json:"discuss_info_seq,omitempty"` // "discuss_info_seq"
}

func (x *MessageService_GetDiscussResponse) Reset() {
	*x = MessageService_GetDiscussResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetDiscussResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetDiscussResponse) ProtoMessage() {}

func (x *MessageService_GetDiscussResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetDiscussResponse.ProtoReflect.Descriptor instead.
func (*MessageService_GetDiscussResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 33}
}

func (x *MessageService_GetDiscussResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_GetDiscussResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_GetDiscussResponse) GetDiscussUin() uint64 {
	if x != nil {
		return x.DiscussUin
	}
	return 0
}

func (x *MessageService_GetDiscussResponse) GetReturnEndSeq() uint64 {
	if x != nil {
		return x.ReturnEndSeq
	}
	return 0
}

func (x *MessageService_GetDiscussResponse) GetReturnBeginSeq() uint64 {
	if x != nil {
		return x.ReturnBeginSeq
	}
	return 0
}

func (x *MessageService_GetDiscussResponse) GetItem() *MessageCommon_Message {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *MessageService_GetDiscussResponse) GetLastGetTime() uint64 {
	if x != nil {
		return x.LastGetTime
	}
	return 0
}

func (x *MessageService_GetDiscussResponse) GetDiscussInfoSeq() uint64 {
	if x != nil {
		return x.DiscussInfoSeq
	}
	return 0
}

// PbGetGroupMsgReq
type MessageService_GetGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode       uint64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`                     // "group_code"
	BeginSeq        uint64 `protobuf:"varint,2,opt,name=begin_seq,json=beginSeq,proto3" json:"begin_seq,omitempty"`                        // "begin_seq"
	EndSeq          uint64 `protobuf:"varint,3,opt,name=end_seq,json=endSeq,proto3" json:"end_seq,omitempty"`                              // "end_seq"
	Filter          uint32 `protobuf:"varint,4,opt,name=filter,proto3" json:"filter,omitempty"`                                            // "filter" Enum
	MemberSeq       uint64 `protobuf:"varint,5,opt,name=member_seq,json=memberSeq,proto3" json:"member_seq,omitempty"`                     // "member_seq"
	PublicGroup     bool   `protobuf:"varint,6,opt,name=public_group,json=publicGroup,proto3" json:"public_group,omitempty"`               // "public_group"
	ShieldFlag      uint32 `protobuf:"varint,7,opt,name=shield_flag,json=shieldFlag,proto3" json:"shield_flag,omitempty"`                  // "shield_flag"
	SaveTrafficFlag uint32 `protobuf:"varint,8,opt,name=save_traffic_flag,json=saveTrafficFlag,proto3" json:"save_traffic_flag,omitempty"` // "save_traffic_flag"
}

func (x *MessageService_GetGroupRequest) Reset() {
	*x = MessageService_GetGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetGroupRequest) ProtoMessage() {}

func (x *MessageService_GetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetGroupRequest.ProtoReflect.Descriptor instead.
func (*MessageService_GetGroupRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 34}
}

func (x *MessageService_GetGroupRequest) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *MessageService_GetGroupRequest) GetBeginSeq() uint64 {
	if x != nil {
		return x.BeginSeq
	}
	return 0
}

func (x *MessageService_GetGroupRequest) GetEndSeq() uint64 {
	if x != nil {
		return x.EndSeq
	}
	return 0
}

func (x *MessageService_GetGroupRequest) GetFilter() uint32 {
	if x != nil {
		return x.Filter
	}
	return 0
}

func (x *MessageService_GetGroupRequest) GetMemberSeq() uint64 {
	if x != nil {
		return x.MemberSeq
	}
	return 0
}

func (x *MessageService_GetGroupRequest) GetPublicGroup() bool {
	if x != nil {
		return x.PublicGroup
	}
	return false
}

func (x *MessageService_GetGroupRequest) GetShieldFlag() uint32 {
	if x != nil {
		return x.ShieldFlag
	}
	return 0
}

func (x *MessageService_GetGroupRequest) GetSaveTrafficFlag() uint32 {
	if x != nil {
		return x.SaveTrafficFlag
	}
	return 0
}

// PbGetGroupMsgResp
type MessageService_GetGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result         uint32                 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                         // "result"
	ErrorMessage   string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`          // "errmsg"
	GroupCode      uint64                 `protobuf:"varint,3,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`                  // "group_code"
	ReturnBeginSeq uint64                 `protobuf:"varint,4,opt,name=return_begin_seq,json=returnBeginSeq,proto3" json:"return_begin_seq,omitempty"` // "return_begin_seq"
	ReturnEndSeq   uint64                 `protobuf:"varint,5,opt,name=return_end_seq,json=returnEndSeq,proto3" json:"return_end_seq,omitempty"`       // "return_end_seq"
	Item           *MessageCommon_Message `protobuf:"bytes,6,opt,name=item,proto3" json:"item,omitempty"`                                              // "msg"
}

func (x *MessageService_GetGroupResponse) Reset() {
	*x = MessageService_GetGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetGroupResponse) ProtoMessage() {}

func (x *MessageService_GetGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetGroupResponse.ProtoReflect.Descriptor instead.
func (*MessageService_GetGroupResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 35}
}

func (x *MessageService_GetGroupResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_GetGroupResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_GetGroupResponse) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *MessageService_GetGroupResponse) GetReturnBeginSeq() uint64 {
	if x != nil {
		return x.ReturnBeginSeq
	}
	return 0
}

func (x *MessageService_GetGroupResponse) GetReturnEndSeq() uint64 {
	if x != nil {
		return x.ReturnEndSeq
	}
	return 0
}

func (x *MessageService_GetGroupResponse) GetItem() *MessageCommon_Message {
	if x != nil {
		return x.Item
	}
	return nil
}

// PbGetOneDayRoamMsgReq
type MessageService_GetRoamingOneDayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerUin     uint64 `protobuf:"varint,1,opt,name=peer_uin,json=peerUin,proto3" json:"peer_uin,omitempty"`             // "peer_uin"
	LastMsgtime uint64 `protobuf:"varint,2,opt,name=last_msgtime,json=lastMsgtime,proto3" json:"last_msgtime,omitempty"` // "last_msgtime"
	Random      uint64 `protobuf:"varint,3,opt,name=random,proto3" json:"random,omitempty"`                              // "random"
	ReadCnt     uint32 `protobuf:"varint,4,opt,name=read_cnt,json=readCnt,proto3" json:"read_cnt,omitempty"`             // "read_cnt"
}

func (x *MessageService_GetRoamingOneDayRequest) Reset() {
	*x = MessageService_GetRoamingOneDayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetRoamingOneDayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetRoamingOneDayRequest) ProtoMessage() {}

func (x *MessageService_GetRoamingOneDayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetRoamingOneDayRequest.ProtoReflect.Descriptor instead.
func (*MessageService_GetRoamingOneDayRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 36}
}

func (x *MessageService_GetRoamingOneDayRequest) GetPeerUin() uint64 {
	if x != nil {
		return x.PeerUin
	}
	return 0
}

func (x *MessageService_GetRoamingOneDayRequest) GetLastMsgtime() uint64 {
	if x != nil {
		return x.LastMsgtime
	}
	return 0
}

func (x *MessageService_GetRoamingOneDayRequest) GetRandom() uint64 {
	if x != nil {
		return x.Random
	}
	return 0
}

func (x *MessageService_GetRoamingOneDayRequest) GetReadCnt() uint32 {
	if x != nil {
		return x.ReadCnt
	}
	return 0
}

// PbGetOneDayRoamMsgResp
type MessageService_GetRoamingOneDayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       uint32                 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                // "result"
	ErrorMessage string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // "errmsg"
	PeerUin      uint64                 `protobuf:"varint,3,opt,name=peer_uin,json=peerUin,proto3" json:"peer_uin,omitempty"`               // "peer_uin"
	LastMsgtime  uint64                 `protobuf:"varint,4,opt,name=last_msgtime,json=lastMsgtime,proto3" json:"last_msgtime,omitempty"`   // "last_msgtime"
	Random       uint64                 `protobuf:"varint,5,opt,name=random,proto3" json:"random,omitempty"`                                // "random"
	Item         *MessageCommon_Message `protobuf:"bytes,6,opt,name=item,proto3" json:"item,omitempty"`                                     // "msg"
	Iscomplete   uint32                 `protobuf:"varint,7,opt,name=iscomplete,proto3" json:"iscomplete,omitempty"`                        // "iscomplete"
}

func (x *MessageService_GetRoamingOneDayResponse) Reset() {
	*x = MessageService_GetRoamingOneDayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetRoamingOneDayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetRoamingOneDayResponse) ProtoMessage() {}

func (x *MessageService_GetRoamingOneDayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetRoamingOneDayResponse.ProtoReflect.Descriptor instead.
func (*MessageService_GetRoamingOneDayResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 37}
}

func (x *MessageService_GetRoamingOneDayResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_GetRoamingOneDayResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_GetRoamingOneDayResponse) GetPeerUin() uint64 {
	if x != nil {
		return x.PeerUin
	}
	return 0
}

func (x *MessageService_GetRoamingOneDayResponse) GetLastMsgtime() uint64 {
	if x != nil {
		return x.LastMsgtime
	}
	return 0
}

func (x *MessageService_GetRoamingOneDayResponse) GetRandom() uint64 {
	if x != nil {
		return x.Random
	}
	return 0
}

func (x *MessageService_GetRoamingOneDayResponse) GetItem() *MessageCommon_Message {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *MessageService_GetRoamingOneDayResponse) GetIscomplete() uint32 {
	if x != nil {
		return x.Iscomplete
	}
	return 0
}

// PbGetRoamMsgReq
type MessageService_GetRoamingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerUin      uint64 `protobuf:"varint,1,opt,name=peer_uin,json=peerUin,proto3" json:"peer_uin,omitempty"`                // "peer_uin"
	LastMsgtime  uint64 `protobuf:"varint,2,opt,name=last_msgtime,json=lastMsgtime,proto3" json:"last_msgtime,omitempty"`    // "last_msgtime"
	Random       uint64 `protobuf:"varint,3,opt,name=random,proto3" json:"random,omitempty"`                                 // "random"
	ReadCnt      uint32 `protobuf:"varint,4,opt,name=read_cnt,json=readCnt,proto3" json:"read_cnt,omitempty"`                // "read_cnt"
	CheckPwd     uint32 `protobuf:"varint,5,opt,name=check_pwd,json=checkPwd,proto3" json:"check_pwd,omitempty"`             // "check_pwd"
	Sig          []byte `protobuf:"bytes,6,opt,name=sig,proto3" json:"sig,omitempty"`                                        // "sig"
	Pwd          []byte `protobuf:"bytes,7,opt,name=pwd,proto3" json:"pwd,omitempty"`                                        // "pwd"
	Subcmd       uint32 `protobuf:"varint,8,opt,name=subcmd,proto3" json:"subcmd,omitempty"`                                 // "subcmd"
	BeginMsgtime uint64 `protobuf:"varint,9,opt,name=begin_msgtime,json=beginMsgtime,proto3" json:"begin_msgtime,omitempty"` // "begin_msgtime"
	ReqType      uint32 `protobuf:"varint,10,opt,name=req_type,json=reqType,proto3" json:"req_type,omitempty"`               // "req_type"
}

func (x *MessageService_GetRoamingRequest) Reset() {
	*x = MessageService_GetRoamingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetRoamingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetRoamingRequest) ProtoMessage() {}

func (x *MessageService_GetRoamingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetRoamingRequest.ProtoReflect.Descriptor instead.
func (*MessageService_GetRoamingRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 38}
}

func (x *MessageService_GetRoamingRequest) GetPeerUin() uint64 {
	if x != nil {
		return x.PeerUin
	}
	return 0
}

func (x *MessageService_GetRoamingRequest) GetLastMsgtime() uint64 {
	if x != nil {
		return x.LastMsgtime
	}
	return 0
}

func (x *MessageService_GetRoamingRequest) GetRandom() uint64 {
	if x != nil {
		return x.Random
	}
	return 0
}

func (x *MessageService_GetRoamingRequest) GetReadCnt() uint32 {
	if x != nil {
		return x.ReadCnt
	}
	return 0
}

func (x *MessageService_GetRoamingRequest) GetCheckPwd() uint32 {
	if x != nil {
		return x.CheckPwd
	}
	return 0
}

func (x *MessageService_GetRoamingRequest) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *MessageService_GetRoamingRequest) GetPwd() []byte {
	if x != nil {
		return x.Pwd
	}
	return nil
}

func (x *MessageService_GetRoamingRequest) GetSubcmd() uint32 {
	if x != nil {
		return x.Subcmd
	}
	return 0
}

func (x *MessageService_GetRoamingRequest) GetBeginMsgtime() uint64 {
	if x != nil {
		return x.BeginMsgtime
	}
	return 0
}

func (x *MessageService_GetRoamingRequest) GetReqType() uint32 {
	if x != nil {
		return x.ReqType
	}
	return 0
}

// PbGetRoamMsgResp
type MessageService_GetRoamingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       uint32                 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                // "result"
	ErrorMessage string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // "errmsg"
	PeerUin      uint64                 `protobuf:"varint,3,opt,name=peer_uin,json=peerUin,proto3" json:"peer_uin,omitempty"`               // "peer_uin"
	LastMsgtime  uint64                 `protobuf:"varint,4,opt,name=last_msgtime,json=lastMsgtime,proto3" json:"last_msgtime,omitempty"`   // "last_msgtime"
	Random       uint64                 `protobuf:"varint,5,opt,name=random,proto3" json:"random,omitempty"`                                // "random"
	Item         *MessageCommon_Message `protobuf:"bytes,6,opt,name=item,proto3" json:"item,omitempty"`                                     // "msg"
	Sig          []byte                 `protobuf:"bytes,7,opt,name=sig,proto3" json:"sig,omitempty"`                                       // "sig"
}

func (x *MessageService_GetRoamingResponse) Reset() {
	*x = MessageService_GetRoamingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetRoamingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetRoamingResponse) ProtoMessage() {}

func (x *MessageService_GetRoamingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetRoamingResponse.ProtoReflect.Descriptor instead.
func (*MessageService_GetRoamingResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 39}
}

func (x *MessageService_GetRoamingResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_GetRoamingResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_GetRoamingResponse) GetPeerUin() uint64 {
	if x != nil {
		return x.PeerUin
	}
	return 0
}

func (x *MessageService_GetRoamingResponse) GetLastMsgtime() uint64 {
	if x != nil {
		return x.LastMsgtime
	}
	return 0
}

func (x *MessageService_GetRoamingResponse) GetRandom() uint64 {
	if x != nil {
		return x.Random
	}
	return 0
}

func (x *MessageService_GetRoamingResponse) GetItem() *MessageCommon_Message {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *MessageService_GetRoamingResponse) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

// PbBindUinUnReadMsgNumReq
type MessageService_GetUnreadBindUinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BindUin    uint64 `protobuf:"varint,1,opt,name=bind_uin,json=bindUin,proto3" json:"bind_uin,omitempty"`         // "bind_uin"
	SyncCookie []byte `protobuf:"bytes,2,opt,name=sync_cookie,json=syncCookie,proto3" json:"sync_cookie,omitempty"` // "sync_cookie"
}

func (x *MessageService_GetUnreadBindUinRequest) Reset() {
	*x = MessageService_GetUnreadBindUinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadBindUinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadBindUinRequest) ProtoMessage() {}

func (x *MessageService_GetUnreadBindUinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadBindUinRequest.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadBindUinRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 40}
}

func (x *MessageService_GetUnreadBindUinRequest) GetBindUin() uint64 {
	if x != nil {
		return x.BindUin
	}
	return 0
}

func (x *MessageService_GetUnreadBindUinRequest) GetSyncCookie() []byte {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

// PbBindUinUnReadMsgNumResp
type MessageService_GetUnreadBindUinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                // "result"
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // "errmsg"
	BindUin      uint64 `protobuf:"varint,3,opt,name=bind_uin,json=bindUin,proto3" json:"bind_uin,omitempty"`               // "bind_uin"
	MsgNum       uint32 `protobuf:"varint,4,opt,name=msg_num,json=msgNum,proto3" json:"msg_num,omitempty"`                  // "msg_num"
}

func (x *MessageService_GetUnreadBindUinResponse) Reset() {
	*x = MessageService_GetUnreadBindUinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadBindUinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadBindUinResponse) ProtoMessage() {}

func (x *MessageService_GetUnreadBindUinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadBindUinResponse.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadBindUinResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 41}
}

func (x *MessageService_GetUnreadBindUinResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_GetUnreadBindUinResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_GetUnreadBindUinResponse) GetBindUin() uint64 {
	if x != nil {
		return x.BindUin
	}
	return 0
}

func (x *MessageService_GetUnreadBindUinResponse) GetMsgNum() uint32 {
	if x != nil {
		return x.MsgNum
	}
	return 0
}

// PbC2CUnReadMsgNumReq
type MessageService_GetUnreadC2CRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageService_GetUnreadC2CRequest) Reset() {
	*x = MessageService_GetUnreadC2CRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadC2CRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadC2CRequest) ProtoMessage() {}

func (x *MessageService_GetUnreadC2CRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadC2CRequest.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadC2CRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 42}
}

// PbC2CUnReadMsgNumResp
type MessageService_GetUnreadC2CResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                // "result"
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // "errmsg"
	MsgNum       uint32 `protobuf:"varint,3,opt,name=msg_num,json=msgNum,proto3" json:"msg_num,omitempty"`                  // "msg_num"
}

func (x *MessageService_GetUnreadC2CResponse) Reset() {
	*x = MessageService_GetUnreadC2CResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadC2CResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadC2CResponse) ProtoMessage() {}

func (x *MessageService_GetUnreadC2CResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadC2CResponse.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadC2CResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 43}
}

func (x *MessageService_GetUnreadC2CResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_GetUnreadC2CResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_GetUnreadC2CResponse) GetMsgNum() uint32 {
	if x != nil {
		return x.MsgNum
	}
	return 0
}

// PbPullDiscussMsgSeqReq
type MessageService_GetUnreadDiscussRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscussInfoReq []*MessageService_GetUnreadDiscussRequest_DiscussInfoReq `protobuf:"bytes,1,rep,name=discuss_info_req,json=discussInfoReq,proto3" json:"discuss_info_req,omitempty"` // "discuss_info_req"
}

func (x *MessageService_GetUnreadDiscussRequest) Reset() {
	*x = MessageService_GetUnreadDiscussRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadDiscussRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadDiscussRequest) ProtoMessage() {}

func (x *MessageService_GetUnreadDiscussRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadDiscussRequest.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadDiscussRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 44}
}

func (x *MessageService_GetUnreadDiscussRequest) GetDiscussInfoReq() []*MessageService_GetUnreadDiscussRequest_DiscussInfoReq {
	if x != nil {
		return x.DiscussInfoReq
	}
	return nil
}

// PbPullDiscussMsgSeqResp
type MessageService_GetUnreadDiscussResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result          uint32                                                     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                           // "result"
	ErrorMessage    string                                                     `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`            // "errmsg"
	DiscussInfoResp []*MessageService_GetUnreadDiscussResponse_DiscussInfoResp `protobuf:"bytes,3,rep,name=discuss_info_resp,json=discussInfoResp,proto3" json:"discuss_info_resp,omitempty"` // "discuss_info_resp"
}

func (x *MessageService_GetUnreadDiscussResponse) Reset() {
	*x = MessageService_GetUnreadDiscussResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadDiscussResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadDiscussResponse) ProtoMessage() {}

func (x *MessageService_GetUnreadDiscussResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadDiscussResponse.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadDiscussResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 45}
}

func (x *MessageService_GetUnreadDiscussResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_GetUnreadDiscussResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_GetUnreadDiscussResponse) GetDiscussInfoResp() []*MessageService_GetUnreadDiscussResponse_DiscussInfoResp {
	if x != nil {
		return x.DiscussInfoResp
	}
	return nil
}

// PbPullGroupMsgSeqReq
type MessageService_GetUnreadGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MessageService_GetUnreadGroupRequest_GroupInfoReq `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // "group_info_req"
}

func (x *MessageService_GetUnreadGroupRequest) Reset() {
	*x = MessageService_GetUnreadGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadGroupRequest) ProtoMessage() {}

func (x *MessageService_GetUnreadGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadGroupRequest.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadGroupRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 46}
}

func (x *MessageService_GetUnreadGroupRequest) GetItems() []*MessageService_GetUnreadGroupRequest_GroupInfoReq {
	if x != nil {
		return x.Items
	}
	return nil
}

// PbPullGroupMsgSeqResp
type MessageService_GetUnreadGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       uint32                                                 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                // "result"
	ErrorMessage string                                                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // "errmsg"
	Items        []*MessageService_GetUnreadGroupResponse_GroupInfoResp `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`                                   // "group_info_resp"
}

func (x *MessageService_GetUnreadGroupResponse) Reset() {
	*x = MessageService_GetUnreadGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadGroupResponse) ProtoMessage() {}

func (x *MessageService_GetUnreadGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadGroupResponse.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadGroupResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 47}
}

func (x *MessageService_GetUnreadGroupResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_GetUnreadGroupResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_GetUnreadGroupResponse) GetItems() []*MessageService_GetUnreadGroupResponse_GroupInfoResp {
	if x != nil {
		return x.Items
	}
	return nil
}

// PbThirdQQUnReadMsgNumReq
type MessageService_GetUnreadThirdQQRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThirdqqReqInfo []*MessageService_GetUnreadThirdQQRequest_ThirdQQReqInfo `protobuf:"bytes,1,rep,name=thirdqq_req_info,json=thirdqqReqInfo,proto3" json:"thirdqq_req_info,omitempty"` // "thirdqq_req_info"
	Source         uint32                                                   `protobuf:"varint,2,opt,name=source,proto3" json:"source,omitempty"`                                        // "source"
}

func (x *MessageService_GetUnreadThirdQQRequest) Reset() {
	*x = MessageService_GetUnreadThirdQQRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadThirdQQRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadThirdQQRequest) ProtoMessage() {}

func (x *MessageService_GetUnreadThirdQQRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadThirdQQRequest.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadThirdQQRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 48}
}

func (x *MessageService_GetUnreadThirdQQRequest) GetThirdqqReqInfo() []*MessageService_GetUnreadThirdQQRequest_ThirdQQReqInfo {
	if x != nil {
		return x.ThirdqqReqInfo
	}
	return nil
}

func (x *MessageService_GetUnreadThirdQQRequest) GetSource() uint32 {
	if x != nil {
		return x.Source
	}
	return 0
}

// PbThirdQQUnReadMsgNumResp
type MessageService_GetUnreadThirdQQResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result          uint32                                                     `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                           // "result"
	ErrorMessage    string                                                     `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`            // "errmsg"
	ThirdqqRespInfo []*MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo `protobuf:"bytes,3,rep,name=thirdqq_resp_info,json=thirdqqRespInfo,proto3" json:"thirdqq_resp_info,omitempty"` // "thirdqq_resp_info"
	Interval        uint32                                                     `protobuf:"varint,4,opt,name=interval,proto3" json:"interval,omitempty"`                                       // "interval"
}

func (x *MessageService_GetUnreadThirdQQResponse) Reset() {
	*x = MessageService_GetUnreadThirdQQResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadThirdQQResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadThirdQQResponse) ProtoMessage() {}

func (x *MessageService_GetUnreadThirdQQResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadThirdQQResponse.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadThirdQQResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 49}
}

func (x *MessageService_GetUnreadThirdQQResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_GetUnreadThirdQQResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_GetUnreadThirdQQResponse) GetThirdqqRespInfo() []*MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo {
	if x != nil {
		return x.ThirdqqRespInfo
	}
	return nil
}

func (x *MessageService_GetUnreadThirdQQResponse) GetInterval() uint32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

// PbUnReadMsgSeqReq
type MessageService_GetUnreadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	C2C     *MessageService_GetUnreadC2CRequest       `protobuf:"bytes,1,opt,name=c2c,proto3" json:"c2c,omitempty"`                        // "c2c_unread_info"
	BindUin []*MessageService_GetUnreadBindUinRequest `protobuf:"bytes,2,rep,name=bind_uin,json=bindUin,proto3" json:"bind_uin,omitempty"` // "binduin_unread_info"
	Group   *MessageService_GetUnreadGroupRequest     `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`                    // "group_unread_info"
	Discuss *MessageService_GetUnreadDiscussRequest   `protobuf:"bytes,4,opt,name=discuss,proto3" json:"discuss,omitempty"`                // "discuss_unread_info"
	ThirdQq *MessageService_GetUnreadThirdQQRequest   `protobuf:"bytes,5,opt,name=third_qq,json=thirdQq,proto3" json:"third_qq,omitempty"` // "thirdqq_unread_info"
}

func (x *MessageService_GetUnreadRequest) Reset() {
	*x = MessageService_GetUnreadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadRequest) ProtoMessage() {}

func (x *MessageService_GetUnreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadRequest.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 50}
}

func (x *MessageService_GetUnreadRequest) GetC2C() *MessageService_GetUnreadC2CRequest {
	if x != nil {
		return x.C2C
	}
	return nil
}

func (x *MessageService_GetUnreadRequest) GetBindUin() []*MessageService_GetUnreadBindUinRequest {
	if x != nil {
		return x.BindUin
	}
	return nil
}

func (x *MessageService_GetUnreadRequest) GetGroup() *MessageService_GetUnreadGroupRequest {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *MessageService_GetUnreadRequest) GetDiscuss() *MessageService_GetUnreadDiscussRequest {
	if x != nil {
		return x.Discuss
	}
	return nil
}

func (x *MessageService_GetUnreadRequest) GetThirdQq() *MessageService_GetUnreadThirdQQRequest {
	if x != nil {
		return x.ThirdQq
	}
	return nil
}

// PbUnReadMsgSeqResp
type MessageService_GetUnreadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	C2C     *MessageService_GetUnreadC2CResponse       `protobuf:"bytes,1,opt,name=c2c,proto3" json:"c2c,omitempty"`                        // "c2c_unread_info"
	BindUin []*MessageService_GetUnreadBindUinResponse `protobuf:"bytes,2,rep,name=bind_uin,json=bindUin,proto3" json:"bind_uin,omitempty"` // "binduin_unread_info"
	Group   *MessageService_GetUnreadGroupResponse     `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`                    // "group_unread_info"
	Discuss *MessageService_GetUnreadDiscussResponse   `protobuf:"bytes,4,opt,name=discuss,proto3" json:"discuss,omitempty"`                // "discuss_unread_info"
	ThirdQq *MessageService_GetUnreadThirdQQResponse   `protobuf:"bytes,5,opt,name=third_qq,json=thirdQq,proto3" json:"third_qq,omitempty"` // "thirdqq_unread_info"
}

func (x *MessageService_GetUnreadResponse) Reset() {
	*x = MessageService_GetUnreadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadResponse) ProtoMessage() {}

func (x *MessageService_GetUnreadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadResponse.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 51}
}

func (x *MessageService_GetUnreadResponse) GetC2C() *MessageService_GetUnreadC2CResponse {
	if x != nil {
		return x.C2C
	}
	return nil
}

func (x *MessageService_GetUnreadResponse) GetBindUin() []*MessageService_GetUnreadBindUinResponse {
	if x != nil {
		return x.BindUin
	}
	return nil
}

func (x *MessageService_GetUnreadResponse) GetGroup() *MessageService_GetUnreadGroupResponse {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *MessageService_GetUnreadResponse) GetDiscuss() *MessageService_GetUnreadDiscussResponse {
	if x != nil {
		return x.Discuss
	}
	return nil
}

func (x *MessageService_GetUnreadResponse) GetThirdQq() *MessageService_GetUnreadThirdQQResponse {
	if x != nil {
		return x.ThirdQq
	}
	return nil
}

// PbBindUinMsgReadedConfirmReq
type MessageService_ReportReadedBindUinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncCookie []byte `protobuf:"bytes,1,opt,name=sync_cookie,json=syncCookie,proto3" json:"sync_cookie,omitempty"` // "sync_cookie"
	BindUin    uint64 `protobuf:"varint,2,opt,name=bind_uin,json=bindUin,proto3" json:"bind_uin,omitempty"`         // "bind_uin"
}

func (x *MessageService_ReportReadedBindUinRequest) Reset() {
	*x = MessageService_ReportReadedBindUinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_ReportReadedBindUinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_ReportReadedBindUinRequest) ProtoMessage() {}

func (x *MessageService_ReportReadedBindUinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_ReportReadedBindUinRequest.ProtoReflect.Descriptor instead.
func (*MessageService_ReportReadedBindUinRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 52}
}

func (x *MessageService_ReportReadedBindUinRequest) GetSyncCookie() []byte {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

func (x *MessageService_ReportReadedBindUinRequest) GetBindUin() uint64 {
	if x != nil {
		return x.BindUin
	}
	return 0
}

// PbBindUinMsgReadedConfirmResp
type MessageService_ReportReadedBindUinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                // "result"
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // "errmsg"
	SyncCookie   []byte `protobuf:"bytes,3,opt,name=sync_cookie,json=syncCookie,proto3" json:"sync_cookie,omitempty"`       // "sync_cookie"
	BindUin      uint64 `protobuf:"varint,4,opt,name=bind_uin,json=bindUin,proto3" json:"bind_uin,omitempty"`               // "bind_uin"
}

func (x *MessageService_ReportReadedBindUinResponse) Reset() {
	*x = MessageService_ReportReadedBindUinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_ReportReadedBindUinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_ReportReadedBindUinResponse) ProtoMessage() {}

func (x *MessageService_ReportReadedBindUinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_ReportReadedBindUinResponse.ProtoReflect.Descriptor instead.
func (*MessageService_ReportReadedBindUinResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 53}
}

func (x *MessageService_ReportReadedBindUinResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_ReportReadedBindUinResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_ReportReadedBindUinResponse) GetSyncCookie() []byte {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

func (x *MessageService_ReportReadedBindUinResponse) GetBindUin() uint64 {
	if x != nil {
		return x.BindUin
	}
	return 0
}

// PbC2CReadedReportReq
type MessageService_ReportReadedC2CRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncCookie []byte                                                   `protobuf:"bytes,1,opt,name=sync_cookie,json=syncCookie,proto3" json:"sync_cookie,omitempty"` // "sync_cookie"
	Items      []*MessageService_ReportReadedC2CRequest_UinPairReadInfo `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`                             // "pair_info"
}

func (x *MessageService_ReportReadedC2CRequest) Reset() {
	*x = MessageService_ReportReadedC2CRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_ReportReadedC2CRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_ReportReadedC2CRequest) ProtoMessage() {}

func (x *MessageService_ReportReadedC2CRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_ReportReadedC2CRequest.ProtoReflect.Descriptor instead.
func (*MessageService_ReportReadedC2CRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 54}
}

func (x *MessageService_ReportReadedC2CRequest) GetSyncCookie() []byte {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

func (x *MessageService_ReportReadedC2CRequest) GetItems() []*MessageService_ReportReadedC2CRequest_UinPairReadInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

// PbC2CReadedReportResp
type MessageService_ReportReadedC2CResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                // "result"
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // "errmsg"
	SyncCookie   []byte `protobuf:"bytes,3,opt,name=sync_cookie,json=syncCookie,proto3" json:"sync_cookie,omitempty"`       // "sync_cookie"
}

func (x *MessageService_ReportReadedC2CResponse) Reset() {
	*x = MessageService_ReportReadedC2CResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_ReportReadedC2CResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_ReportReadedC2CResponse) ProtoMessage() {}

func (x *MessageService_ReportReadedC2CResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_ReportReadedC2CResponse.ProtoReflect.Descriptor instead.
func (*MessageService_ReportReadedC2CResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 55}
}

func (x *MessageService_ReportReadedC2CResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_ReportReadedC2CResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_ReportReadedC2CResponse) GetSyncCookie() []byte {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

// PbDiscussReadedReportReq
type MessageService_ReportReadedDiscussRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfUin     uint64 `protobuf:"varint,1,opt,name=conf_uin,json=confUin,proto3" json:"conf_uin,omitempty"`               // "conf_uin"
	LastReadSeq uint64 `protobuf:"varint,2,opt,name=last_read_seq,json=lastReadSeq,proto3" json:"last_read_seq,omitempty"` // "last_read_seq"
}

func (x *MessageService_ReportReadedDiscussRequest) Reset() {
	*x = MessageService_ReportReadedDiscussRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_ReportReadedDiscussRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_ReportReadedDiscussRequest) ProtoMessage() {}

func (x *MessageService_ReportReadedDiscussRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_ReportReadedDiscussRequest.ProtoReflect.Descriptor instead.
func (*MessageService_ReportReadedDiscussRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 56}
}

func (x *MessageService_ReportReadedDiscussRequest) GetConfUin() uint64 {
	if x != nil {
		return x.ConfUin
	}
	return 0
}

func (x *MessageService_ReportReadedDiscussRequest) GetLastReadSeq() uint64 {
	if x != nil {
		return x.LastReadSeq
	}
	return 0
}

// PbDiscussReadedReportResp
type MessageService_ReportReadedDiscussResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                // "result"
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // "errmsg"
	ConfUin      uint64 `protobuf:"varint,3,opt,name=conf_uin,json=confUin,proto3" json:"conf_uin,omitempty"`               // "conf_uin"
	MemberSeq    uint64 `protobuf:"varint,4,opt,name=member_seq,json=memberSeq,proto3" json:"member_seq,omitempty"`         // "member_seq"
	ConfSeq      uint64 `protobuf:"varint,5,opt,name=conf_seq,json=confSeq,proto3" json:"conf_seq,omitempty"`               // "conf_seq"
}

func (x *MessageService_ReportReadedDiscussResponse) Reset() {
	*x = MessageService_ReportReadedDiscussResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_ReportReadedDiscussResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_ReportReadedDiscussResponse) ProtoMessage() {}

func (x *MessageService_ReportReadedDiscussResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_ReportReadedDiscussResponse.ProtoReflect.Descriptor instead.
func (*MessageService_ReportReadedDiscussResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 57}
}

func (x *MessageService_ReportReadedDiscussResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_ReportReadedDiscussResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_ReportReadedDiscussResponse) GetConfUin() uint64 {
	if x != nil {
		return x.ConfUin
	}
	return 0
}

func (x *MessageService_ReportReadedDiscussResponse) GetMemberSeq() uint64 {
	if x != nil {
		return x.MemberSeq
	}
	return 0
}

func (x *MessageService_ReportReadedDiscussResponse) GetConfSeq() uint64 {
	if x != nil {
		return x.ConfSeq
	}
	return 0
}

// PbGroupReadedReportReq
type MessageService_ReportReadedGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode   uint64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`         // "group_code"
	LastReadSeq uint64 `protobuf:"varint,2,opt,name=last_read_seq,json=lastReadSeq,proto3" json:"last_read_seq,omitempty"` // "last_read_seq"
}

func (x *MessageService_ReportReadedGroupRequest) Reset() {
	*x = MessageService_ReportReadedGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_ReportReadedGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_ReportReadedGroupRequest) ProtoMessage() {}

func (x *MessageService_ReportReadedGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_ReportReadedGroupRequest.ProtoReflect.Descriptor instead.
func (*MessageService_ReportReadedGroupRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 58}
}

func (x *MessageService_ReportReadedGroupRequest) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *MessageService_ReportReadedGroupRequest) GetLastReadSeq() uint64 {
	if x != nil {
		return x.LastReadSeq
	}
	return 0
}

// PbGroupReadedReportResp
type MessageService_ReportReadedGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                // "result"
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // "errmsg"
	GroupCode    uint64 `protobuf:"varint,3,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`         // "group_code"
	MemberSeq    uint64 `protobuf:"varint,4,opt,name=member_seq,json=memberSeq,proto3" json:"member_seq,omitempty"`         // "member_seq"
	GroupMsgSeq  uint64 `protobuf:"varint,5,opt,name=group_msg_seq,json=groupMsgSeq,proto3" json:"group_msg_seq,omitempty"` // "group_msg_seq"
}

func (x *MessageService_ReportReadedGroupResponse) Reset() {
	*x = MessageService_ReportReadedGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_ReportReadedGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_ReportReadedGroupResponse) ProtoMessage() {}

func (x *MessageService_ReportReadedGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_ReportReadedGroupResponse.ProtoReflect.Descriptor instead.
func (*MessageService_ReportReadedGroupResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 59}
}

func (x *MessageService_ReportReadedGroupResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_ReportReadedGroupResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_ReportReadedGroupResponse) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *MessageService_ReportReadedGroupResponse) GetMemberSeq() uint64 {
	if x != nil {
		return x.MemberSeq
	}
	return 0
}

func (x *MessageService_ReportReadedGroupResponse) GetGroupMsgSeq() uint64 {
	if x != nil {
		return x.GroupMsgSeq
	}
	return 0
}

// PbMsgReadedReportReq
type MessageService_ReportReadedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group   []*MessageService_ReportReadedGroupRequest   `protobuf:"bytes,1,rep,name=group,proto3" json:"group,omitempty"`                    // "grp_read_report"
	C       []*MessageService_ReportReadedDiscussRequest `protobuf:"bytes,2,rep,name=c,proto3" json:"c,omitempty"`                            // "dis_read_report"
	C2C     *MessageService_ReportReadedC2CRequest       `protobuf:"bytes,3,opt,name=c2c,proto3" json:"c2c,omitempty"`                        // "c2c_read_report"
	BindUin *MessageService_ReportReadedBindUinRequest   `protobuf:"bytes,4,opt,name=bind_uin,json=bindUin,proto3" json:"bind_uin,omitempty"` // "bind_uin_read_report"
}

func (x *MessageService_ReportReadedRequest) Reset() {
	*x = MessageService_ReportReadedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_ReportReadedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_ReportReadedRequest) ProtoMessage() {}

func (x *MessageService_ReportReadedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_ReportReadedRequest.ProtoReflect.Descriptor instead.
func (*MessageService_ReportReadedRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 60}
}

func (x *MessageService_ReportReadedRequest) GetGroup() []*MessageService_ReportReadedGroupRequest {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *MessageService_ReportReadedRequest) GetC() []*MessageService_ReportReadedDiscussRequest {
	if x != nil {
		return x.C
	}
	return nil
}

func (x *MessageService_ReportReadedRequest) GetC2C() *MessageService_ReportReadedC2CRequest {
	if x != nil {
		return x.C2C
	}
	return nil
}

func (x *MessageService_ReportReadedRequest) GetBindUin() *MessageService_ReportReadedBindUinRequest {
	if x != nil {
		return x.BindUin
	}
	return nil
}

// PbMsgReadedReportResp
type MessageService_ReportReadedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group   []*MessageService_ReportReadedGroupResponse   `protobuf:"bytes,1,rep,name=group,proto3" json:"group,omitempty"`                    // "grp_read_report"
	Discuss []*MessageService_ReportReadedDiscussResponse `protobuf:"bytes,2,rep,name=discuss,proto3" json:"discuss,omitempty"`                // "dis_read_report"
	C2C     *MessageService_ReportReadedC2CResponse       `protobuf:"bytes,3,opt,name=c2c,proto3" json:"c2c,omitempty"`                        // "c2c_read_report"
	BindUin *MessageService_ReportReadedBindUinResponse   `protobuf:"bytes,4,opt,name=bind_uin,json=bindUin,proto3" json:"bind_uin,omitempty"` // "bind_uin_read_report"
}

func (x *MessageService_ReportReadedResponse) Reset() {
	*x = MessageService_ReportReadedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_ReportReadedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_ReportReadedResponse) ProtoMessage() {}

func (x *MessageService_ReportReadedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_ReportReadedResponse.ProtoReflect.Descriptor instead.
func (*MessageService_ReportReadedResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 61}
}

func (x *MessageService_ReportReadedResponse) GetGroup() []*MessageService_ReportReadedGroupResponse {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *MessageService_ReportReadedResponse) GetDiscuss() []*MessageService_ReportReadedDiscussResponse {
	if x != nil {
		return x.Discuss
	}
	return nil
}

func (x *MessageService_ReportReadedResponse) GetC2C() *MessageService_ReportReadedC2CResponse {
	if x != nil {
		return x.C2C
	}
	return nil
}

func (x *MessageService_ReportReadedResponse) GetBindUin() *MessageService_ReportReadedBindUinResponse {
	if x != nil {
		return x.BindUin
	}
	return nil
}

// PbSearchRoamMsgInCloudReq
type MessageService_SearchRoamingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerializeReqbody []byte `protobuf:"bytes,1,opt,name=serialize_reqbody,json=serializeReqbody,proto3" json:"serialize_reqbody,omitempty"` // "serialize_reqbody"
}

func (x *MessageService_SearchRoamingRequest) Reset() {
	*x = MessageService_SearchRoamingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_SearchRoamingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_SearchRoamingRequest) ProtoMessage() {}

func (x *MessageService_SearchRoamingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_SearchRoamingRequest.ProtoReflect.Descriptor instead.
func (*MessageService_SearchRoamingRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 62}
}

func (x *MessageService_SearchRoamingRequest) GetSerializeReqbody() []byte {
	if x != nil {
		return x.SerializeReqbody
	}
	return nil
}

// PbSearchRoamMsgInCloudResp
type MessageService_SearchRoamingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item             *MessageCommon_Message `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`                                                 // "msg"
	SerializeRspbody []byte                 `protobuf:"bytes,2,opt,name=serialize_rspbody,json=serializeRspbody,proto3" json:"serialize_rspbody,omitempty"` // "serialize_rspbody"
}

func (x *MessageService_SearchRoamingResponse) Reset() {
	*x = MessageService_SearchRoamingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_SearchRoamingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_SearchRoamingResponse) ProtoMessage() {}

func (x *MessageService_SearchRoamingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_SearchRoamingResponse.ProtoReflect.Descriptor instead.
func (*MessageService_SearchRoamingResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 63}
}

func (x *MessageService_SearchRoamingResponse) GetItem() *MessageCommon_Message {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *MessageService_SearchRoamingResponse) GetSerializeRspbody() []byte {
	if x != nil {
		return x.SerializeRspbody
	}
	return nil
}

// PbSendMsgReq
type MessageService_SendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoutingHead     *MessageService_RoutingHead                    `protobuf:"bytes,1,opt,name=routing_head,json=routingHead,proto3" json:"routing_head,omitempty"`                // "routing_head"
	ContentHead     *MessageCommon_ContentHead                     `protobuf:"bytes,2,opt,name=content_head,json=contentHead,proto3" json:"content_head,omitempty"`                // "content_head"
	MessageBody     *IMMessageBody_MessageBody                     `protobuf:"bytes,3,opt,name=message_body,json=messageBody,proto3" json:"message_body,omitempty"`                // "msg_body"
	MessageSeq      int32                                          `protobuf:"varint,4,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`                  // "msg_seq"
	MessageRand     int32                                          `protobuf:"varint,5,opt,name=message_rand,json=messageRand,proto3" json:"message_rand,omitempty"`               // "msg_rand"
	SyncCookie      []byte                                         `protobuf:"bytes,6,opt,name=sync_cookie,json=syncCookie,proto3" json:"sync_cookie,omitempty"`                   // "sync_cookie"
	AppShare        *MessageCommon_AppShareInfo                    `protobuf:"bytes,7,opt,name=app_share,json=appShare,proto3" json:"app_share,omitempty"`                         // "app_share"
	MessageVia      int32                                          `protobuf:"varint,8,opt,name=message_via,json=messageVia,proto3" json:"message_via,omitempty"`                  // "msg_via"
	DataStatist     int32                                          `protobuf:"varint,9,opt,name=data_statist,json=dataStatist,proto3" json:"data_statist,omitempty"`               // "data_statist"
	MultiMsgAssist  *MessageService_SendRequest_MultiMessageAssist `protobuf:"bytes,10,opt,name=multi_msg_assist,json=multiMsgAssist,proto3" json:"multi_msg_assist,omitempty"`    // "multi_msg_assist"
	InputNotifyInfo *MessageService_SendRequest_InputNotifyInfo    `protobuf:"bytes,11,opt,name=input_notify_info,json=inputNotifyInfo,proto3" json:"input_notify_info,omitempty"` // "input_notify_info"
	MessageControl  *MessageControl                                `protobuf:"bytes,12,opt,name=message_control,json=messageControl,proto3" json:"message_control,omitempty"`      // "msg_ctrl"
	ReceiptRequest  *IMReceipt_ReceiptRequest                      `protobuf:"bytes,13,opt,name=receipt_request,json=receiptRequest,proto3" json:"receipt_request,omitempty"`      // "receipt_req"
	MultiSendSeq    uint32                                         `protobuf:"varint,14,opt,name=multi_send_seq,json=multiSendSeq,proto3" json:"multi_send_seq,omitempty"`         // "multi_send_seq"
}

func (x *MessageService_SendRequest) Reset() {
	*x = MessageService_SendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_SendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_SendRequest) ProtoMessage() {}

func (x *MessageService_SendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_SendRequest.ProtoReflect.Descriptor instead.
func (*MessageService_SendRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 64}
}

func (x *MessageService_SendRequest) GetRoutingHead() *MessageService_RoutingHead {
	if x != nil {
		return x.RoutingHead
	}
	return nil
}

func (x *MessageService_SendRequest) GetContentHead() *MessageCommon_ContentHead {
	if x != nil {
		return x.ContentHead
	}
	return nil
}

func (x *MessageService_SendRequest) GetMessageBody() *IMMessageBody_MessageBody {
	if x != nil {
		return x.MessageBody
	}
	return nil
}

func (x *MessageService_SendRequest) GetMessageSeq() int32 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

func (x *MessageService_SendRequest) GetMessageRand() int32 {
	if x != nil {
		return x.MessageRand
	}
	return 0
}

func (x *MessageService_SendRequest) GetSyncCookie() []byte {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

func (x *MessageService_SendRequest) GetAppShare() *MessageCommon_AppShareInfo {
	if x != nil {
		return x.AppShare
	}
	return nil
}

func (x *MessageService_SendRequest) GetMessageVia() int32 {
	if x != nil {
		return x.MessageVia
	}
	return 0
}

func (x *MessageService_SendRequest) GetDataStatist() int32 {
	if x != nil {
		return x.DataStatist
	}
	return 0
}

func (x *MessageService_SendRequest) GetMultiMsgAssist() *MessageService_SendRequest_MultiMessageAssist {
	if x != nil {
		return x.MultiMsgAssist
	}
	return nil
}

func (x *MessageService_SendRequest) GetInputNotifyInfo() *MessageService_SendRequest_InputNotifyInfo {
	if x != nil {
		return x.InputNotifyInfo
	}
	return nil
}

func (x *MessageService_SendRequest) GetMessageControl() *MessageControl {
	if x != nil {
		return x.MessageControl
	}
	return nil
}

func (x *MessageService_SendRequest) GetReceiptRequest() *IMReceipt_ReceiptRequest {
	if x != nil {
		return x.ReceiptRequest
	}
	return nil
}

func (x *MessageService_SendRequest) GetMultiSendSeq() uint32 {
	if x != nil {
		return x.MultiSendSeq
	}
	return 0
}

// PbSendMsgResp
type MessageService_SendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result                int32                                            `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                                            // "result"
	ErrorMessage          string                                           `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                             // "errmsg"
	SendTime              int64                                            `protobuf:"varint,3,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`                                        // "send_time"
	SvrbusyWaitTime       int32                                            `protobuf:"varint,4,opt,name=svrbusy_wait_time,json=svrbusyWaitTime,proto3" json:"svrbusy_wait_time,omitempty"`                 // "uint32_svrbusy_wait_time"
	MsgSendInfo           *MessageService_SendResponse_MessageSendInfo     `protobuf:"bytes,5,opt,name=msg_send_info,json=msgSendInfo,proto3" json:"msg_send_info,omitempty"`                              // "msg_send_info"
	ErrorType             int32                                            `protobuf:"varint,6,opt,name=error_type,json=errorType,proto3" json:"error_type,omitempty"`                                     // "errtype"
	TransSvrInfo          *MessageService_SendResponse_TransportServerInfo `protobuf:"bytes,7,opt,name=trans_svr_info,json=transSvrInfo,proto3" json:"trans_svr_info,omitempty"`                           // "trans_svr_info"
	ReceiptResponse       *IMReceipt_ReceiptResponse                       `protobuf:"bytes,8,opt,name=receipt_response,json=receiptResponse,proto3" json:"receipt_response,omitempty"`                    // "receipt_resp"
	TextAnalysisResult    int32                                            `protobuf:"varint,9,opt,name=text_analysis_result,json=textAnalysisResult,proto3" json:"text_analysis_result,omitempty"`        // "text_analysis_result"
	MsgInfoFlag           int32                                            `protobuf:"varint,10,opt,name=msg_info_flag,json=msgInfoFlag,proto3" json:"msg_info_flag,omitempty"`                            // "uint32_msg_info_flag"
	MsgeleminfoServtype37 []byte                                           `protobuf:"bytes,13,opt,name=msgeleminfo_servtype37,json=msgeleminfoServtype37,proto3" json:"msgeleminfo_servtype37,omitempty"` // "msgeleminfo_servtype37"
}

func (x *MessageService_SendResponse) Reset() {
	*x = MessageService_SendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_SendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_SendResponse) ProtoMessage() {}

func (x *MessageService_SendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_SendResponse.ProtoReflect.Descriptor instead.
func (*MessageService_SendResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 65}
}

func (x *MessageService_SendResponse) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_SendResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_SendResponse) GetSendTime() int64 {
	if x != nil {
		return x.SendTime
	}
	return 0
}

func (x *MessageService_SendResponse) GetSvrbusyWaitTime() int32 {
	if x != nil {
		return x.SvrbusyWaitTime
	}
	return 0
}

func (x *MessageService_SendResponse) GetMsgSendInfo() *MessageService_SendResponse_MessageSendInfo {
	if x != nil {
		return x.MsgSendInfo
	}
	return nil
}

func (x *MessageService_SendResponse) GetErrorType() int32 {
	if x != nil {
		return x.ErrorType
	}
	return 0
}

func (x *MessageService_SendResponse) GetTransSvrInfo() *MessageService_SendResponse_TransportServerInfo {
	if x != nil {
		return x.TransSvrInfo
	}
	return nil
}

func (x *MessageService_SendResponse) GetReceiptResponse() *IMReceipt_ReceiptResponse {
	if x != nil {
		return x.ReceiptResponse
	}
	return nil
}

func (x *MessageService_SendResponse) GetTextAnalysisResult() int32 {
	if x != nil {
		return x.TextAnalysisResult
	}
	return 0
}

func (x *MessageService_SendResponse) GetMsgInfoFlag() int32 {
	if x != nil {
		return x.MsgInfoFlag
	}
	return 0
}

func (x *MessageService_SendResponse) GetMsgeleminfoServtype37() []byte {
	if x != nil {
		return x.MsgeleminfoServtype37
	}
	return nil
}

// PbC2CMsgWithDrawReq
type MessageService_WithdrawC2CRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items           []*MessageService_WithdrawC2CRequest_MessageInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`                                               // "msg_info"
	LongMessageFlag uint32                                           `protobuf:"varint,2,opt,name=long_message_flag,json=longMessageFlag,proto3" json:"long_message_flag,omitempty"` // "uint32_long_message_flag"
	Reserved        []byte                                           `protobuf:"bytes,3,opt,name=reserved,proto3" json:"reserved,omitempty"`                                         // "bytes_reserved"
	SubCmd          uint32                                           `protobuf:"varint,4,opt,name=sub_cmd,json=subCmd,proto3" json:"sub_cmd,omitempty"`                              // "uint32_sub_cmd"
}

func (x *MessageService_WithdrawC2CRequest) Reset() {
	*x = MessageService_WithdrawC2CRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_WithdrawC2CRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_WithdrawC2CRequest) ProtoMessage() {}

func (x *MessageService_WithdrawC2CRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_WithdrawC2CRequest.ProtoReflect.Descriptor instead.
func (*MessageService_WithdrawC2CRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 66}
}

func (x *MessageService_WithdrawC2CRequest) GetItems() []*MessageService_WithdrawC2CRequest_MessageInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *MessageService_WithdrawC2CRequest) GetLongMessageFlag() uint32 {
	if x != nil {
		return x.LongMessageFlag
	}
	return 0
}

func (x *MessageService_WithdrawC2CRequest) GetReserved() []byte {
	if x != nil {
		return x.Reserved
	}
	return nil
}

func (x *MessageService_WithdrawC2CRequest) GetSubCmd() uint32 {
	if x != nil {
		return x.SubCmd
	}
	return 0
}

// PbC2CMsgWithDrawResp
type MessageService_WithdrawC2CResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       uint32                                       `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                // "result"
	ErrorMessage string                                       `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // "errmsg"
	Items        []*MessageService_WithdrawC2CResponse_Status `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`                                   // "msg_status"
	SubCmd       uint32                                       `protobuf:"varint,4,opt,name=sub_cmd,json=subCmd,proto3" json:"sub_cmd,omitempty"`                  // "uint32_sub_cmd"
	Wording      *MessageService_WithdrawWordingInfo          `protobuf:"bytes,5,opt,name=wording,proto3" json:"wording,omitempty"`                               // "msg_wording_info"
}

func (x *MessageService_WithdrawC2CResponse) Reset() {
	*x = MessageService_WithdrawC2CResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_WithdrawC2CResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_WithdrawC2CResponse) ProtoMessage() {}

func (x *MessageService_WithdrawC2CResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_WithdrawC2CResponse.ProtoReflect.Descriptor instead.
func (*MessageService_WithdrawC2CResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 67}
}

func (x *MessageService_WithdrawC2CResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_WithdrawC2CResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_WithdrawC2CResponse) GetItems() []*MessageService_WithdrawC2CResponse_Status {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *MessageService_WithdrawC2CResponse) GetSubCmd() uint32 {
	if x != nil {
		return x.SubCmd
	}
	return 0
}

func (x *MessageService_WithdrawC2CResponse) GetWording() *MessageService_WithdrawWordingInfo {
	if x != nil {
		return x.Wording
	}
	return nil
}

// PbGroupMsgWithDrawReq
type MessageService_WithdrawGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubCmd    uint32                                             `protobuf:"varint,1,opt,name=sub_cmd,json=subCmd,proto3" json:"sub_cmd,omitempty"`          // "uint32_sub_cmd"
	GroupType uint32                                             `protobuf:"varint,2,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"` // "uint32_group_type"
	GroupCode uint64                                             `protobuf:"varint,3,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"` // "uint64_group_code"
	Items     []*MessageService_WithdrawGroupRequest_MessageInfo `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`                           // "msg_list"
	Userdef   []byte                                             `protobuf:"bytes,5,opt,name=userdef,proto3" json:"userdef,omitempty"`                       // "bytes_userdef"
}

func (x *MessageService_WithdrawGroupRequest) Reset() {
	*x = MessageService_WithdrawGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_WithdrawGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_WithdrawGroupRequest) ProtoMessage() {}

func (x *MessageService_WithdrawGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_WithdrawGroupRequest.ProtoReflect.Descriptor instead.
func (*MessageService_WithdrawGroupRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 68}
}

func (x *MessageService_WithdrawGroupRequest) GetSubCmd() uint32 {
	if x != nil {
		return x.SubCmd
	}
	return 0
}

func (x *MessageService_WithdrawGroupRequest) GetGroupType() uint32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

func (x *MessageService_WithdrawGroupRequest) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *MessageService_WithdrawGroupRequest) GetItems() []*MessageService_WithdrawGroupRequest_MessageInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *MessageService_WithdrawGroupRequest) GetUserdef() []byte {
	if x != nil {
		return x.Userdef
	}
	return nil
}

// PbGroupMsgWithDrawResp
type MessageService_WithdrawGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       uint32                                                `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                // "result"
	ErrorMessage string                                                `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // "errmsg"
	SubCmd       uint32                                                `protobuf:"varint,3,opt,name=sub_cmd,json=subCmd,proto3" json:"sub_cmd,omitempty"`                  // "uint32_sub_cmd"
	GroupType    uint32                                                `protobuf:"varint,4,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"`         // "uint32_group_type"
	GroupCode    uint64                                                `protobuf:"varint,5,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`         // "uint64_group_code"
	FailedItems  []*MessageService_WithdrawGroupResponse_MessageResult `protobuf:"bytes,6,rep,name=failed_items,json=failedItems,proto3" json:"failed_items,omitempty"`    // "failed_msg_list"
	Userdef      []byte                                                `protobuf:"bytes,7,opt,name=userdef,proto3" json:"userdef,omitempty"`                               // "bytes_userdef"
	Wording      *MessageService_WithdrawWordingInfo                   `protobuf:"bytes,8,opt,name=wording,proto3" json:"wording,omitempty"`                               // "msg_wording_info"
}

func (x *MessageService_WithdrawGroupResponse) Reset() {
	*x = MessageService_WithdrawGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_WithdrawGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_WithdrawGroupResponse) ProtoMessage() {}

func (x *MessageService_WithdrawGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_WithdrawGroupResponse.ProtoReflect.Descriptor instead.
func (*MessageService_WithdrawGroupResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 69}
}

func (x *MessageService_WithdrawGroupResponse) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_WithdrawGroupResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *MessageService_WithdrawGroupResponse) GetSubCmd() uint32 {
	if x != nil {
		return x.SubCmd
	}
	return 0
}

func (x *MessageService_WithdrawGroupResponse) GetGroupType() uint32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

func (x *MessageService_WithdrawGroupResponse) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *MessageService_WithdrawGroupResponse) GetFailedItems() []*MessageService_WithdrawGroupResponse_MessageResult {
	if x != nil {
		return x.FailedItems
	}
	return nil
}

func (x *MessageService_WithdrawGroupResponse) GetUserdef() []byte {
	if x != nil {
		return x.Userdef
	}
	return nil
}

func (x *MessageService_WithdrawGroupResponse) GetWording() *MessageService_WithdrawWordingInfo {
	if x != nil {
		return x.Wording
	}
	return nil
}

// PbMsgWithDrawReq
type MessageService_WithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	C2C   []*MessageService_WithdrawC2CRequest   `protobuf:"bytes,1,rep,name=c2c,proto3" json:"c2c,omitempty"`     // "c2c_with_draw"
	Group []*MessageService_WithdrawGroupRequest `protobuf:"bytes,2,rep,name=group,proto3" json:"group,omitempty"` // "group_with_draw"
}

func (x *MessageService_WithdrawRequest) Reset() {
	*x = MessageService_WithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_WithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_WithdrawRequest) ProtoMessage() {}

func (x *MessageService_WithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_WithdrawRequest.ProtoReflect.Descriptor instead.
func (*MessageService_WithdrawRequest) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 70}
}

func (x *MessageService_WithdrawRequest) GetC2C() []*MessageService_WithdrawC2CRequest {
	if x != nil {
		return x.C2C
	}
	return nil
}

func (x *MessageService_WithdrawRequest) GetGroup() []*MessageService_WithdrawGroupRequest {
	if x != nil {
		return x.Group
	}
	return nil
}

// PbMsgWithDrawResp
type MessageService_WithdrawResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	C2C   []*MessageService_WithdrawC2CResponse   `protobuf:"bytes,1,rep,name=c2c,proto3" json:"c2c,omitempty"`     // "c2c_with_draw"
	Group []*MessageService_WithdrawGroupResponse `protobuf:"bytes,2,rep,name=group,proto3" json:"group,omitempty"` // "group_with_draw"
}

func (x *MessageService_WithdrawResponse) Reset() {
	*x = MessageService_WithdrawResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_WithdrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_WithdrawResponse) ProtoMessage() {}

func (x *MessageService_WithdrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_WithdrawResponse.ProtoReflect.Descriptor instead.
func (*MessageService_WithdrawResponse) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 71}
}

func (x *MessageService_WithdrawResponse) GetC2C() []*MessageService_WithdrawC2CResponse {
	if x != nil {
		return x.C2C
	}
	return nil
}

func (x *MessageService_WithdrawResponse) GetGroup() []*MessageService_WithdrawGroupResponse {
	if x != nil {
		return x.Group
	}
	return nil
}

// MsgItem
type MessageService_DeleteRequest_MessageItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUin     int64  `protobuf:"varint,1,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`             // "from_uin"
	ToUin       int64  `protobuf:"varint,2,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`                   // "to_uin"
	MessageType int32  `protobuf:"varint,3,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"` // "msg_type"
	MessageSeq  int32  `protobuf:"varint,4,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`    // "msg_seq"
	MessageUid  int64  `protobuf:"varint,5,opt,name=message_uid,json=messageUid,proto3" json:"message_uid,omitempty"`    // "msg_uid"
	Sig         []byte `protobuf:"bytes,7,opt,name=sig,proto3" json:"sig,omitempty"`                                     // "sig"
}

func (x *MessageService_DeleteRequest_MessageItem) Reset() {
	*x = MessageService_DeleteRequest_MessageItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_DeleteRequest_MessageItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_DeleteRequest_MessageItem) ProtoMessage() {}

func (x *MessageService_DeleteRequest_MessageItem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_DeleteRequest_MessageItem.ProtoReflect.Descriptor instead.
func (*MessageService_DeleteRequest_MessageItem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 26, 0}
}

func (x *MessageService_DeleteRequest_MessageItem) GetFromUin() int64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *MessageService_DeleteRequest_MessageItem) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_DeleteRequest_MessageItem) GetMessageType() int32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *MessageService_DeleteRequest_MessageItem) GetMessageSeq() int32 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

func (x *MessageService_DeleteRequest_MessageItem) GetMessageUid() int64 {
	if x != nil {
		return x.MessageUid
	}
	return 0
}

func (x *MessageService_DeleteRequest_MessageItem) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

// C2CMsg
type MessageService_DeleteRoamingRequest_C2CMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUin       int64 `protobuf:"varint,1,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`                   // "from_uin"
	PeerUin       int64 `protobuf:"varint,2,opt,name=peer_uin,json=peerUin,proto3" json:"peer_uin,omitempty"`                   // "peer_uin"
	MessageTime   int64 `protobuf:"varint,3,opt,name=message_time,json=messageTime,proto3" json:"message_time,omitempty"`       // "msg_time"
	MessageRandom int32 `protobuf:"varint,4,opt,name=message_random,json=messageRandom,proto3" json:"message_random,omitempty"` // "msg_random"
	MessageSeq    int32 `protobuf:"varint,5,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`          // "msg_seq"
}

func (x *MessageService_DeleteRoamingRequest_C2CMessage) Reset() {
	*x = MessageService_DeleteRoamingRequest_C2CMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_DeleteRoamingRequest_C2CMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_DeleteRoamingRequest_C2CMessage) ProtoMessage() {}

func (x *MessageService_DeleteRoamingRequest_C2CMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_DeleteRoamingRequest_C2CMessage.ProtoReflect.Descriptor instead.
func (*MessageService_DeleteRoamingRequest_C2CMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 28, 0}
}

func (x *MessageService_DeleteRoamingRequest_C2CMessage) GetFromUin() int64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *MessageService_DeleteRoamingRequest_C2CMessage) GetPeerUin() int64 {
	if x != nil {
		return x.PeerUin
	}
	return 0
}

func (x *MessageService_DeleteRoamingRequest_C2CMessage) GetMessageTime() int64 {
	if x != nil {
		return x.MessageTime
	}
	return 0
}

func (x *MessageService_DeleteRoamingRequest_C2CMessage) GetMessageRandom() int32 {
	if x != nil {
		return x.MessageRandom
	}
	return 0
}

func (x *MessageService_DeleteRoamingRequest_C2CMessage) GetMessageSeq() int32 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

// DisMsg
type MessageService_DeleteRoamingRequest_DiscussMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscussUin int64 `protobuf:"varint,1,opt,name=discuss_uin,json=discussUin,proto3" json:"discuss_uin,omitempty"` // "discuss_uin"
	MessageSeq int64 `protobuf:"varint,2,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"` // "msg_seq"
}

func (x *MessageService_DeleteRoamingRequest_DiscussMessage) Reset() {
	*x = MessageService_DeleteRoamingRequest_DiscussMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_DeleteRoamingRequest_DiscussMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_DeleteRoamingRequest_DiscussMessage) ProtoMessage() {}

func (x *MessageService_DeleteRoamingRequest_DiscussMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_DeleteRoamingRequest_DiscussMessage.ProtoReflect.Descriptor instead.
func (*MessageService_DeleteRoamingRequest_DiscussMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 28, 1}
}

func (x *MessageService_DeleteRoamingRequest_DiscussMessage) GetDiscussUin() int64 {
	if x != nil {
		return x.DiscussUin
	}
	return 0
}

func (x *MessageService_DeleteRoamingRequest_DiscussMessage) GetMessageSeq() int64 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

// GrpMsg
type MessageService_DeleteRoamingRequest_GroupMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode   int64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`       // "group_code"
	MessageSeq  int64 `protobuf:"varint,2,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`    // "msg_seq"
	ReserveFlag int32 `protobuf:"varint,3,opt,name=reserve_flag,json=reserveFlag,proto3" json:"reserve_flag,omitempty"` // "uint32_resv_flag"
}

func (x *MessageService_DeleteRoamingRequest_GroupMessage) Reset() {
	*x = MessageService_DeleteRoamingRequest_GroupMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_DeleteRoamingRequest_GroupMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_DeleteRoamingRequest_GroupMessage) ProtoMessage() {}

func (x *MessageService_DeleteRoamingRequest_GroupMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_DeleteRoamingRequest_GroupMessage.ProtoReflect.Descriptor instead.
func (*MessageService_DeleteRoamingRequest_GroupMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 28, 2}
}

func (x *MessageService_DeleteRoamingRequest_GroupMessage) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *MessageService_DeleteRoamingRequest_GroupMessage) GetMessageSeq() int64 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

func (x *MessageService_DeleteRoamingRequest_GroupMessage) GetReserveFlag() int32 {
	if x != nil {
		return x.ReserveFlag
	}
	return 0
}

// DiscussInfoReq
type MessageService_GetUnreadDiscussRequest_DiscussInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfUin uint64 `protobuf:"varint,1,opt,name=conf_uin,json=confUin,proto3" json:"conf_uin,omitempty"` // "conf_uin"
	LastSeq uint64 `protobuf:"varint,2,opt,name=last_seq,json=lastSeq,proto3" json:"last_seq,omitempty"` // "last_seq"
}

func (x *MessageService_GetUnreadDiscussRequest_DiscussInfoReq) Reset() {
	*x = MessageService_GetUnreadDiscussRequest_DiscussInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadDiscussRequest_DiscussInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadDiscussRequest_DiscussInfoReq) ProtoMessage() {}

func (x *MessageService_GetUnreadDiscussRequest_DiscussInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadDiscussRequest_DiscussInfoReq.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadDiscussRequest_DiscussInfoReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 44, 0}
}

func (x *MessageService_GetUnreadDiscussRequest_DiscussInfoReq) GetConfUin() uint64 {
	if x != nil {
		return x.ConfUin
	}
	return 0
}

func (x *MessageService_GetUnreadDiscussRequest_DiscussInfoReq) GetLastSeq() uint64 {
	if x != nil {
		return x.LastSeq
	}
	return 0
}

// DiscussInfoResp
type MessageService_GetUnreadDiscussResponse_DiscussInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfUin   uint64 `protobuf:"varint,1,opt,name=conf_uin,json=confUin,proto3" json:"conf_uin,omitempty"`       // "conf_uin"
	MemberSeq uint64 `protobuf:"varint,2,opt,name=member_seq,json=memberSeq,proto3" json:"member_seq,omitempty"` // "member_seq"
	ConfSeq   uint64 `protobuf:"varint,3,opt,name=conf_seq,json=confSeq,proto3" json:"conf_seq,omitempty"`       // "conf_seq"
}

func (x *MessageService_GetUnreadDiscussResponse_DiscussInfoResp) Reset() {
	*x = MessageService_GetUnreadDiscussResponse_DiscussInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadDiscussResponse_DiscussInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadDiscussResponse_DiscussInfoResp) ProtoMessage() {}

func (x *MessageService_GetUnreadDiscussResponse_DiscussInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadDiscussResponse_DiscussInfoResp.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadDiscussResponse_DiscussInfoResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 45, 0}
}

func (x *MessageService_GetUnreadDiscussResponse_DiscussInfoResp) GetConfUin() uint64 {
	if x != nil {
		return x.ConfUin
	}
	return 0
}

func (x *MessageService_GetUnreadDiscussResponse_DiscussInfoResp) GetMemberSeq() uint64 {
	if x != nil {
		return x.MemberSeq
	}
	return 0
}

func (x *MessageService_GetUnreadDiscussResponse_DiscussInfoResp) GetConfSeq() uint64 {
	if x != nil {
		return x.ConfSeq
	}
	return 0
}

// GroupInfoReq
type MessageService_GetUnreadGroupRequest_GroupInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode uint64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"` // "group_code"
	LastSeq   uint64 `protobuf:"varint,2,opt,name=last_seq,json=lastSeq,proto3" json:"last_seq,omitempty"`       // "last_seq"
}

func (x *MessageService_GetUnreadGroupRequest_GroupInfoReq) Reset() {
	*x = MessageService_GetUnreadGroupRequest_GroupInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadGroupRequest_GroupInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadGroupRequest_GroupInfoReq) ProtoMessage() {}

func (x *MessageService_GetUnreadGroupRequest_GroupInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadGroupRequest_GroupInfoReq.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadGroupRequest_GroupInfoReq) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 46, 0}
}

func (x *MessageService_GetUnreadGroupRequest_GroupInfoReq) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *MessageService_GetUnreadGroupRequest_GroupInfoReq) GetLastSeq() uint64 {
	if x != nil {
		return x.LastSeq
	}
	return 0
}

// GroupInfoResp
type MessageService_GetUnreadGroupResponse_GroupInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode uint64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"` // "group_code"
	MemberSeq uint64 `protobuf:"varint,2,opt,name=member_seq,json=memberSeq,proto3" json:"member_seq,omitempty"` // "member_seq"
	GroupSeq  uint64 `protobuf:"varint,3,opt,name=group_seq,json=groupSeq,proto3" json:"group_seq,omitempty"`    // "group_seq"
}

func (x *MessageService_GetUnreadGroupResponse_GroupInfoResp) Reset() {
	*x = MessageService_GetUnreadGroupResponse_GroupInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadGroupResponse_GroupInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadGroupResponse_GroupInfoResp) ProtoMessage() {}

func (x *MessageService_GetUnreadGroupResponse_GroupInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadGroupResponse_GroupInfoResp.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadGroupResponse_GroupInfoResp) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 47, 0}
}

func (x *MessageService_GetUnreadGroupResponse_GroupInfoResp) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *MessageService_GetUnreadGroupResponse_GroupInfoResp) GetMemberSeq() uint64 {
	if x != nil {
		return x.MemberSeq
	}
	return 0
}

func (x *MessageService_GetUnreadGroupResponse_GroupInfoResp) GetGroupSeq() uint64 {
	if x != nil {
		return x.GroupSeq
	}
	return 0
}

// ThirdQQReqInfo
type MessageService_GetUnreadThirdQQRequest_ThirdQQReqInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThirdUin       uint64 `protobuf:"varint,1,opt,name=third_uin,json=thirdUin,proto3" json:"third_uin,omitempty"`                    // "third_uin"
	ThirdUinSig    []byte `protobuf:"bytes,2,opt,name=third_uin_sig,json=thirdUinSig,proto3" json:"third_uin_sig,omitempty"`          // "third_uin_sig"
	ThirdUinCookie []byte `protobuf:"bytes,3,opt,name=third_uin_cookie,json=thirdUinCookie,proto3" json:"third_uin_cookie,omitempty"` // "third_uin_cookie"
}

func (x *MessageService_GetUnreadThirdQQRequest_ThirdQQReqInfo) Reset() {
	*x = MessageService_GetUnreadThirdQQRequest_ThirdQQReqInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadThirdQQRequest_ThirdQQReqInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadThirdQQRequest_ThirdQQReqInfo) ProtoMessage() {}

func (x *MessageService_GetUnreadThirdQQRequest_ThirdQQReqInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadThirdQQRequest_ThirdQQReqInfo.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadThirdQQRequest_ThirdQQReqInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 48, 0}
}

func (x *MessageService_GetUnreadThirdQQRequest_ThirdQQReqInfo) GetThirdUin() uint64 {
	if x != nil {
		return x.ThirdUin
	}
	return 0
}

func (x *MessageService_GetUnreadThirdQQRequest_ThirdQQReqInfo) GetThirdUinSig() []byte {
	if x != nil {
		return x.ThirdUinSig
	}
	return nil
}

func (x *MessageService_GetUnreadThirdQQRequest_ThirdQQReqInfo) GetThirdUinCookie() []byte {
	if x != nil {
		return x.ThirdUinCookie
	}
	return nil
}

// ThirdQQRespInfo
type MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThirdUin       uint64 `protobuf:"varint,1,opt,name=third_uin,json=thirdUin,proto3" json:"third_uin,omitempty"`                    // "third_uin"
	ThirdUinCookie []byte `protobuf:"bytes,2,opt,name=third_uin_cookie,json=thirdUinCookie,proto3" json:"third_uin_cookie,omitempty"` // "third_uin_cookie"
	MsgNum         uint32 `protobuf:"varint,3,opt,name=msg_num,json=msgNum,proto3" json:"msg_num,omitempty"`                          // "msg_num"
	MsgFlag        uint32 `protobuf:"varint,4,opt,name=msg_flag,json=msgFlag,proto3" json:"msg_flag,omitempty"`                       // "msg_flag"
	RedbagTime     uint32 `protobuf:"varint,5,opt,name=redbag_time,json=redbagTime,proto3" json:"redbag_time,omitempty"`              // "redbag_time"
	Status         uint32 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`                                        // "status"
	LastMsgTime    uint32 `protobuf:"varint,7,opt,name=last_msg_time,json=lastMsgTime,proto3" json:"last_msg_time,omitempty"`         // "last_msg_time"
}

func (x *MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo) Reset() {
	*x = MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo) ProtoMessage() {}

func (x *MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo.ProtoReflect.Descriptor instead.
func (*MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 49, 0}
}

func (x *MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo) GetThirdUin() uint64 {
	if x != nil {
		return x.ThirdUin
	}
	return 0
}

func (x *MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo) GetThirdUinCookie() []byte {
	if x != nil {
		return x.ThirdUinCookie
	}
	return nil
}

func (x *MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo) GetMsgNum() uint32 {
	if x != nil {
		return x.MsgNum
	}
	return 0
}

func (x *MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo) GetMsgFlag() uint32 {
	if x != nil {
		return x.MsgFlag
	}
	return 0
}

func (x *MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo) GetRedbagTime() uint32 {
	if x != nil {
		return x.RedbagTime
	}
	return 0
}

func (x *MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo) GetLastMsgTime() uint32 {
	if x != nil {
		return x.LastMsgTime
	}
	return 0
}

// UinPairReadInfo
type MessageService_ReportReadedC2CRequest_UinPairReadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerUin      uint64 `protobuf:"varint,1,opt,name=peer_uin,json=peerUin,proto3" json:"peer_uin,omitempty"`                  // "peer_uin"
	LastReadTime uint32 `protobuf:"varint,2,opt,name=last_read_time,json=lastReadTime,proto3" json:"last_read_time,omitempty"` // "last_read_time"
	CrmSig       []byte `protobuf:"bytes,3,opt,name=crm_sig,json=crmSig,proto3" json:"crm_sig,omitempty"`                      // "crm_sig"
	PeerType     uint32 `protobuf:"varint,4,opt,name=peer_type,json=peerType,proto3" json:"peer_type,omitempty"`               // "peer_type" Enum
	ChatType     uint32 `protobuf:"varint,5,opt,name=chat_type,json=chatType,proto3" json:"chat_type,omitempty"`               // "chat_type"
	Cpid         uint64 `protobuf:"varint,6,opt,name=cpid,proto3" json:"cpid,omitempty"`                                       // "cpid"
	AioType      uint32 `protobuf:"varint,7,opt,name=aio_type,json=aioType,proto3" json:"aio_type,omitempty"`                  // "aio_type"
	ToTinyId     uint64 `protobuf:"varint,9,opt,name=to_tiny_id,json=toTinyId,proto3" json:"to_tiny_id,omitempty"`             // "uint64_to_tiny_id"
}

func (x *MessageService_ReportReadedC2CRequest_UinPairReadInfo) Reset() {
	*x = MessageService_ReportReadedC2CRequest_UinPairReadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[220]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_ReportReadedC2CRequest_UinPairReadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_ReportReadedC2CRequest_UinPairReadInfo) ProtoMessage() {}

func (x *MessageService_ReportReadedC2CRequest_UinPairReadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[220]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_ReportReadedC2CRequest_UinPairReadInfo.ProtoReflect.Descriptor instead.
func (*MessageService_ReportReadedC2CRequest_UinPairReadInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 54, 0}
}

func (x *MessageService_ReportReadedC2CRequest_UinPairReadInfo) GetPeerUin() uint64 {
	if x != nil {
		return x.PeerUin
	}
	return 0
}

func (x *MessageService_ReportReadedC2CRequest_UinPairReadInfo) GetLastReadTime() uint32 {
	if x != nil {
		return x.LastReadTime
	}
	return 0
}

func (x *MessageService_ReportReadedC2CRequest_UinPairReadInfo) GetCrmSig() []byte {
	if x != nil {
		return x.CrmSig
	}
	return nil
}

func (x *MessageService_ReportReadedC2CRequest_UinPairReadInfo) GetPeerType() uint32 {
	if x != nil {
		return x.PeerType
	}
	return 0
}

func (x *MessageService_ReportReadedC2CRequest_UinPairReadInfo) GetChatType() uint32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *MessageService_ReportReadedC2CRequest_UinPairReadInfo) GetCpid() uint64 {
	if x != nil {
		return x.Cpid
	}
	return 0
}

func (x *MessageService_ReportReadedC2CRequest_UinPairReadInfo) GetAioType() uint32 {
	if x != nil {
		return x.AioType
	}
	return 0
}

func (x *MessageService_ReportReadedC2CRequest_UinPairReadInfo) GetToTinyId() uint64 {
	if x != nil {
		return x.ToTinyId
	}
	return 0
}

// MultiMsgAssist
type MessageService_SendRequest_MultiMessageAssist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepeatedRouting []*MessageService_RoutingHead `protobuf:"bytes,1,rep,name=repeated_routing,json=repeatedRouting,proto3" json:"repeated_routing,omitempty"` // "repeated_routing"
	MsgUse          uint32                        `protobuf:"varint,2,opt,name=msg_use,json=msgUse,proto3" json:"msg_use,omitempty"`                           // "msg_use" Enum
	TempId          uint64                        `protobuf:"varint,3,opt,name=temp_id,json=tempId,proto3" json:"temp_id,omitempty"`                           // "uint64_temp_id"
	VedioLen        uint64                        `protobuf:"varint,4,opt,name=vedio_len,json=vedioLen,proto3" json:"vedio_len,omitempty"`                     // "uint64_vedio_len"
	RedbagId        []byte                        `protobuf:"bytes,5,opt,name=redbag_id,json=redbagId,proto3" json:"redbag_id,omitempty"`                      // "bytes_redbag_id"
	RedbagAmount    uint64                        `protobuf:"varint,6,opt,name=redbag_amount,json=redbagAmount,proto3" json:"redbag_amount,omitempty"`         // "uint64_redbag_amount"
	HasReadbag      uint32                        `protobuf:"varint,7,opt,name=has_readbag,json=hasReadbag,proto3" json:"has_readbag,omitempty"`               // "uint32_has_readbag"
	HasVedio        uint32                        `protobuf:"varint,8,opt,name=has_vedio,json=hasVedio,proto3" json:"has_vedio,omitempty"`                     // "uint32_has_vedio"
}

func (x *MessageService_SendRequest_MultiMessageAssist) Reset() {
	*x = MessageService_SendRequest_MultiMessageAssist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[221]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_SendRequest_MultiMessageAssist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_SendRequest_MultiMessageAssist) ProtoMessage() {}

func (x *MessageService_SendRequest_MultiMessageAssist) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[221]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_SendRequest_MultiMessageAssist.ProtoReflect.Descriptor instead.
func (*MessageService_SendRequest_MultiMessageAssist) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 64, 0}
}

func (x *MessageService_SendRequest_MultiMessageAssist) GetRepeatedRouting() []*MessageService_RoutingHead {
	if x != nil {
		return x.RepeatedRouting
	}
	return nil
}

func (x *MessageService_SendRequest_MultiMessageAssist) GetMsgUse() uint32 {
	if x != nil {
		return x.MsgUse
	}
	return 0
}

func (x *MessageService_SendRequest_MultiMessageAssist) GetTempId() uint64 {
	if x != nil {
		return x.TempId
	}
	return 0
}

func (x *MessageService_SendRequest_MultiMessageAssist) GetVedioLen() uint64 {
	if x != nil {
		return x.VedioLen
	}
	return 0
}

func (x *MessageService_SendRequest_MultiMessageAssist) GetRedbagId() []byte {
	if x != nil {
		return x.RedbagId
	}
	return nil
}

func (x *MessageService_SendRequest_MultiMessageAssist) GetRedbagAmount() uint64 {
	if x != nil {
		return x.RedbagAmount
	}
	return 0
}

func (x *MessageService_SendRequest_MultiMessageAssist) GetHasReadbag() uint32 {
	if x != nil {
		return x.HasReadbag
	}
	return 0
}

func (x *MessageService_SendRequest_MultiMessageAssist) GetHasVedio() uint32 {
	if x != nil {
		return x.HasVedio
	}
	return 0
}

// PbInputNotifyInfo
type MessageService_SendRequest_InputNotifyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToUin          uint64 `protobuf:"varint,1,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`                             // "to_uin"
	Ime            uint32 `protobuf:"varint,2,opt,name=ime,proto3" json:"ime,omitempty"`                                              // "ime"
	NotifyFlag     uint32 `protobuf:"varint,3,opt,name=notify_flag,json=notifyFlag,proto3" json:"notify_flag,omitempty"`              // "notify_flag"
	PbReserve      []byte `protobuf:"bytes,4,opt,name=pb_reserve,json=pbReserve,proto3" json:"pb_reserve,omitempty"`                  // "bytes_pb_reserve"
	IosPushWording []byte `protobuf:"bytes,5,opt,name=ios_push_wording,json=iosPushWording,proto3" json:"ios_push_wording,omitempty"` // "ios_push_wording"
}

func (x *MessageService_SendRequest_InputNotifyInfo) Reset() {
	*x = MessageService_SendRequest_InputNotifyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[222]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_SendRequest_InputNotifyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_SendRequest_InputNotifyInfo) ProtoMessage() {}

func (x *MessageService_SendRequest_InputNotifyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[222]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_SendRequest_InputNotifyInfo.ProtoReflect.Descriptor instead.
func (*MessageService_SendRequest_InputNotifyInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 64, 1}
}

func (x *MessageService_SendRequest_InputNotifyInfo) GetToUin() uint64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_SendRequest_InputNotifyInfo) GetIme() uint32 {
	if x != nil {
		return x.Ime
	}
	return 0
}

func (x *MessageService_SendRequest_InputNotifyInfo) GetNotifyFlag() uint32 {
	if x != nil {
		return x.NotifyFlag
	}
	return 0
}

func (x *MessageService_SendRequest_InputNotifyInfo) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

func (x *MessageService_SendRequest_InputNotifyInfo) GetIosPushWording() []byte {
	if x != nil {
		return x.IosPushWording
	}
	return nil
}

// MsgSendInfo
type MessageService_SendResponse_MessageSendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver int32 `protobuf:"varint,1,opt,name=receiver,proto3" json:"receiver,omitempty"` // "receiver"
}

func (x *MessageService_SendResponse_MessageSendInfo) Reset() {
	*x = MessageService_SendResponse_MessageSendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[223]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_SendResponse_MessageSendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_SendResponse_MessageSendInfo) ProtoMessage() {}

func (x *MessageService_SendResponse_MessageSendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[223]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_SendResponse_MessageSendInfo.ProtoReflect.Descriptor instead.
func (*MessageService_SendResponse_MessageSendInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 65, 0}
}

func (x *MessageService_SendResponse_MessageSendInfo) GetReceiver() int32 {
	if x != nil {
		return x.Receiver
	}
	return 0
}

// TransSvrInfo
type MessageService_SendResponse_TransportServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubType    int32  `protobuf:"varint,1,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`          // "uint32_sub_type"
	ReturnCode int32  `protobuf:"varint,2,opt,name=return_code,json=returnCode,proto3" json:"return_code,omitempty"` // "int32_ret_code"
	ErrMessage []byte `protobuf:"bytes,3,opt,name=err_message,json=errMessage,proto3" json:"err_message,omitempty"`  // "bytes_err_msg"
	TransInfo  []byte `protobuf:"bytes,4,opt,name=trans_info,json=transInfo,proto3" json:"trans_info,omitempty"`     // "bytes_trans_info"
}

func (x *MessageService_SendResponse_TransportServerInfo) Reset() {
	*x = MessageService_SendResponse_TransportServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_SendResponse_TransportServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_SendResponse_TransportServerInfo) ProtoMessage() {}

func (x *MessageService_SendResponse_TransportServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_SendResponse_TransportServerInfo.ProtoReflect.Descriptor instead.
func (*MessageService_SendResponse_TransportServerInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 65, 1}
}

func (x *MessageService_SendResponse_TransportServerInfo) GetSubType() int32 {
	if x != nil {
		return x.SubType
	}
	return 0
}

func (x *MessageService_SendResponse_TransportServerInfo) GetReturnCode() int32 {
	if x != nil {
		return x.ReturnCode
	}
	return 0
}

func (x *MessageService_SendResponse_TransportServerInfo) GetErrMessage() []byte {
	if x != nil {
		return x.ErrMessage
	}
	return nil
}

func (x *MessageService_SendResponse_TransportServerInfo) GetTransInfo() []byte {
	if x != nil {
		return x.TransInfo
	}
	return nil
}

// MsgInfo
type MessageService_WithdrawC2CRequest_MessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUin       uint64                      `protobuf:"varint,1,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`                   // "uint64_from_uin"
	ToUin         uint64                      `protobuf:"varint,2,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`                         // "uint64_to_uin"
	MessageSeq    uint32                      `protobuf:"varint,3,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`          // "uint32_msg_seq"
	MessageUid    uint64                      `protobuf:"varint,4,opt,name=message_uid,json=messageUid,proto3" json:"message_uid,omitempty"`          // "uint64_msg_uid"
	MessageTime   uint64                      `protobuf:"varint,5,opt,name=message_time,json=messageTime,proto3" json:"message_time,omitempty"`       // "uint64_msg_time"
	MessageRandom uint32                      `protobuf:"varint,6,opt,name=message_random,json=messageRandom,proto3" json:"message_random,omitempty"` // "uint32_msg_random"
	PkgNum        uint32                      `protobuf:"varint,7,opt,name=pkg_num,json=pkgNum,proto3" json:"pkg_num,omitempty"`                      // "uint32_pkg_num"
	PkgIndex      uint32                      `protobuf:"varint,8,opt,name=pkg_index,json=pkgIndex,proto3" json:"pkg_index,omitempty"`                // "uint32_pkg_index"
	DivSeq        uint32                      `protobuf:"varint,9,opt,name=div_seq,json=divSeq,proto3" json:"div_seq,omitempty"`                      // "uint32_div_seq"
	MessageType   uint32                      `protobuf:"varint,10,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`      // "uint32_msg_type"
	RoutingHead   *MessageService_RoutingHead `protobuf:"bytes,20,opt,name=routing_head,json=routingHead,proto3" json:"routing_head,omitempty"`       // "routing_head"
}

func (x *MessageService_WithdrawC2CRequest_MessageInfo) Reset() {
	*x = MessageService_WithdrawC2CRequest_MessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[225]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_WithdrawC2CRequest_MessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_WithdrawC2CRequest_MessageInfo) ProtoMessage() {}

func (x *MessageService_WithdrawC2CRequest_MessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[225]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_WithdrawC2CRequest_MessageInfo.ProtoReflect.Descriptor instead.
func (*MessageService_WithdrawC2CRequest_MessageInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 66, 0}
}

func (x *MessageService_WithdrawC2CRequest_MessageInfo) GetFromUin() uint64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *MessageService_WithdrawC2CRequest_MessageInfo) GetToUin() uint64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageService_WithdrawC2CRequest_MessageInfo) GetMessageSeq() uint32 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

func (x *MessageService_WithdrawC2CRequest_MessageInfo) GetMessageUid() uint64 {
	if x != nil {
		return x.MessageUid
	}
	return 0
}

func (x *MessageService_WithdrawC2CRequest_MessageInfo) GetMessageTime() uint64 {
	if x != nil {
		return x.MessageTime
	}
	return 0
}

func (x *MessageService_WithdrawC2CRequest_MessageInfo) GetMessageRandom() uint32 {
	if x != nil {
		return x.MessageRandom
	}
	return 0
}

func (x *MessageService_WithdrawC2CRequest_MessageInfo) GetPkgNum() uint32 {
	if x != nil {
		return x.PkgNum
	}
	return 0
}

func (x *MessageService_WithdrawC2CRequest_MessageInfo) GetPkgIndex() uint32 {
	if x != nil {
		return x.PkgIndex
	}
	return 0
}

func (x *MessageService_WithdrawC2CRequest_MessageInfo) GetDivSeq() uint32 {
	if x != nil {
		return x.DivSeq
	}
	return 0
}

func (x *MessageService_WithdrawC2CRequest_MessageInfo) GetMessageType() uint32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *MessageService_WithdrawC2CRequest_MessageInfo) GetRoutingHead() *MessageService_RoutingHead {
	if x != nil {
		return x.RoutingHead
	}
	return nil
}

// MsgStatus
type MessageService_WithdrawC2CResponse_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item   *MessageService_WithdrawC2CRequest_MessageInfo `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`      // "msg_info"
	Status uint32                                         `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"` // "uint32_status"
}

func (x *MessageService_WithdrawC2CResponse_Status) Reset() {
	*x = MessageService_WithdrawC2CResponse_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[226]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_WithdrawC2CResponse_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_WithdrawC2CResponse_Status) ProtoMessage() {}

func (x *MessageService_WithdrawC2CResponse_Status) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[226]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_WithdrawC2CResponse_Status.ProtoReflect.Descriptor instead.
func (*MessageService_WithdrawC2CResponse_Status) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 67, 0}
}

func (x *MessageService_WithdrawC2CResponse_Status) GetItem() *MessageService_WithdrawC2CRequest_MessageInfo {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *MessageService_WithdrawC2CResponse_Status) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// MessageInfo
type MessageService_WithdrawGroupRequest_MessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageSeq    uint32 `protobuf:"varint,1,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`          // "uint32_msg_seq"
	MessageRandom uint32 `protobuf:"varint,2,opt,name=message_random,json=messageRandom,proto3" json:"message_random,omitempty"` // "uint32_msg_random"
	MessageType   uint32 `protobuf:"varint,3,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`       // "uint32_msg_type"
	ReserveFlag   uint32 `protobuf:"varint,4,opt,name=reserve_flag,json=reserveFlag,proto3" json:"reserve_flag,omitempty"`       // "uint32_resv_flag"
}

func (x *MessageService_WithdrawGroupRequest_MessageInfo) Reset() {
	*x = MessageService_WithdrawGroupRequest_MessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[227]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_WithdrawGroupRequest_MessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_WithdrawGroupRequest_MessageInfo) ProtoMessage() {}

func (x *MessageService_WithdrawGroupRequest_MessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[227]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_WithdrawGroupRequest_MessageInfo.ProtoReflect.Descriptor instead.
func (*MessageService_WithdrawGroupRequest_MessageInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 68, 0}
}

func (x *MessageService_WithdrawGroupRequest_MessageInfo) GetMessageSeq() uint32 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

func (x *MessageService_WithdrawGroupRequest_MessageInfo) GetMessageRandom() uint32 {
	if x != nil {
		return x.MessageRandom
	}
	return 0
}

func (x *MessageService_WithdrawGroupRequest_MessageInfo) GetMessageType() uint32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *MessageService_WithdrawGroupRequest_MessageInfo) GetReserveFlag() uint32 {
	if x != nil {
		return x.ReserveFlag
	}
	return 0
}

// MessageResult
type MessageService_WithdrawGroupResponse_MessageResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result        uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                                    // "uint32_result"
	MessageSeq    uint32 `protobuf:"varint,2,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`          // "uint32_msg_seq"
	MessageTime   uint32 `protobuf:"varint,3,opt,name=message_time,json=messageTime,proto3" json:"message_time,omitempty"`       // "uint32_msg_time"
	MessageRandom uint32 `protobuf:"varint,4,opt,name=message_random,json=messageRandom,proto3" json:"message_random,omitempty"` // "uint32_msg_random"
	ErrorMessage  []byte `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`     // "bytes_err_msg"
	MessageType   uint32 `protobuf:"varint,6,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`       // "uint32_msg_type"
}

func (x *MessageService_WithdrawGroupResponse_MessageResult) Reset() {
	*x = MessageService_WithdrawGroupResponse_MessageResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[228]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageService_WithdrawGroupResponse_MessageResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageService_WithdrawGroupResponse_MessageResult) ProtoMessage() {}

func (x *MessageService_WithdrawGroupResponse_MessageResult) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[228]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageService_WithdrawGroupResponse_MessageResult.ProtoReflect.Descriptor instead.
func (*MessageService_WithdrawGroupResponse_MessageResult) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6, 69, 0}
}

func (x *MessageService_WithdrawGroupResponse_MessageResult) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageService_WithdrawGroupResponse_MessageResult) GetMessageSeq() uint32 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

func (x *MessageService_WithdrawGroupResponse_MessageResult) GetMessageTime() uint32 {
	if x != nil {
		return x.MessageTime
	}
	return 0
}

func (x *MessageService_WithdrawGroupResponse_MessageResult) GetMessageRandom() uint32 {
	if x != nil {
		return x.MessageRandom
	}
	return 0
}

func (x *MessageService_WithdrawGroupResponse_MessageResult) GetErrorMessage() []byte {
	if x != nil {
		return x.ErrorMessage
	}
	return nil
}

func (x *MessageService_WithdrawGroupResponse_MessageResult) GetMessageType() uint32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

// SubMsgType0xc1
type MessageType00A6_Type00C1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageType00A6_Type00C1) Reset() {
	*x = MessageType00A6_Type00C1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[229]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType00A6_Type00C1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType00A6_Type00C1) ProtoMessage() {}

func (x *MessageType00A6_Type00C1) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[229]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType00A6_Type00C1.ProtoReflect.Descriptor instead.
func (*MessageType00A6_Type00C1) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7, 0}
}

// MsgBody
type MessageType00A6_Type00C1_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileKey              []byte                                   `protobuf:"bytes,1,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`                                           // "bytes_file_key"
	FromUin              int64                                    `protobuf:"varint,2,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`                                          // "uint64_from_uin"
	ToUin                int64                                    `protobuf:"varint,3,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`                                                // "uint64_to_uin"
	Status               int32                                    `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                                                           // "uint32_status"
	Ttl                  int32                                    `protobuf:"varint,5,opt,name=ttl,proto3" json:"ttl,omitempty"`                                                                 // "uint32_ttl"
	Type                 int32                                    `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`                                                               // "uint32_type"
	EncryptPreheadLength int32                                    `protobuf:"varint,7,opt,name=encrypt_prehead_length,json=encryptPreheadLength,proto3" json:"encrypt_prehead_length,omitempty"` // "uint32_encrypt_prehead_length"
	EncryptType          int32                                    `protobuf:"varint,8,opt,name=encrypt_type,json=encryptType,proto3" json:"encrypt_type,omitempty"`                              // "uint32_encrypt_type"
	EncryptKey           []byte                                   `protobuf:"bytes,9,opt,name=encrypt_key,json=encryptKey,proto3" json:"encrypt_key,omitempty"`                                  // "bytes_encrypt_key"
	ReadTimes            int32                                    `protobuf:"varint,10,opt,name=read_times,json=readTimes,proto3" json:"read_times,omitempty"`                                   // "uint32_read_times"
	LeftTime             int64                                    `protobuf:"varint,11,opt,name=left_time,json=leftTime,proto3" json:"left_time,omitempty"`                                      // "uint32_left_time"
	NotOnlineImage       *MessageType00A6_Type00C1_NotOnlineImage `protobuf:"bytes,12,opt,name=not_online_image,json=notOnlineImage,proto3" json:"not_online_image,omitempty"`                   // "not_online_image"
}

func (x *MessageType00A6_Type00C1_Body) Reset() {
	*x = MessageType00A6_Type00C1_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[230]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType00A6_Type00C1_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType00A6_Type00C1_Body) ProtoMessage() {}

func (x *MessageType00A6_Type00C1_Body) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[230]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType00A6_Type00C1_Body.ProtoReflect.Descriptor instead.
func (*MessageType00A6_Type00C1_Body) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7, 0, 0}
}

func (x *MessageType00A6_Type00C1_Body) GetFileKey() []byte {
	if x != nil {
		return x.FileKey
	}
	return nil
}

func (x *MessageType00A6_Type00C1_Body) GetFromUin() int64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *MessageType00A6_Type00C1_Body) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageType00A6_Type00C1_Body) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MessageType00A6_Type00C1_Body) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *MessageType00A6_Type00C1_Body) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageType00A6_Type00C1_Body) GetEncryptPreheadLength() int32 {
	if x != nil {
		return x.EncryptPreheadLength
	}
	return 0
}

func (x *MessageType00A6_Type00C1_Body) GetEncryptType() int32 {
	if x != nil {
		return x.EncryptType
	}
	return 0
}

func (x *MessageType00A6_Type00C1_Body) GetEncryptKey() []byte {
	if x != nil {
		return x.EncryptKey
	}
	return nil
}

func (x *MessageType00A6_Type00C1_Body) GetReadTimes() int32 {
	if x != nil {
		return x.ReadTimes
	}
	return 0
}

func (x *MessageType00A6_Type00C1_Body) GetLeftTime() int64 {
	if x != nil {
		return x.LeftTime
	}
	return 0
}

func (x *MessageType00A6_Type00C1_Body) GetNotOnlineImage() *MessageType00A6_Type00C1_NotOnlineImage {
	if x != nil {
		return x.NotOnlineImage
	}
	return nil
}

// NotOnlineImage
type MessageType00A6_Type00C1_NotOnlineImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath       []byte `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`                       // "file_path"
	FileLen        int32  `protobuf:"varint,2,opt,name=file_len,json=fileLen,proto3" json:"file_len,omitempty"`                         // "file_len"
	DownloadPath   []byte `protobuf:"bytes,3,opt,name=download_path,json=downloadPath,proto3" json:"download_path,omitempty"`           // "download_path"
	OldVerSendFile []byte `protobuf:"bytes,4,opt,name=old_ver_send_file,json=oldVerSendFile,proto3" json:"old_ver_send_file,omitempty"` // "old_ver_send_file"
	ImgType        int32  `protobuf:"varint,5,opt,name=img_type,json=imgType,proto3" json:"img_type,omitempty"`                         // "img_type"
	PreviewsImage  []byte `protobuf:"bytes,6,opt,name=previews_image,json=previewsImage,proto3" json:"previews_image,omitempty"`        // "previews_image"
	PicMd5         []byte `protobuf:"bytes,7,opt,name=pic_md5,json=picMd5,proto3" json:"pic_md5,omitempty"`                             // "pic_md5"
	PicHeight      int32  `protobuf:"varint,8,opt,name=pic_height,json=picHeight,proto3" json:"pic_height,omitempty"`                   // "pic_height"
	PicWidth       int32  `protobuf:"varint,9,opt,name=pic_width,json=picWidth,proto3" json:"pic_width,omitempty"`                      // "pic_width"
	ResId          []byte `protobuf:"bytes,10,opt,name=res_id,json=resId,proto3" json:"res_id,omitempty"`                               // "res_id"
	Flag           []byte `protobuf:"bytes,11,opt,name=flag,proto3" json:"flag,omitempty"`                                              // "flag"
	DownloadUrl    string `protobuf:"bytes,12,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`             // "str_download_url"
	Original       int32  `protobuf:"varint,13,opt,name=original,proto3" json:"original,omitempty"`                                     // "original"
}

func (x *MessageType00A6_Type00C1_NotOnlineImage) Reset() {
	*x = MessageType00A6_Type00C1_NotOnlineImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[231]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType00A6_Type00C1_NotOnlineImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType00A6_Type00C1_NotOnlineImage) ProtoMessage() {}

func (x *MessageType00A6_Type00C1_NotOnlineImage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[231]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType00A6_Type00C1_NotOnlineImage.ProtoReflect.Descriptor instead.
func (*MessageType00A6_Type00C1_NotOnlineImage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7, 0, 1}
}

func (x *MessageType00A6_Type00C1_NotOnlineImage) GetFilePath() []byte {
	if x != nil {
		return x.FilePath
	}
	return nil
}

func (x *MessageType00A6_Type00C1_NotOnlineImage) GetFileLen() int32 {
	if x != nil {
		return x.FileLen
	}
	return 0
}

func (x *MessageType00A6_Type00C1_NotOnlineImage) GetDownloadPath() []byte {
	if x != nil {
		return x.DownloadPath
	}
	return nil
}

func (x *MessageType00A6_Type00C1_NotOnlineImage) GetOldVerSendFile() []byte {
	if x != nil {
		return x.OldVerSendFile
	}
	return nil
}

func (x *MessageType00A6_Type00C1_NotOnlineImage) GetImgType() int32 {
	if x != nil {
		return x.ImgType
	}
	return 0
}

func (x *MessageType00A6_Type00C1_NotOnlineImage) GetPreviewsImage() []byte {
	if x != nil {
		return x.PreviewsImage
	}
	return nil
}

func (x *MessageType00A6_Type00C1_NotOnlineImage) GetPicMd5() []byte {
	if x != nil {
		return x.PicMd5
	}
	return nil
}

func (x *MessageType00A6_Type00C1_NotOnlineImage) GetPicHeight() int32 {
	if x != nil {
		return x.PicHeight
	}
	return 0
}

func (x *MessageType00A6_Type00C1_NotOnlineImage) GetPicWidth() int32 {
	if x != nil {
		return x.PicWidth
	}
	return 0
}

func (x *MessageType00A6_Type00C1_NotOnlineImage) GetResId() []byte {
	if x != nil {
		return x.ResId
	}
	return nil
}

func (x *MessageType00A6_Type00C1_NotOnlineImage) GetFlag() []byte {
	if x != nil {
		return x.Flag
	}
	return nil
}

func (x *MessageType00A6_Type00C1_NotOnlineImage) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *MessageType00A6_Type00C1_NotOnlineImage) GetOriginal() int32 {
	if x != nil {
		return x.Original
	}
	return 0
}

// SubMsgType0x1a
type MessageType0210_Type001A struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageType0210_Type001A) Reset() {
	*x = MessageType0210_Type001A{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[232]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type001A) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type001A) ProtoMessage() {}

func (x *MessageType0210_Type001A) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[232]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type001A.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type001A) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 0}
}

// SubMsgType0x27
type MessageType0210_Type0027 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageType0210_Type0027) Reset() {
	*x = MessageType0210_Type0027{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[233]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027) ProtoMessage() {}

func (x *MessageType0210_Type0027) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[233]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1}
}

// Submsgtype0x8a
type MessageType0210_Type008A struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageType0210_Type008A) Reset() {
	*x = MessageType0210_Type008A{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[234]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type008A) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type008A) ProtoMessage() {}

func (x *MessageType0210_Type008A) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[234]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type008A.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type008A) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 2}
}

// SubMsgType0xb3
type MessageType0210_Type00B3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageType0210_Type00B3) Reset() {
	*x = MessageType0210_Type00B3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[235]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type00B3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type00B3) ProtoMessage() {}

func (x *MessageType0210_Type00B3) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[235]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type00B3.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type00B3) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 3}
}

// MsgBody
type MessageType0210_Type001A_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileKey      []byte `protobuf:"bytes,1,opt,name=file_key,json=fileKey,proto3" json:"file_key,omitempty"`                 // "bytes_file_key"
	WordFromUin  int32  `protobuf:"varint,2,opt,name=word_from_uin,json=wordFromUin,proto3" json:"word_from_uin,omitempty"`  // "uint32_from_uin"
	WordToUin    int32  `protobuf:"varint,3,opt,name=word_to_uin,json=wordToUin,proto3" json:"word_to_uin,omitempty"`        // "uint32_to_uin"
	Status       int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                                 // "uint32_status"
	Ttl          int32  `protobuf:"varint,5,opt,name=ttl,proto3" json:"ttl,omitempty"`                                       // "uint32_ttl"
	Desc         string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`                                      // "string_desc"
	Type         int32  `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`                                     // "uint32_type"
	CaptureTimes int32  `protobuf:"varint,8,opt,name=capture_times,json=captureTimes,proto3" json:"capture_times,omitempty"` // "uint32_capture_times"
	FromUin      int64  `protobuf:"varint,9,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`                // "uint64_from_uin"
	ToUin        int64  `protobuf:"varint,10,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`                     // "uint64_to_uin"
}

func (x *MessageType0210_Type001A_Body) Reset() {
	*x = MessageType0210_Type001A_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[236]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type001A_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type001A_Body) ProtoMessage() {}

func (x *MessageType0210_Type001A_Body) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[236]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type001A_Body.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type001A_Body) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 0, 0}
}

func (x *MessageType0210_Type001A_Body) GetFileKey() []byte {
	if x != nil {
		return x.FileKey
	}
	return nil
}

func (x *MessageType0210_Type001A_Body) GetWordFromUin() int32 {
	if x != nil {
		return x.WordFromUin
	}
	return 0
}

func (x *MessageType0210_Type001A_Body) GetWordToUin() int32 {
	if x != nil {
		return x.WordToUin
	}
	return 0
}

func (x *MessageType0210_Type001A_Body) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MessageType0210_Type001A_Body) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *MessageType0210_Type001A_Body) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *MessageType0210_Type001A_Body) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageType0210_Type001A_Body) GetCaptureTimes() int32 {
	if x != nil {
		return x.CaptureTimes
	}
	return 0
}

func (x *MessageType0210_Type001A_Body) GetFromUin() int64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *MessageType0210_Type001A_Body) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

// AddGroup
type MessageType0210_Type0027_AddGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`      // "uint32_groupid"
	SortId    uint32 `protobuf:"varint,2,opt,name=sort_id,json=sortId,proto3" json:"sort_id,omitempty"`         // "uint32_sortid"
	GroupName []byte `protobuf:"bytes,3,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"` // "bytes_groupname"
}

func (x *MessageType0210_Type0027_AddGroup) Reset() {
	*x = MessageType0210_Type0027_AddGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[237]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_AddGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_AddGroup) ProtoMessage() {}

func (x *MessageType0210_Type0027_AddGroup) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[237]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_AddGroup.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_AddGroup) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 0}
}

func (x *MessageType0210_Type0027_AddGroup) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *MessageType0210_Type0027_AddGroup) GetSortId() uint32 {
	if x != nil {
		return x.SortId
	}
	return 0
}

func (x *MessageType0210_Type0027_AddGroup) GetGroupName() []byte {
	if x != nil {
		return x.GroupName
	}
	return nil
}

// AppointmentNotify
type MessageType0210_Type0027_AppointmentNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUin         uint64 `protobuf:"varint,1,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`                           // "uint64_from_uin"
	AppointmentId   string `protobuf:"bytes,2,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`          // "str_appoint_id"
	NotifyType      uint32 `protobuf:"varint,3,opt,name=notify_type,json=notifyType,proto3" json:"notify_type,omitempty"`                  // "uint32_notifytype"
	TipsContent     string `protobuf:"bytes,4,opt,name=tips_content,json=tipsContent,proto3" json:"tips_content,omitempty"`                // "str_tips_content"
	UnreadCount     uint32 `protobuf:"varint,5,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`               // "uint32_unread_count"
	JoinWording     string `protobuf:"bytes,6,opt,name=join_wording,json=joinWording,proto3" json:"join_wording,omitempty"`                // "str_join_wording"
	ViewWording     string `protobuf:"bytes,7,opt,name=view_wording,json=viewWording,proto3" json:"view_wording,omitempty"`                // "str_view_wording"
	Sig             []byte `protobuf:"bytes,8,opt,name=sig,proto3" json:"sig,omitempty"`                                                   // "bytes_sig"
	EventInfo       []byte `protobuf:"bytes,9,opt,name=event_info,json=eventInfo,proto3" json:"event_info,omitempty"`                      // "bytes_event_info"
	NearbyEventInfo []byte `protobuf:"bytes,10,opt,name=nearby_event_info,json=nearbyEventInfo,proto3" json:"nearby_event_info,omitempty"` // "bytes_nearby_event_info"
	FeedEventInfo   []byte `protobuf:"bytes,11,opt,name=feed_event_info,json=feedEventInfo,proto3" json:"feed_event_info,omitempty"`       // "bytes_feed_event_info"
}

func (x *MessageType0210_Type0027_AppointmentNotify) Reset() {
	*x = MessageType0210_Type0027_AppointmentNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[238]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_AppointmentNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_AppointmentNotify) ProtoMessage() {}

func (x *MessageType0210_Type0027_AppointmentNotify) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[238]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_AppointmentNotify.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_AppointmentNotify) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 1}
}

func (x *MessageType0210_Type0027_AppointmentNotify) GetFromUin() uint64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *MessageType0210_Type0027_AppointmentNotify) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

func (x *MessageType0210_Type0027_AppointmentNotify) GetNotifyType() uint32 {
	if x != nil {
		return x.NotifyType
	}
	return 0
}

func (x *MessageType0210_Type0027_AppointmentNotify) GetTipsContent() string {
	if x != nil {
		return x.TipsContent
	}
	return ""
}

func (x *MessageType0210_Type0027_AppointmentNotify) GetUnreadCount() uint32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *MessageType0210_Type0027_AppointmentNotify) GetJoinWording() string {
	if x != nil {
		return x.JoinWording
	}
	return ""
}

func (x *MessageType0210_Type0027_AppointmentNotify) GetViewWording() string {
	if x != nil {
		return x.ViewWording
	}
	return ""
}

func (x *MessageType0210_Type0027_AppointmentNotify) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *MessageType0210_Type0027_AppointmentNotify) GetEventInfo() []byte {
	if x != nil {
		return x.EventInfo
	}
	return nil
}

func (x *MessageType0210_Type0027_AppointmentNotify) GetNearbyEventInfo() []byte {
	if x != nil {
		return x.NearbyEventInfo
	}
	return nil
}

func (x *MessageType0210_Type0027_AppointmentNotify) GetFeedEventInfo() []byte {
	if x != nil {
		return x.FeedEventInfo
	}
	return nil
}

// BinaryMsg
type MessageType0210_Type0027_BinaryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`  // "uint32_op_type"
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // "bytes_op_value"
}

func (x *MessageType0210_Type0027_BinaryMessage) Reset() {
	*x = MessageType0210_Type0027_BinaryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[239]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_BinaryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_BinaryMessage) ProtoMessage() {}

func (x *MessageType0210_Type0027_BinaryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[239]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_BinaryMessage.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_BinaryMessage) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 2}
}

func (x *MessageType0210_Type0027_BinaryMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageType0210_Type0027_BinaryMessage) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// MsgBody
type MessageType0210_Type0027_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MessageType0210_Type0027_NotifyItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // "rpt_msg_mod_infos"
}

func (x *MessageType0210_Type0027_Body) Reset() {
	*x = MessageType0210_Type0027_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[240]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_Body) ProtoMessage() {}

func (x *MessageType0210_Type0027_Body) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[240]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_Body.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_Body) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 3}
}

func (x *MessageType0210_Type0027_Body) GetItems() []*MessageType0210_Type0027_NotifyItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// ChatMatchInfo
type MessageType0210_Type0027_ChatMatchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sig              []byte `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`                                                      // "bytes_sig"
	Uin              uint64 `protobuf:"varint,2,opt,name=uin,proto3" json:"uin,omitempty"`                                                     // "uint64_uin"
	MatchUin         uint64 `protobuf:"varint,3,opt,name=match_uin,json=matchUin,proto3" json:"match_uin,omitempty"`                           // "uint64_match_uin"
	TipsWording      []byte `protobuf:"bytes,4,opt,name=tips_wording,json=tipsWording,proto3" json:"tips_wording,omitempty"`                   // "bytes_tips_wording"
	LeftChatTime     uint32 `protobuf:"varint,5,opt,name=left_chat_time,json=leftChatTime,proto3" json:"left_chat_time,omitempty"`             // "uint32_left_chat_time"
	TimeStamp        uint64 `protobuf:"varint,6,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`                        // "uint64_time_stamp"
	MatchExpiredTime uint32 `protobuf:"varint,7,opt,name=match_expired_time,json=matchExpiredTime,proto3" json:"match_expired_time,omitempty"` // "uint32_match_expired_time"
	C2CExpiredTime   uint32 `protobuf:"varint,8,opt,name=c2c_expired_time,json=c2cExpiredTime,proto3" json:"c2c_expired_time,omitempty"`       // "uint32_c2c_expired_time"
	MatchCount       uint32 `protobuf:"varint,9,opt,name=match_count,json=matchCount,proto3" json:"match_count,omitempty"`                     // "uint32_match_count"
	Nick             []byte `protobuf:"bytes,10,opt,name=nick,proto3" json:"nick,omitempty"`                                                   // "bytes_nick"
}

func (x *MessageType0210_Type0027_ChatMatchInfo) Reset() {
	*x = MessageType0210_Type0027_ChatMatchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[241]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_ChatMatchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_ChatMatchInfo) ProtoMessage() {}

func (x *MessageType0210_Type0027_ChatMatchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[241]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_ChatMatchInfo.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_ChatMatchInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 4}
}

func (x *MessageType0210_Type0027_ChatMatchInfo) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *MessageType0210_Type0027_ChatMatchInfo) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MessageType0210_Type0027_ChatMatchInfo) GetMatchUin() uint64 {
	if x != nil {
		return x.MatchUin
	}
	return 0
}

func (x *MessageType0210_Type0027_ChatMatchInfo) GetTipsWording() []byte {
	if x != nil {
		return x.TipsWording
	}
	return nil
}

func (x *MessageType0210_Type0027_ChatMatchInfo) GetLeftChatTime() uint32 {
	if x != nil {
		return x.LeftChatTime
	}
	return 0
}

func (x *MessageType0210_Type0027_ChatMatchInfo) GetTimeStamp() uint64 {
	if x != nil {
		return x.TimeStamp
	}
	return 0
}

func (x *MessageType0210_Type0027_ChatMatchInfo) GetMatchExpiredTime() uint32 {
	if x != nil {
		return x.MatchExpiredTime
	}
	return 0
}

func (x *MessageType0210_Type0027_ChatMatchInfo) GetC2CExpiredTime() uint32 {
	if x != nil {
		return x.C2CExpiredTime
	}
	return 0
}

func (x *MessageType0210_Type0027_ChatMatchInfo) GetMatchCount() uint32 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *MessageType0210_Type0027_ChatMatchInfo) GetNick() []byte {
	if x != nil {
		return x.Nick
	}
	return nil
}

// ConfMsgRoamFlag
type MessageType0210_Type0027_ConfMessageRoamingFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfId    uint64 `protobuf:"varint,1,opt,name=conf_id,json=confId,proto3" json:"conf_id,omitempty"` // "uint64_confid"
	Flag      uint32 `protobuf:"varint,2,opt,name=flag,proto3" json:"flag,omitempty"`                   // "uint32_flag"
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`         // "uint64_timestamp"
}

func (x *MessageType0210_Type0027_ConfMessageRoamingFlag) Reset() {
	*x = MessageType0210_Type0027_ConfMessageRoamingFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[242]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_ConfMessageRoamingFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_ConfMessageRoamingFlag) ProtoMessage() {}

func (x *MessageType0210_Type0027_ConfMessageRoamingFlag) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[242]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_ConfMessageRoamingFlag.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_ConfMessageRoamingFlag) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 5}
}

func (x *MessageType0210_Type0027_ConfMessageRoamingFlag) GetConfId() uint64 {
	if x != nil {
		return x.ConfId
	}
	return 0
}

func (x *MessageType0210_Type0027_ConfMessageRoamingFlag) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *MessageType0210_Type0027_ConfMessageRoamingFlag) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// DaRenNotify
type MessageType0210_Type0027_DaRenNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin             uint64 `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`                                                  // "uint64_uin"
	LoginDays       uint32 `protobuf:"varint,2,opt,name=login_days,json=loginDays,proto3" json:"login_days,omitempty"`                     // "uint32_login_days"
	Days            uint32 `protobuf:"varint,3,opt,name=days,proto3" json:"days,omitempty"`                                                // "uint32_days"
	IsYestodayLogin uint32 `protobuf:"varint,4,opt,name=is_yestoday_login,json=isYestodayLogin,proto3" json:"is_yestoday_login,omitempty"` // "uint32_is_yestoday_login"
	IsTodayLogin    uint32 `protobuf:"varint,5,opt,name=is_today_login,json=isTodayLogin,proto3" json:"is_today_login,omitempty"`          // "uint32_is_today_login"
}

func (x *MessageType0210_Type0027_DaRenNotify) Reset() {
	*x = MessageType0210_Type0027_DaRenNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[243]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_DaRenNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_DaRenNotify) ProtoMessage() {}

func (x *MessageType0210_Type0027_DaRenNotify) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[243]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_DaRenNotify.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_DaRenNotify) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 6}
}

func (x *MessageType0210_Type0027_DaRenNotify) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MessageType0210_Type0027_DaRenNotify) GetLoginDays() uint32 {
	if x != nil {
		return x.LoginDays
	}
	return 0
}

func (x *MessageType0210_Type0027_DaRenNotify) GetDays() uint32 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *MessageType0210_Type0027_DaRenNotify) GetIsYestodayLogin() uint32 {
	if x != nil {
		return x.IsYestodayLogin
	}
	return 0
}

func (x *MessageType0210_Type0027_DaRenNotify) GetIsTodayLogin() uint32 {
	if x != nil {
		return x.IsTodayLogin
	}
	return 0
}

// DelFriend
type MessageType0210_Type0027_DeleteFriend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uins []uint64 `protobuf:"varint,1,rep,packed,name=uins,proto3" json:"uins,omitempty"` // "rpt_uint64_uins"
}

func (x *MessageType0210_Type0027_DeleteFriend) Reset() {
	*x = MessageType0210_Type0027_DeleteFriend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[244]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_DeleteFriend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_DeleteFriend) ProtoMessage() {}

func (x *MessageType0210_Type0027_DeleteFriend) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[244]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_DeleteFriend.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_DeleteFriend) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 7}
}

func (x *MessageType0210_Type0027_DeleteFriend) GetUins() []uint64 {
	if x != nil {
		return x.Uins
	}
	return nil
}

// DelGroup
type MessageType0210_Type0027_DeleteGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` // "uint32_groupid"
}

func (x *MessageType0210_Type0027_DeleteGroup) Reset() {
	*x = MessageType0210_Type0027_DeleteGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[245]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_DeleteGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_DeleteGroup) ProtoMessage() {}

func (x *MessageType0210_Type0027_DeleteGroup) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[245]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_DeleteGroup.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_DeleteGroup) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 8}
}

func (x *MessageType0210_Type0027_DeleteGroup) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

// FanpaiziNotify
type MessageType0210_Type0027_FanpaiziNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUin     uint64 `protobuf:"varint,1,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`            // "uint64_from_uin"
	FromNick    string `protobuf:"bytes,2,opt,name=from_nick,json=fromNick,proto3" json:"from_nick,omitempty"`          // "str_from_nick"
	TipsContent []byte `protobuf:"bytes,3,opt,name=tips_content,json=tipsContent,proto3" json:"tips_content,omitempty"` // "bytes_tips_content"
	Sig         []byte `protobuf:"bytes,4,opt,name=sig,proto3" json:"sig,omitempty"`                                    // "bytes_sig"
}

func (x *MessageType0210_Type0027_FanpaiziNotify) Reset() {
	*x = MessageType0210_Type0027_FanpaiziNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[246]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_FanpaiziNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_FanpaiziNotify) ProtoMessage() {}

func (x *MessageType0210_Type0027_FanpaiziNotify) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[246]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_FanpaiziNotify.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_FanpaiziNotify) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 9}
}

func (x *MessageType0210_Type0027_FanpaiziNotify) GetFromUin() uint64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *MessageType0210_Type0027_FanpaiziNotify) GetFromNick() string {
	if x != nil {
		return x.FromNick
	}
	return ""
}

func (x *MessageType0210_Type0027_FanpaiziNotify) GetTipsContent() []byte {
	if x != nil {
		return x.TipsContent
	}
	return nil
}

func (x *MessageType0210_Type0027_FanpaiziNotify) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

// ForwardBody
type MessageType0210_Type0027_NotifyItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                        uint32                                                   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                                                                                         // "uint32_notify_type"
	OpType                      uint32                                                   `protobuf:"varint,2,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty"`                                                                       // "uint32_op_type"
	AddGroup                    *MessageType0210_Type0027_AddGroup                       `protobuf:"bytes,3,opt,name=add_group,json=addGroup,proto3" json:"add_group,omitempty"`                                                                  // "msg_add_group"
	DeleteGroup                 *MessageType0210_Type0027_DeleteGroup                    `protobuf:"bytes,4,opt,name=delete_group,json=deleteGroup,proto3" json:"delete_group,omitempty"`                                                         // "msg_del_group"
	ModGroupName                *MessageType0210_Type0027_ModGroupName                   `protobuf:"bytes,5,opt,name=mod_group_name,json=modGroupName,proto3" json:"mod_group_name,omitempty"`                                                    // "msg_mod_group_name"
	ModGroupSort                *MessageType0210_Type0027_ModGroupSort                   `protobuf:"bytes,6,opt,name=mod_group_sort,json=modGroupSort,proto3" json:"mod_group_sort,omitempty"`                                                    // "msg_mod_group_sort"
	ModFriendGroup              *MessageType0210_Type0027_ModFriendGroup                 `protobuf:"bytes,7,opt,name=mod_friend_group,json=modFriendGroup,proto3" json:"mod_friend_group,omitempty"`                                              // "msg_mod_friend_group"
	ModProfile                  *MessageType0210_Type0027_ModProfile                     `protobuf:"bytes,8,opt,name=mod_profile,json=modProfile,proto3" json:"mod_profile,omitempty"`                                                            // "msg_mod_profile"
	ModFriendRemark             *MessageType0210_Type0027_ModFriendRemark                `protobuf:"bytes,9,opt,name=mod_friend_remark,json=modFriendRemark,proto3" json:"mod_friend_remark,omitempty"`                                           // "msg_mod_friend_remark"
	ModLongNick                 *MessageType0210_Type0027_ModLongNick                    `protobuf:"bytes,10,opt,name=mod_long_nick,json=modLongNick,proto3" json:"mod_long_nick,omitempty"`                                                      // "msg_mod_long_nick"
	ModCustomFace               *MessageType0210_Type0027_ModCustomFace                  `protobuf:"bytes,11,opt,name=mod_custom_face,json=modCustomFace,proto3" json:"mod_custom_face,omitempty"`                                                // "msg_mod_custom_face"
	ModGroupProfile             *MessageType0210_Type0027_ModGroupProfile                `protobuf:"bytes,12,opt,name=mod_group_profile,json=modGroupProfile,proto3" json:"mod_group_profile,omitempty"`                                          // "msg_mod_group_profile"
	ModGroupMemberProfile       *MessageType0210_Type0027_ModGroupMemberProfile          `protobuf:"bytes,13,opt,name=mod_group_member_profile,json=modGroupMemberProfile,proto3" json:"mod_group_member_profile,omitempty"`                      // "msg_mod_group_member_profile"
	DelFriend                   *MessageType0210_Type0027_DeleteFriend                   `protobuf:"bytes,14,opt,name=del_friend,json=delFriend,proto3" json:"del_friend,omitempty"`                                                              // "msg_del_friend"
	RoamPriv                    *MessageType0210_Type0027_ModFriendRoamingPriv           `protobuf:"bytes,15,opt,name=roam_priv,json=roamPriv,proto3" json:"roam_priv,omitempty"`                                                                 // "msg_roam_priv"
	GroupMsgRoamFlag            *MessageType0210_Type0027_GroupMessageRoamingFlag        `protobuf:"bytes,16,opt,name=group_msg_roam_flag,json=groupMsgRoamFlag,proto3" json:"group_msg_roam_flag,omitempty"`                                     // "msg_grp_msg_roam_flag"
	ConfMsgRoamFlag             *MessageType0210_Type0027_ConfMessageRoamingFlag         `protobuf:"bytes,17,opt,name=conf_msg_roam_flag,json=confMsgRoamFlag,proto3" json:"conf_msg_roam_flag,omitempty"`                                        // "msg_conf_msg_roam_flag"
	ModRichLongNick             *MessageType0210_Type0027_ModLongNick                    `protobuf:"bytes,18,opt,name=mod_rich_long_nick,json=modRichLongNick,proto3" json:"mod_rich_long_nick,omitempty"`                                        // "msg_mod_rich_long_nick"
	BinPkg                      *MessageType0210_Type0027_BinaryMessage                  `protobuf:"bytes,19,opt,name=bin_pkg,json=binPkg,proto3" json:"bin_pkg,omitempty"`                                                                       // "msg_bin_pkg"
	ModFriendRings              *MessageType0210_Type0027_ModSNSGeneralInfo              `protobuf:"bytes,20,opt,name=mod_friend_rings,json=modFriendRings,proto3" json:"mod_friend_rings,omitempty"`                                             // "msg_mod_friend_rings"
	ModConfProfile              *MessageType0210_Type0027_ModConfProfile                 `protobuf:"bytes,21,opt,name=mod_conf_profile,json=modConfProfile,proto3" json:"mod_conf_profile,omitempty"`                                             // "msg_mod_conf_profile"
	ModFriendFlag               *MessageType0210_Type0027_SNSUpdateFlag                  `protobuf:"bytes,22,opt,name=mod_friend_flag,json=modFriendFlag,proto3" json:"mod_friend_flag,omitempty"`                                                // "msg_mod_friend_flag"
	AppointmentNotify           *MessageType0210_Type0027_AppointmentNotify              `protobuf:"bytes,23,opt,name=appointment_notify,json=appointmentNotify,proto3" json:"appointment_notify,omitempty"`                                      // "msg_appointment_notify"
	DarenNotify                 *MessageType0210_Type0027_DaRenNotify                    `protobuf:"bytes,25,opt,name=daren_notify,json=darenNotify,proto3" json:"daren_notify,omitempty"`                                                        // "msg_daren_notify"
	NewComeinUserNotify         *MessageType0210_Type0027_NewComeinUserNotify            `protobuf:"bytes,26,opt,name=new_comein_user_notify,json=newComeinUserNotify,proto3" json:"new_comein_user_notify,omitempty"`                            // "msg_new_comein_user_notify"
	PushSearchDev               *MessageType0210_Type0027_PushSearchDev                  `protobuf:"bytes,200,opt,name=push_search_dev,json=pushSearchDev,proto3" json:"push_search_dev,omitempty"`                                               // "msg_push_search_dev"
	PushReportDev               *MessageType0210_Type0027_PushReportDev                  `protobuf:"bytes,201,opt,name=push_report_dev,json=pushReportDev,proto3" json:"push_report_dev,omitempty"`                                               // "msg_push_report_dev"
	QqPayPush                   *MessageType0210_Type0027_QQPayPush                      `protobuf:"bytes,202,opt,name=qq_pay_push,json=qqPayPush,proto3" json:"qq_pay_push,omitempty"`                                                           // "msg_qq_pay_push"
	RedpointInfo                []byte                                                   `protobuf:"bytes,203,opt,name=redpoint_info,json=redpointInfo,proto3" json:"redpoint_info,omitempty"`                                                    // "bytes_redpoint_info"
	HotFriendNotify             *MessageType0210_Type0027_HotFriendNotify                `protobuf:"bytes,204,opt,name=hot_friend_notify,json=hotFriendNotify,proto3" json:"hot_friend_notify,omitempty"`                                         // "msg_hot_friend_notify"
	PraiseRankNotify            *MessageType0210_Type0027_PraiseRankNotify               `protobuf:"bytes,205,opt,name=praise_rank_notify,json=praiseRankNotify,proto3" json:"praise_rank_notify,omitempty"`                                      // "msg_praise_rank_notify"
	CampusNotify                *MessageType0210_Type0027_MQQCampusNotify                `protobuf:"bytes,210,opt,name=campus_notify,json=campusNotify,proto3" json:"campus_notify,omitempty"`                                                    // "msg_campus_notify"
	ModRichLongNickEx           *MessageType0210_Type0027_ModLongNick                    `protobuf:"bytes,211,opt,name=mod_rich_long_nick_ex,json=modRichLongNickEx,proto3" json:"mod_rich_long_nick_ex,omitempty"`                               // "msg_mod_rich_long_nick_ex"
	ChatMatchInfo               *MessageType0210_Type0027_ChatMatchInfo                  `protobuf:"bytes,212,opt,name=chat_match_info,json=chatMatchInfo,proto3" json:"chat_match_info,omitempty"`                                               // "msg_chat_match_info"
	FrdCustomOnlineStatusChange *MessageType0210_Type0027_FriendCustomOnlineStatusChange `protobuf:"bytes,214,opt,name=frd_custom_online_status_change,json=frdCustomOnlineStatusChange,proto3" json:"frd_custom_online_status_change,omitempty"` // "msg_frd_custom_online_status_change"
	FanpanziNotify              *MessageType0210_Type0027_FanpaiziNotify                 `protobuf:"bytes,2000,opt,name=fanpanzi_notify,json=fanpanziNotify,proto3" json:"fanpanzi_notify,omitempty"`                                             // "msg_fanpanzi_notify"
}

func (x *MessageType0210_Type0027_NotifyItem) Reset() {
	*x = MessageType0210_Type0027_NotifyItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[247]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_NotifyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_NotifyItem) ProtoMessage() {}

func (x *MessageType0210_Type0027_NotifyItem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[247]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_NotifyItem.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_NotifyItem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 10}
}

func (x *MessageType0210_Type0027_NotifyItem) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageType0210_Type0027_NotifyItem) GetOpType() uint32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

func (x *MessageType0210_Type0027_NotifyItem) GetAddGroup() *MessageType0210_Type0027_AddGroup {
	if x != nil {
		return x.AddGroup
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetDeleteGroup() *MessageType0210_Type0027_DeleteGroup {
	if x != nil {
		return x.DeleteGroup
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetModGroupName() *MessageType0210_Type0027_ModGroupName {
	if x != nil {
		return x.ModGroupName
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetModGroupSort() *MessageType0210_Type0027_ModGroupSort {
	if x != nil {
		return x.ModGroupSort
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetModFriendGroup() *MessageType0210_Type0027_ModFriendGroup {
	if x != nil {
		return x.ModFriendGroup
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetModProfile() *MessageType0210_Type0027_ModProfile {
	if x != nil {
		return x.ModProfile
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetModFriendRemark() *MessageType0210_Type0027_ModFriendRemark {
	if x != nil {
		return x.ModFriendRemark
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetModLongNick() *MessageType0210_Type0027_ModLongNick {
	if x != nil {
		return x.ModLongNick
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetModCustomFace() *MessageType0210_Type0027_ModCustomFace {
	if x != nil {
		return x.ModCustomFace
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetModGroupProfile() *MessageType0210_Type0027_ModGroupProfile {
	if x != nil {
		return x.ModGroupProfile
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetModGroupMemberProfile() *MessageType0210_Type0027_ModGroupMemberProfile {
	if x != nil {
		return x.ModGroupMemberProfile
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetDelFriend() *MessageType0210_Type0027_DeleteFriend {
	if x != nil {
		return x.DelFriend
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetRoamPriv() *MessageType0210_Type0027_ModFriendRoamingPriv {
	if x != nil {
		return x.RoamPriv
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetGroupMsgRoamFlag() *MessageType0210_Type0027_GroupMessageRoamingFlag {
	if x != nil {
		return x.GroupMsgRoamFlag
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetConfMsgRoamFlag() *MessageType0210_Type0027_ConfMessageRoamingFlag {
	if x != nil {
		return x.ConfMsgRoamFlag
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetModRichLongNick() *MessageType0210_Type0027_ModLongNick {
	if x != nil {
		return x.ModRichLongNick
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetBinPkg() *MessageType0210_Type0027_BinaryMessage {
	if x != nil {
		return x.BinPkg
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetModFriendRings() *MessageType0210_Type0027_ModSNSGeneralInfo {
	if x != nil {
		return x.ModFriendRings
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetModConfProfile() *MessageType0210_Type0027_ModConfProfile {
	if x != nil {
		return x.ModConfProfile
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetModFriendFlag() *MessageType0210_Type0027_SNSUpdateFlag {
	if x != nil {
		return x.ModFriendFlag
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetAppointmentNotify() *MessageType0210_Type0027_AppointmentNotify {
	if x != nil {
		return x.AppointmentNotify
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetDarenNotify() *MessageType0210_Type0027_DaRenNotify {
	if x != nil {
		return x.DarenNotify
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetNewComeinUserNotify() *MessageType0210_Type0027_NewComeinUserNotify {
	if x != nil {
		return x.NewComeinUserNotify
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetPushSearchDev() *MessageType0210_Type0027_PushSearchDev {
	if x != nil {
		return x.PushSearchDev
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetPushReportDev() *MessageType0210_Type0027_PushReportDev {
	if x != nil {
		return x.PushReportDev
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetQqPayPush() *MessageType0210_Type0027_QQPayPush {
	if x != nil {
		return x.QqPayPush
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetRedpointInfo() []byte {
	if x != nil {
		return x.RedpointInfo
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetHotFriendNotify() *MessageType0210_Type0027_HotFriendNotify {
	if x != nil {
		return x.HotFriendNotify
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetPraiseRankNotify() *MessageType0210_Type0027_PraiseRankNotify {
	if x != nil {
		return x.PraiseRankNotify
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetCampusNotify() *MessageType0210_Type0027_MQQCampusNotify {
	if x != nil {
		return x.CampusNotify
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetModRichLongNickEx() *MessageType0210_Type0027_ModLongNick {
	if x != nil {
		return x.ModRichLongNickEx
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetChatMatchInfo() *MessageType0210_Type0027_ChatMatchInfo {
	if x != nil {
		return x.ChatMatchInfo
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetFrdCustomOnlineStatusChange() *MessageType0210_Type0027_FriendCustomOnlineStatusChange {
	if x != nil {
		return x.FrdCustomOnlineStatusChange
	}
	return nil
}

func (x *MessageType0210_Type0027_NotifyItem) GetFanpanziNotify() *MessageType0210_Type0027_FanpaiziNotify {
	if x != nil {
		return x.FanpanziNotify
	}
	return nil
}

// FrdCustomOnlineStatusChange
type MessageType0210_Type0027_FriendCustomOnlineStatusChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin uint64 `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"` // "uint64_uin"
}

func (x *MessageType0210_Type0027_FriendCustomOnlineStatusChange) Reset() {
	*x = MessageType0210_Type0027_FriendCustomOnlineStatusChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[248]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_FriendCustomOnlineStatusChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_FriendCustomOnlineStatusChange) ProtoMessage() {}

func (x *MessageType0210_Type0027_FriendCustomOnlineStatusChange) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[248]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_FriendCustomOnlineStatusChange.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_FriendCustomOnlineStatusChange) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 11}
}

func (x *MessageType0210_Type0027_FriendCustomOnlineStatusChange) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

// FriendGroup
type MessageType0210_Type0027_FriendGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin        uint64   `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`                                          // "uint64_fuin"
	OldGroupId []uint32 `protobuf:"varint,2,rep,packed,name=old_group_id,json=oldGroupId,proto3" json:"old_group_id,omitempty"` // "rpt_uint32_old_group_id"
	NewGroupId []uint32 `protobuf:"varint,3,rep,packed,name=new_group_id,json=newGroupId,proto3" json:"new_group_id,omitempty"` // "rpt_uint32_new_group_id"
}

func (x *MessageType0210_Type0027_FriendGroup) Reset() {
	*x = MessageType0210_Type0027_FriendGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[249]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_FriendGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_FriendGroup) ProtoMessage() {}

func (x *MessageType0210_Type0027_FriendGroup) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[249]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_FriendGroup.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_FriendGroup) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 12}
}

func (x *MessageType0210_Type0027_FriendGroup) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MessageType0210_Type0027_FriendGroup) GetOldGroupId() []uint32 {
	if x != nil {
		return x.OldGroupId
	}
	return nil
}

func (x *MessageType0210_Type0027_FriendGroup) GetNewGroupId() []uint32 {
	if x != nil {
		return x.NewGroupId
	}
	return nil
}

// FriendRemark
type MessageType0210_Type0027_FriendRemark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                              // "uint32_type"
	Uin        uint64 `protobuf:"varint,2,opt,name=uin,proto3" json:"uin,omitempty"`                                // "uint64_fuin"
	RemarkName []byte `protobuf:"bytes,3,opt,name=remark_name,json=remarkName,proto3" json:"remark_name,omitempty"` // "bytes_rmk_name"
	GroupCode  uint64 `protobuf:"varint,4,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`   // "uint64_group_code"
}

func (x *MessageType0210_Type0027_FriendRemark) Reset() {
	*x = MessageType0210_Type0027_FriendRemark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[250]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_FriendRemark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_FriendRemark) ProtoMessage() {}

func (x *MessageType0210_Type0027_FriendRemark) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[250]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_FriendRemark.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_FriendRemark) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 13}
}

func (x *MessageType0210_Type0027_FriendRemark) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageType0210_Type0027_FriendRemark) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MessageType0210_Type0027_FriendRemark) GetRemarkName() []byte {
	if x != nil {
		return x.RemarkName
	}
	return nil
}

func (x *MessageType0210_Type0027_FriendRemark) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

// GPS
type MessageType0210_Type0027_GPS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat  int32 `protobuf:"varint,1,opt,name=lat,proto3" json:"lat,omitempty"`   // "int32_lat"
	Lon  int32 `protobuf:"varint,2,opt,name=lon,proto3" json:"lon,omitempty"`   // "int32_lon"
	Alt  int32 `protobuf:"varint,3,opt,name=alt,proto3" json:"alt,omitempty"`   // "int32_alt"
	Type int32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"` // "int32_type"
}

func (x *MessageType0210_Type0027_GPS) Reset() {
	*x = MessageType0210_Type0027_GPS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[251]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_GPS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_GPS) ProtoMessage() {}

func (x *MessageType0210_Type0027_GPS) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[251]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_GPS.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_GPS) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 14}
}

func (x *MessageType0210_Type0027_GPS) GetLat() int32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *MessageType0210_Type0027_GPS) GetLon() int32 {
	if x != nil {
		return x.Lon
	}
	return 0
}

func (x *MessageType0210_Type0027_GPS) GetAlt() int32 {
	if x != nil {
		return x.Alt
	}
	return 0
}

func (x *MessageType0210_Type0027_GPS) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// GroupMemberProfileInfo
type MessageType0210_Type0027_GroupMemberProfileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field uint32 `protobuf:"varint,1,opt,name=field,proto3" json:"field,omitempty"` // "uint32_field"
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`  // "bytes_value"
}

func (x *MessageType0210_Type0027_GroupMemberProfileInfo) Reset() {
	*x = MessageType0210_Type0027_GroupMemberProfileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[252]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_GroupMemberProfileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_GroupMemberProfileInfo) ProtoMessage() {}

func (x *MessageType0210_Type0027_GroupMemberProfileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[252]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_GroupMemberProfileInfo.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_GroupMemberProfileInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 15}
}

func (x *MessageType0210_Type0027_GroupMemberProfileInfo) GetField() uint32 {
	if x != nil {
		return x.Field
	}
	return 0
}

func (x *MessageType0210_Type0027_GroupMemberProfileInfo) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// GroupProfileInfo
type MessageType0210_Type0027_GroupProfileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field uint32 `protobuf:"varint,1,opt,name=field,proto3" json:"field,omitempty"` // "uint32_field"
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`  // "bytes_value"
}

func (x *MessageType0210_Type0027_GroupProfileInfo) Reset() {
	*x = MessageType0210_Type0027_GroupProfileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[253]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_GroupProfileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_GroupProfileInfo) ProtoMessage() {}

func (x *MessageType0210_Type0027_GroupProfileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[253]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_GroupProfileInfo.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_GroupProfileInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 16}
}

func (x *MessageType0210_Type0027_GroupProfileInfo) GetField() uint32 {
	if x != nil {
		return x.Field
	}
	return 0
}

func (x *MessageType0210_Type0027_GroupProfileInfo) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// GroupSort
type MessageType0210_Type0027_GroupSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` // "uint32_groupid"
	SortId  uint32 `protobuf:"varint,2,opt,name=sort_id,json=sortId,proto3" json:"sort_id,omitempty"`    // "uint32_sortid"
}

func (x *MessageType0210_Type0027_GroupSort) Reset() {
	*x = MessageType0210_Type0027_GroupSort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[254]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_GroupSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_GroupSort) ProtoMessage() {}

func (x *MessageType0210_Type0027_GroupSort) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[254]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_GroupSort.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_GroupSort) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 17}
}

func (x *MessageType0210_Type0027_GroupSort) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *MessageType0210_Type0027_GroupSort) GetSortId() uint32 {
	if x != nil {
		return x.SortId
	}
	return 0
}

// GrpMsgRoamFlag
type MessageType0210_Type0027_GroupMessageRoamingFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode uint64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"` // "uint64_groupcode"
	Flag      uint32 `protobuf:"varint,2,opt,name=flag,proto3" json:"flag,omitempty"`                            // "uint32_flag"
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                  // "uint64_timestamp"
}

func (x *MessageType0210_Type0027_GroupMessageRoamingFlag) Reset() {
	*x = MessageType0210_Type0027_GroupMessageRoamingFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[255]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_GroupMessageRoamingFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_GroupMessageRoamingFlag) ProtoMessage() {}

func (x *MessageType0210_Type0027_GroupMessageRoamingFlag) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[255]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_GroupMessageRoamingFlag.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_GroupMessageRoamingFlag) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 18}
}

func (x *MessageType0210_Type0027_GroupMessageRoamingFlag) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *MessageType0210_Type0027_GroupMessageRoamingFlag) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *MessageType0210_Type0027_GroupMessageRoamingFlag) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// HotFriendNotify
type MessageType0210_Type0027_HotFriendNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DstUin         uint64 `protobuf:"varint,1,opt,name=dst_uin,json=dstUin,proto3" json:"dst_uin,omitempty"`                            // "uint64_dst_uin"
	PraiseHotLevel uint32 `protobuf:"varint,2,opt,name=praise_hot_level,json=praiseHotLevel,proto3" json:"praise_hot_level,omitempty"`  // "uint32_praise_hot_level"
	ChatHotLevel   uint32 `protobuf:"varint,3,opt,name=chat_hot_level,json=chatHotLevel,proto3" json:"chat_hot_level,omitempty"`        // "uint32_chat_hot_level"
	PraiseHotDays  uint32 `protobuf:"varint,4,opt,name=praise_hot_days,json=praiseHotDays,proto3" json:"praise_hot_days,omitempty"`     // "uint32_praise_hot_days"
	ChatHotDays    uint32 `protobuf:"varint,5,opt,name=chat_hot_days,json=chatHotDays,proto3" json:"chat_hot_days,omitempty"`           // "uint32_chat_hot_days"
	CloseLevel     uint32 `protobuf:"varint,6,opt,name=close_level,json=closeLevel,proto3" json:"close_level,omitempty"`                // "uint32_close_level"
	CloseDays      uint32 `protobuf:"varint,7,opt,name=close_days,json=closeDays,proto3" json:"close_days,omitempty"`                   // "uint32_close_days"
	PraiseFlag     uint32 `protobuf:"varint,8,opt,name=praise_flag,json=praiseFlag,proto3" json:"praise_flag,omitempty"`                // "uint32_praise_flag"
	ChatFlag       uint32 `protobuf:"varint,9,opt,name=chat_flag,json=chatFlag,proto3" json:"chat_flag,omitempty"`                      // "uint32_chat_flag"
	CloseFlag      uint32 `protobuf:"varint,10,opt,name=close_flag,json=closeFlag,proto3" json:"close_flag,omitempty"`                  // "uint32_close_flag"
	NotifyTime     uint64 `protobuf:"varint,11,opt,name=notify_time,json=notifyTime,proto3" json:"notify_time,omitempty"`               // "uint64_notify_time"
	LastPraiseTime uint64 `protobuf:"varint,12,opt,name=last_praise_time,json=lastPraiseTime,proto3" json:"last_praise_time,omitempty"` // "uint64_last_praise_time"
	LastChatTime   uint64 `protobuf:"varint,13,opt,name=last_chat_time,json=lastChatTime,proto3" json:"last_chat_time,omitempty"`       // "uint64_last_chat_time"
	QzoneHotLevel  uint32 `protobuf:"varint,14,opt,name=qzone_hot_level,json=qzoneHotLevel,proto3" json:"qzone_hot_level,omitempty"`    // "uint32_qzone_hot_level"
	QzoneHotDays   uint32 `protobuf:"varint,15,opt,name=qzone_hot_days,json=qzoneHotDays,proto3" json:"qzone_hot_days,omitempty"`       // "uint32_qzone_hot_days"
	QzoneFlag      uint32 `protobuf:"varint,16,opt,name=qzone_flag,json=qzoneFlag,proto3" json:"qzone_flag,omitempty"`                  // "uint32_qzone_flag"
	LastQzoneTime  uint64 `protobuf:"varint,17,opt,name=last_qzone_time,json=lastQzoneTime,proto3" json:"last_qzone_time,omitempty"`    // "uint64_last_qzone_time"
}

func (x *MessageType0210_Type0027_HotFriendNotify) Reset() {
	*x = MessageType0210_Type0027_HotFriendNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[256]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_HotFriendNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_HotFriendNotify) ProtoMessage() {}

func (x *MessageType0210_Type0027_HotFriendNotify) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[256]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_HotFriendNotify.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_HotFriendNotify) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 19}
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetDstUin() uint64 {
	if x != nil {
		return x.DstUin
	}
	return 0
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetPraiseHotLevel() uint32 {
	if x != nil {
		return x.PraiseHotLevel
	}
	return 0
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetChatHotLevel() uint32 {
	if x != nil {
		return x.ChatHotLevel
	}
	return 0
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetPraiseHotDays() uint32 {
	if x != nil {
		return x.PraiseHotDays
	}
	return 0
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetChatHotDays() uint32 {
	if x != nil {
		return x.ChatHotDays
	}
	return 0
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetCloseLevel() uint32 {
	if x != nil {
		return x.CloseLevel
	}
	return 0
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetCloseDays() uint32 {
	if x != nil {
		return x.CloseDays
	}
	return 0
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetPraiseFlag() uint32 {
	if x != nil {
		return x.PraiseFlag
	}
	return 0
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetChatFlag() uint32 {
	if x != nil {
		return x.ChatFlag
	}
	return 0
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetCloseFlag() uint32 {
	if x != nil {
		return x.CloseFlag
	}
	return 0
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetNotifyTime() uint64 {
	if x != nil {
		return x.NotifyTime
	}
	return 0
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetLastPraiseTime() uint64 {
	if x != nil {
		return x.LastPraiseTime
	}
	return 0
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetLastChatTime() uint64 {
	if x != nil {
		return x.LastChatTime
	}
	return 0
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetQzoneHotLevel() uint32 {
	if x != nil {
		return x.QzoneHotLevel
	}
	return 0
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetQzoneHotDays() uint32 {
	if x != nil {
		return x.QzoneHotDays
	}
	return 0
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetQzoneFlag() uint32 {
	if x != nil {
		return x.QzoneFlag
	}
	return 0
}

func (x *MessageType0210_Type0027_HotFriendNotify) GetLastQzoneTime() uint64 {
	if x != nil {
		return x.LastQzoneTime
	}
	return 0
}

// MQQCampusNotify
type MessageType0210_Type0027_MQQCampusNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUin uint64 `protobuf:"varint,1,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"` // "uint64_from_uin"
	Wording string `protobuf:"bytes,2,opt,name=wording,proto3" json:"wording,omitempty"`                 // "str_wording"
	Target  string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`                   // "str_target"
	Type    uint32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`                      // "uint32_type"
	Source  string `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`                   // "str_source"
}

func (x *MessageType0210_Type0027_MQQCampusNotify) Reset() {
	*x = MessageType0210_Type0027_MQQCampusNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[257]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_MQQCampusNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_MQQCampusNotify) ProtoMessage() {}

func (x *MessageType0210_Type0027_MQQCampusNotify) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[257]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_MQQCampusNotify.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_MQQCampusNotify) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 20}
}

func (x *MessageType0210_Type0027_MQQCampusNotify) GetFromUin() uint64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *MessageType0210_Type0027_MQQCampusNotify) GetWording() string {
	if x != nil {
		return x.Wording
	}
	return ""
}

func (x *MessageType0210_Type0027_MQQCampusNotify) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *MessageType0210_Type0027_MQQCampusNotify) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageType0210_Type0027_MQQCampusNotify) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// ModConfProfile
type MessageType0210_Type0027_ModConfProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin     uint64                                  `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`                        // "uint64_uin"
	ConfUin uint32                                  `protobuf:"varint,2,opt,name=conf_uin,json=confUin,proto3" json:"conf_uin,omitempty"` // "uint32_conf_uin"
	Items   []*MessageType0210_Type0027_ProfileInfo `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`                     // "rpt_msg_profile_infos"
}

func (x *MessageType0210_Type0027_ModConfProfile) Reset() {
	*x = MessageType0210_Type0027_ModConfProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[258]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_ModConfProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_ModConfProfile) ProtoMessage() {}

func (x *MessageType0210_Type0027_ModConfProfile) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[258]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_ModConfProfile.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_ModConfProfile) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 21}
}

func (x *MessageType0210_Type0027_ModConfProfile) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MessageType0210_Type0027_ModConfProfile) GetConfUin() uint32 {
	if x != nil {
		return x.ConfUin
	}
	return 0
}

func (x *MessageType0210_Type0027_ModConfProfile) GetItems() []*MessageType0210_Type0027_ProfileInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

// ModCustomFace
type MessageType0210_Type0027_ModCustomFace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                            // "uint32_type"
	Uin       uint64 `protobuf:"varint,2,opt,name=uin,proto3" json:"uin,omitempty"`                              // "uint64_uin"
	GroupCode uint64 `protobuf:"varint,3,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"` // "uint64_group_code"
	CmdUin    uint64 `protobuf:"varint,4,opt,name=cmd_uin,json=cmdUin,proto3" json:"cmd_uin,omitempty"`          // "uint64_cmd_uin"
}

func (x *MessageType0210_Type0027_ModCustomFace) Reset() {
	*x = MessageType0210_Type0027_ModCustomFace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[259]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_ModCustomFace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_ModCustomFace) ProtoMessage() {}

func (x *MessageType0210_Type0027_ModCustomFace) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[259]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_ModCustomFace.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_ModCustomFace) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 22}
}

func (x *MessageType0210_Type0027_ModCustomFace) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageType0210_Type0027_ModCustomFace) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MessageType0210_Type0027_ModCustomFace) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *MessageType0210_Type0027_ModCustomFace) GetCmdUin() uint64 {
	if x != nil {
		return x.CmdUin
	}
	return 0
}

// ModFrdRoamPriv
type MessageType0210_Type0027_ModFriendRoamingPriv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MessageType0210_Type0027_OneRoamingPriv `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // "rpt_msg_roam_priv"
}

func (x *MessageType0210_Type0027_ModFriendRoamingPriv) Reset() {
	*x = MessageType0210_Type0027_ModFriendRoamingPriv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[260]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_ModFriendRoamingPriv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_ModFriendRoamingPriv) ProtoMessage() {}

func (x *MessageType0210_Type0027_ModFriendRoamingPriv) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[260]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_ModFriendRoamingPriv.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_ModFriendRoamingPriv) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 23}
}

func (x *MessageType0210_Type0027_ModFriendRoamingPriv) GetItems() []*MessageType0210_Type0027_OneRoamingPriv {
	if x != nil {
		return x.Items
	}
	return nil
}

// ModFriendGroup
type MessageType0210_Type0027_ModFriendGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MessageType0210_Type0027_FriendGroup `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // "rpt_msg_frd_group"
}

func (x *MessageType0210_Type0027_ModFriendGroup) Reset() {
	*x = MessageType0210_Type0027_ModFriendGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[261]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_ModFriendGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_ModFriendGroup) ProtoMessage() {}

func (x *MessageType0210_Type0027_ModFriendGroup) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[261]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_ModFriendGroup.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_ModFriendGroup) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 24}
}

func (x *MessageType0210_Type0027_ModFriendGroup) GetItems() []*MessageType0210_Type0027_FriendGroup {
	if x != nil {
		return x.Items
	}
	return nil
}

// ModFriendRemark
type MessageType0210_Type0027_ModFriendRemark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MessageType0210_Type0027_FriendRemark `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // "rpt_msg_frd_rmk"
}

func (x *MessageType0210_Type0027_ModFriendRemark) Reset() {
	*x = MessageType0210_Type0027_ModFriendRemark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[262]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_ModFriendRemark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_ModFriendRemark) ProtoMessage() {}

func (x *MessageType0210_Type0027_ModFriendRemark) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[262]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_ModFriendRemark.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_ModFriendRemark) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 25}
}

func (x *MessageType0210_Type0027_ModFriendRemark) GetItems() []*MessageType0210_Type0027_FriendRemark {
	if x != nil {
		return x.Items
	}
	return nil
}

// ModGroupMemberProfile
type MessageType0210_Type0027_ModGroupMemberProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupUin  uint64                                             `protobuf:"varint,1,opt,name=group_uin,json=groupUin,proto3" json:"group_uin,omitempty"`    // "uint64_group_uin"
	Uin       uint64                                             `protobuf:"varint,2,opt,name=uin,proto3" json:"uin,omitempty"`                              // "uint64_uin"
	Items     []*MessageType0210_Type0027_GroupMemberProfileInfo `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`                           // "rpt_msg_group_member_profile_infos"
	GroupCode uint64                                             `protobuf:"varint,4,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"` // "uint64_group_code"
}

func (x *MessageType0210_Type0027_ModGroupMemberProfile) Reset() {
	*x = MessageType0210_Type0027_ModGroupMemberProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[263]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_ModGroupMemberProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_ModGroupMemberProfile) ProtoMessage() {}

func (x *MessageType0210_Type0027_ModGroupMemberProfile) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[263]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_ModGroupMemberProfile.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_ModGroupMemberProfile) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 26}
}

func (x *MessageType0210_Type0027_ModGroupMemberProfile) GetGroupUin() uint64 {
	if x != nil {
		return x.GroupUin
	}
	return 0
}

func (x *MessageType0210_Type0027_ModGroupMemberProfile) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MessageType0210_Type0027_ModGroupMemberProfile) GetItems() []*MessageType0210_Type0027_GroupMemberProfileInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *MessageType0210_Type0027_ModGroupMemberProfile) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

// ModGroupName
type MessageType0210_Type0027_ModGroupName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId   uint32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`      // "uint32_groupid"
	GroupName []byte `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"` // "bytes_groupname"
}

func (x *MessageType0210_Type0027_ModGroupName) Reset() {
	*x = MessageType0210_Type0027_ModGroupName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[264]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_ModGroupName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_ModGroupName) ProtoMessage() {}

func (x *MessageType0210_Type0027_ModGroupName) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[264]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_ModGroupName.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_ModGroupName) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 27}
}

func (x *MessageType0210_Type0027_ModGroupName) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *MessageType0210_Type0027_ModGroupName) GetGroupName() []byte {
	if x != nil {
		return x.GroupName
	}
	return nil
}

// ModGroupProfile
type MessageType0210_Type0027_ModGroupProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupUin  uint64                                       `protobuf:"varint,1,opt,name=group_uin,json=groupUin,proto3" json:"group_uin,omitempty"`    // "uint64_group_uin"
	Items     []*MessageType0210_Type0027_GroupProfileInfo `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`                           // "rpt_msg_group_profile_infos"
	GroupCode uint64                                       `protobuf:"varint,3,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"` // "uint64_group_code"
	CmdUin    uint64                                       `protobuf:"varint,4,opt,name=cmd_uin,json=cmdUin,proto3" json:"cmd_uin,omitempty"`          // "uint64_cmd_uin"
}

func (x *MessageType0210_Type0027_ModGroupProfile) Reset() {
	*x = MessageType0210_Type0027_ModGroupProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[265]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_ModGroupProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_ModGroupProfile) ProtoMessage() {}

func (x *MessageType0210_Type0027_ModGroupProfile) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[265]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_ModGroupProfile.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_ModGroupProfile) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 28}
}

func (x *MessageType0210_Type0027_ModGroupProfile) GetGroupUin() uint64 {
	if x != nil {
		return x.GroupUin
	}
	return 0
}

func (x *MessageType0210_Type0027_ModGroupProfile) GetItems() []*MessageType0210_Type0027_GroupProfileInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *MessageType0210_Type0027_ModGroupProfile) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *MessageType0210_Type0027_ModGroupProfile) GetCmdUin() uint64 {
	if x != nil {
		return x.CmdUin
	}
	return 0
}

// ModGroupSort
type MessageType0210_Type0027_ModGroupSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MessageType0210_Type0027_GroupSort `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // "rpt_msg_groupsort"
}

func (x *MessageType0210_Type0027_ModGroupSort) Reset() {
	*x = MessageType0210_Type0027_ModGroupSort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[266]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_ModGroupSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_ModGroupSort) ProtoMessage() {}

func (x *MessageType0210_Type0027_ModGroupSort) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[266]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_ModGroupSort.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_ModGroupSort) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 29}
}

func (x *MessageType0210_Type0027_ModGroupSort) GetItems() []*MessageType0210_Type0027_GroupSort {
	if x != nil {
		return x.Items
	}
	return nil
}

// ModLongNick
type MessageType0210_Type0027_ModLongNick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin   uint64 `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`    // "uint64_uin"
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // "bytes_value"
}

func (x *MessageType0210_Type0027_ModLongNick) Reset() {
	*x = MessageType0210_Type0027_ModLongNick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[267]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_ModLongNick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_ModLongNick) ProtoMessage() {}

func (x *MessageType0210_Type0027_ModLongNick) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[267]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_ModLongNick.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_ModLongNick) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 30}
}

func (x *MessageType0210_Type0027_ModLongNick) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MessageType0210_Type0027_ModLongNick) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// ModProfile
type MessageType0210_Type0027_ModProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin   uint64                                  `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`    // "uint64_uin"
	Items []*MessageType0210_Type0027_ProfileInfo `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"` // "rpt_msg_profile_infos"
}

func (x *MessageType0210_Type0027_ModProfile) Reset() {
	*x = MessageType0210_Type0027_ModProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[268]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_ModProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_ModProfile) ProtoMessage() {}

func (x *MessageType0210_Type0027_ModProfile) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[268]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_ModProfile.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_ModProfile) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 31}
}

func (x *MessageType0210_Type0027_ModProfile) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MessageType0210_Type0027_ModProfile) GetItems() []*MessageType0210_Type0027_ProfileInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

// ModSnsGeneralInfo
type MessageType0210_Type0027_ModSNSGeneralInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MessageType0210_Type0027_SNSUpateBuffer `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // "rpt_msg_sns_general_infos"
}

func (x *MessageType0210_Type0027_ModSNSGeneralInfo) Reset() {
	*x = MessageType0210_Type0027_ModSNSGeneralInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[269]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_ModSNSGeneralInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_ModSNSGeneralInfo) ProtoMessage() {}

func (x *MessageType0210_Type0027_ModSNSGeneralInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[269]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_ModSNSGeneralInfo.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_ModSNSGeneralInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 32}
}

func (x *MessageType0210_Type0027_ModSNSGeneralInfo) GetItems() []*MessageType0210_Type0027_SNSUpateBuffer {
	if x != nil {
		return x.Items
	}
	return nil
}

// NewComeinUser
type MessageType0210_Type0027_NewComeinUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin      uint64 `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`                           // "uint64_uin"
	IsFriend uint32 `protobuf:"varint,2,opt,name=is_friend,json=isFriend,proto3" json:"is_friend,omitempty"` // "uint32_is_frd"
	Remark   []byte `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`                      // "bytes_remark"
	Nick     []byte `protobuf:"bytes,4,opt,name=nick,proto3" json:"nick,omitempty"`                          // "bytes_nick"
}

func (x *MessageType0210_Type0027_NewComeinUser) Reset() {
	*x = MessageType0210_Type0027_NewComeinUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[270]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_NewComeinUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_NewComeinUser) ProtoMessage() {}

func (x *MessageType0210_Type0027_NewComeinUser) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[270]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_NewComeinUser.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_NewComeinUser) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 33}
}

func (x *MessageType0210_Type0027_NewComeinUser) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MessageType0210_Type0027_NewComeinUser) GetIsFriend() uint32 {
	if x != nil {
		return x.IsFriend
	}
	return 0
}

func (x *MessageType0210_Type0027_NewComeinUser) GetRemark() []byte {
	if x != nil {
		return x.Remark
	}
	return nil
}

func (x *MessageType0210_Type0027_NewComeinUser) GetNick() []byte {
	if x != nil {
		return x.Nick
	}
	return nil
}

// NewComeinUserNotify
type MessageType0210_Type0027_NewComeinUserNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          uint32                                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                                         // "uint32_msg_type"
	StrongNotify  bool                                    `protobuf:"varint,2,opt,name=strong_notify,json=strongNotify,proto3" json:"strong_notify,omitempty"`     // "bool_strong_notify"
	PushTime      uint32                                  `protobuf:"varint,3,opt,name=push_time,json=pushTime,proto3" json:"push_time,omitempty"`                 // "uint32_push_time"
	NewComeinUser *MessageType0210_Type0027_NewComeinUser `protobuf:"bytes,4,opt,name=new_comein_user,json=newComeinUser,proto3" json:"new_comein_user,omitempty"` // "msg_new_comein_user"
	NewGroup      *MessageType0210_Type0027_NewGroup      `protobuf:"bytes,5,opt,name=new_group,json=newGroup,proto3" json:"new_group,omitempty"`                  // "msg_new_group"
	NewGroupUser  *MessageType0210_Type0027_NewGroupUser  `protobuf:"bytes,6,opt,name=new_group_user,json=newGroupUser,proto3" json:"new_group_user,omitempty"`    // "msg_new_group_user"
}

func (x *MessageType0210_Type0027_NewComeinUserNotify) Reset() {
	*x = MessageType0210_Type0027_NewComeinUserNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[271]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_NewComeinUserNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_NewComeinUserNotify) ProtoMessage() {}

func (x *MessageType0210_Type0027_NewComeinUserNotify) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[271]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_NewComeinUserNotify.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_NewComeinUserNotify) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 34}
}

func (x *MessageType0210_Type0027_NewComeinUserNotify) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageType0210_Type0027_NewComeinUserNotify) GetStrongNotify() bool {
	if x != nil {
		return x.StrongNotify
	}
	return false
}

func (x *MessageType0210_Type0027_NewComeinUserNotify) GetPushTime() uint32 {
	if x != nil {
		return x.PushTime
	}
	return 0
}

func (x *MessageType0210_Type0027_NewComeinUserNotify) GetNewComeinUser() *MessageType0210_Type0027_NewComeinUser {
	if x != nil {
		return x.NewComeinUser
	}
	return nil
}

func (x *MessageType0210_Type0027_NewComeinUserNotify) GetNewGroup() *MessageType0210_Type0027_NewGroup {
	if x != nil {
		return x.NewGroup
	}
	return nil
}

func (x *MessageType0210_Type0027_NewComeinUserNotify) GetNewGroupUser() *MessageType0210_Type0027_NewGroupUser {
	if x != nil {
		return x.NewGroupUser
	}
	return nil
}

// NewGroup
type MessageType0210_Type0027_NewGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode uint64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"` // "uint64_group_code"
	GroupName []byte `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`  // "bytes_group_name"
	OwnerUin  uint64 `protobuf:"varint,3,opt,name=owner_uin,json=ownerUin,proto3" json:"owner_uin,omitempty"`    // "uint64_owner_uin"
	OwnerNick []byte `protobuf:"bytes,4,opt,name=owner_nick,json=ownerNick,proto3" json:"owner_nick,omitempty"`  // "bytes_owner_nick"
	Distance  []byte `protobuf:"bytes,5,opt,name=distance,proto3" json:"distance,omitempty"`                     // "bytes_distance"
}

func (x *MessageType0210_Type0027_NewGroup) Reset() {
	*x = MessageType0210_Type0027_NewGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[272]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_NewGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_NewGroup) ProtoMessage() {}

func (x *MessageType0210_Type0027_NewGroup) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[272]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_NewGroup.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_NewGroup) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 35}
}

func (x *MessageType0210_Type0027_NewGroup) GetGroupCode() uint64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *MessageType0210_Type0027_NewGroup) GetGroupName() []byte {
	if x != nil {
		return x.GroupName
	}
	return nil
}

func (x *MessageType0210_Type0027_NewGroup) GetOwnerUin() uint64 {
	if x != nil {
		return x.OwnerUin
	}
	return 0
}

func (x *MessageType0210_Type0027_NewGroup) GetOwnerNick() []byte {
	if x != nil {
		return x.OwnerNick
	}
	return nil
}

func (x *MessageType0210_Type0027_NewGroup) GetDistance() []byte {
	if x != nil {
		return x.Distance
	}
	return nil
}

// NewGroupUser
type MessageType0210_Type0027_NewGroupUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin      uint64 `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`          // "uint64_uin"
	Sex      int32  `protobuf:"varint,2,opt,name=sex,proto3" json:"sex,omitempty"`          // "int32_sex"
	Age      int32  `protobuf:"varint,3,opt,name=age,proto3" json:"age,omitempty"`          // "int32_age"
	Nick     string `protobuf:"bytes,4,opt,name=nick,proto3" json:"nick,omitempty"`         // "str_nick"
	Distance []byte `protobuf:"bytes,5,opt,name=distance,proto3" json:"distance,omitempty"` // "bytes_distance"
}

func (x *MessageType0210_Type0027_NewGroupUser) Reset() {
	*x = MessageType0210_Type0027_NewGroupUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[273]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_NewGroupUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_NewGroupUser) ProtoMessage() {}

func (x *MessageType0210_Type0027_NewGroupUser) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[273]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_NewGroupUser.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_NewGroupUser) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 36}
}

func (x *MessageType0210_Type0027_NewGroupUser) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MessageType0210_Type0027_NewGroupUser) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *MessageType0210_Type0027_NewGroupUser) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *MessageType0210_Type0027_NewGroupUser) GetNick() string {
	if x != nil {
		return x.Nick
	}
	return ""
}

func (x *MessageType0210_Type0027_NewGroupUser) GetDistance() []byte {
	if x != nil {
		return x.Distance
	}
	return nil
}

// OneRoamPriv
type MessageType0210_Type0027_OneRoamingPriv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin       uint64 `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`                              // "uint64_fuin"
	PrivTag   uint32 `protobuf:"varint,2,opt,name=priv_tag,json=privTag,proto3" json:"priv_tag,omitempty"`       // "uint32_priv_tag"
	PrivValue uint32 `protobuf:"varint,3,opt,name=priv_value,json=privValue,proto3" json:"priv_value,omitempty"` // "uint32_priv_value"
}

func (x *MessageType0210_Type0027_OneRoamingPriv) Reset() {
	*x = MessageType0210_Type0027_OneRoamingPriv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[274]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_OneRoamingPriv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_OneRoamingPriv) ProtoMessage() {}

func (x *MessageType0210_Type0027_OneRoamingPriv) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[274]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_OneRoamingPriv.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_OneRoamingPriv) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 37}
}

func (x *MessageType0210_Type0027_OneRoamingPriv) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MessageType0210_Type0027_OneRoamingPriv) GetPrivTag() uint32 {
	if x != nil {
		return x.PrivTag
	}
	return 0
}

func (x *MessageType0210_Type0027_OneRoamingPriv) GetPrivValue() uint32 {
	if x != nil {
		return x.PrivValue
	}
	return 0
}

// PraiseRankNotify
type MessageType0210_Type0027_PraiseRankNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsChampion uint32 `protobuf:"varint,11,opt,name=is_champion,json=isChampion,proto3" json:"is_champion,omitempty"` // "uint32_is_champion"
	RankNum    uint32 `protobuf:"varint,12,opt,name=rank_num,json=rankNum,proto3" json:"rank_num,omitempty"`          // "uint32_rank_num"
	Message    string `protobuf:"bytes,13,opt,name=message,proto3" json:"message,omitempty"`                          // "str_msg"
}

func (x *MessageType0210_Type0027_PraiseRankNotify) Reset() {
	*x = MessageType0210_Type0027_PraiseRankNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[275]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_PraiseRankNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_PraiseRankNotify) ProtoMessage() {}

func (x *MessageType0210_Type0027_PraiseRankNotify) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[275]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_PraiseRankNotify.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_PraiseRankNotify) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 38}
}

func (x *MessageType0210_Type0027_PraiseRankNotify) GetIsChampion() uint32 {
	if x != nil {
		return x.IsChampion
	}
	return 0
}

func (x *MessageType0210_Type0027_PraiseRankNotify) GetRankNum() uint32 {
	if x != nil {
		return x.RankNum
	}
	return 0
}

func (x *MessageType0210_Type0027_PraiseRankNotify) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ProfileInfo
type MessageType0210_Type0027_ProfileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field uint32 `protobuf:"varint,1,opt,name=field,proto3" json:"field,omitempty"` // "uint32_field"
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`  // "bytes_value"
}

func (x *MessageType0210_Type0027_ProfileInfo) Reset() {
	*x = MessageType0210_Type0027_ProfileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[276]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_ProfileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_ProfileInfo) ProtoMessage() {}

func (x *MessageType0210_Type0027_ProfileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[276]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_ProfileInfo.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_ProfileInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 39}
}

func (x *MessageType0210_Type0027_ProfileInfo) GetField() uint32 {
	if x != nil {
		return x.Field
	}
	return 0
}

func (x *MessageType0210_Type0027_ProfileInfo) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// PushReportDev
type MessageType0210_Type0027_PushReportDev struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                                       // "uint32_msg_type"
	Cookie       []byte `protobuf:"bytes,4,opt,name=cookie,proto3" json:"cookie,omitempty"`                                    // "bytes_cookie"
	ReportMaxNum uint32 `protobuf:"varint,5,opt,name=report_max_num,json=reportMaxNum,proto3" json:"report_max_num,omitempty"` // "uint32_report_max_num"
	Sn           []byte `protobuf:"bytes,6,opt,name=sn,proto3" json:"sn,omitempty"`                                            // "bytes_sn"
}

func (x *MessageType0210_Type0027_PushReportDev) Reset() {
	*x = MessageType0210_Type0027_PushReportDev{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[277]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_PushReportDev) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_PushReportDev) ProtoMessage() {}

func (x *MessageType0210_Type0027_PushReportDev) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[277]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_PushReportDev.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_PushReportDev) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 40}
}

func (x *MessageType0210_Type0027_PushReportDev) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageType0210_Type0027_PushReportDev) GetCookie() []byte {
	if x != nil {
		return x.Cookie
	}
	return nil
}

func (x *MessageType0210_Type0027_PushReportDev) GetReportMaxNum() uint32 {
	if x != nil {
		return x.ReportMaxNum
	}
	return 0
}

func (x *MessageType0210_Type0027_PushReportDev) GetSn() []byte {
	if x != nil {
		return x.Sn
	}
	return nil
}

// PushSearchDev
type MessageType0210_Type0027_PushSearchDev struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     uint32                        `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                         // "uint32_msg_type"
	GpsInfo  *MessageType0210_Type0027_GPS `protobuf:"bytes,2,opt,name=gps_info,json=gpsInfo,proto3" json:"gps_info,omitempty"`     // "msg_gps_info"
	DevTime  uint32                        `protobuf:"varint,3,opt,name=dev_time,json=devTime,proto3" json:"dev_time,omitempty"`    // "uint32_dev_time"
	PushTime uint32                        `protobuf:"varint,4,opt,name=push_time,json=pushTime,proto3" json:"push_time,omitempty"` // "uint32_push_time"
	Din      uint64                        `protobuf:"varint,5,opt,name=din,proto3" json:"din,omitempty"`                           // "uint64_din"
	Data     string                        `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`                          // "str_data"
}

func (x *MessageType0210_Type0027_PushSearchDev) Reset() {
	*x = MessageType0210_Type0027_PushSearchDev{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[278]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_PushSearchDev) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_PushSearchDev) ProtoMessage() {}

func (x *MessageType0210_Type0027_PushSearchDev) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[278]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_PushSearchDev.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_PushSearchDev) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 41}
}

func (x *MessageType0210_Type0027_PushSearchDev) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageType0210_Type0027_PushSearchDev) GetGpsInfo() *MessageType0210_Type0027_GPS {
	if x != nil {
		return x.GpsInfo
	}
	return nil
}

func (x *MessageType0210_Type0027_PushSearchDev) GetDevTime() uint32 {
	if x != nil {
		return x.DevTime
	}
	return 0
}

func (x *MessageType0210_Type0027_PushSearchDev) GetPushTime() uint32 {
	if x != nil {
		return x.PushTime
	}
	return 0
}

func (x *MessageType0210_Type0027_PushSearchDev) GetDin() uint64 {
	if x != nil {
		return x.Din
	}
	return 0
}

func (x *MessageType0210_Type0027_PushSearchDev) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// QQPayPush
type MessageType0210_Type0027_QQPayPush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin   uint64 `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`                  // "uint64_uin"
	PayOk bool   `protobuf:"varint,2,opt,name=pay_ok,json=payOk,proto3" json:"pay_ok,omitempty"` // "bool_pay_ok"
}

func (x *MessageType0210_Type0027_QQPayPush) Reset() {
	*x = MessageType0210_Type0027_QQPayPush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[279]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_QQPayPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_QQPayPush) ProtoMessage() {}

func (x *MessageType0210_Type0027_QQPayPush) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[279]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_QQPayPush.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_QQPayPush) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 42}
}

func (x *MessageType0210_Type0027_QQPayPush) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MessageType0210_Type0027_QQPayPush) GetPayOk() bool {
	if x != nil {
		return x.PayOk
	}
	return false
}

// SnsUpateBuffer
type MessageType0210_Type0027_SNSUpateBuffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin    uint64                                    `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`                              // "uint64_uin"
	Code   uint64                                    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`                            // "uint64_code"
	Result uint32                                    `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`                        // "uint32_result"
	Items  []*MessageType0210_Type0027_SNSUpdateItem `protobuf:"bytes,400,rep,name=items,proto3" json:"items,omitempty"`                         // "rpt_msg_sns_update_item"
	IdList []uint32                                  `protobuf:"varint,401,rep,packed,name=id_list,json=idList,proto3" json:"id_list,omitempty"` // "rpt_uint32_idlist"
}

func (x *MessageType0210_Type0027_SNSUpateBuffer) Reset() {
	*x = MessageType0210_Type0027_SNSUpateBuffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[280]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_SNSUpateBuffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_SNSUpateBuffer) ProtoMessage() {}

func (x *MessageType0210_Type0027_SNSUpateBuffer) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[280]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_SNSUpateBuffer.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_SNSUpateBuffer) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 43}
}

func (x *MessageType0210_Type0027_SNSUpateBuffer) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MessageType0210_Type0027_SNSUpateBuffer) GetCode() uint64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MessageType0210_Type0027_SNSUpateBuffer) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MessageType0210_Type0027_SNSUpateBuffer) GetItems() []*MessageType0210_Type0027_SNSUpdateItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *MessageType0210_Type0027_SNSUpateBuffer) GetIdList() []uint32 {
	if x != nil {
		return x.IdList
	}
	return nil
}

// SnsUpdateFlag
type MessageType0210_Type0027_SNSUpdateFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MessageType0210_Type0027_SNSUpdateOneFlag `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"` // "rpt_msg_update_sns_flag"
}

func (x *MessageType0210_Type0027_SNSUpdateFlag) Reset() {
	*x = MessageType0210_Type0027_SNSUpdateFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[281]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_SNSUpdateFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_SNSUpdateFlag) ProtoMessage() {}

func (x *MessageType0210_Type0027_SNSUpdateFlag) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[281]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_SNSUpdateFlag.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_SNSUpdateFlag) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 44}
}

func (x *MessageType0210_Type0027_SNSUpdateFlag) GetItems() []*MessageType0210_Type0027_SNSUpdateOneFlag {
	if x != nil {
		return x.Items
	}
	return nil
}

// SnsUpdateItem
type MessageType0210_Type0027_SNSUpdateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`  // "uint32_update_sns_type"
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // "bytes_value"
}

func (x *MessageType0210_Type0027_SNSUpdateItem) Reset() {
	*x = MessageType0210_Type0027_SNSUpdateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[282]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_SNSUpdateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_SNSUpdateItem) ProtoMessage() {}

func (x *MessageType0210_Type0027_SNSUpdateItem) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[282]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_SNSUpdateItem.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_SNSUpdateItem) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 45}
}

func (x *MessageType0210_Type0027_SNSUpdateItem) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageType0210_Type0027_SNSUpdateItem) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// SnsUpdateOneFlag
type MessageType0210_Type0027_SNSUpdateOneFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin  uint64 `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`   // "uint64__uin"
	Id   uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`     // "uint64_id"
	Flag uint32 `protobuf:"varint,3,opt,name=flag,proto3" json:"flag,omitempty"` // "uint32_flag"
}

func (x *MessageType0210_Type0027_SNSUpdateOneFlag) Reset() {
	*x = MessageType0210_Type0027_SNSUpdateOneFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[283]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type0027_SNSUpdateOneFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type0027_SNSUpdateOneFlag) ProtoMessage() {}

func (x *MessageType0210_Type0027_SNSUpdateOneFlag) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[283]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type0027_SNSUpdateOneFlag.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type0027_SNSUpdateOneFlag) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 1, 46}
}

func (x *MessageType0210_Type0027_SNSUpdateOneFlag) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MessageType0210_Type0027_SNSUpdateOneFlag) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MessageType0210_Type0027_SNSUpdateOneFlag) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

// ReqBody
type MessageType0210_Type008A_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*MessageType0210_Type008A_MessageInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`                              // "msg_info"
	AppId      uint32                                  `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`                // "uint32_app_id"
	InstanceId uint32                                  `protobuf:"varint,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"` // "uint32_inst_id"
	LongFlag   uint32                                  `protobuf:"varint,4,opt,name=long_flag,json=longFlag,proto3" json:"long_flag,omitempty"`       // "uint32_long_message_flag"
	Reserved   []byte                                  `protobuf:"bytes,5,opt,name=reserved,proto3" json:"reserved,omitempty"`                        // "bytes_reserved"
}

func (x *MessageType0210_Type008A_Body) Reset() {
	*x = MessageType0210_Type008A_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[284]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type008A_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type008A_Body) ProtoMessage() {}

func (x *MessageType0210_Type008A_Body) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[284]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type008A_Body.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type008A_Body) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 2, 0}
}

func (x *MessageType0210_Type008A_Body) GetItems() []*MessageType0210_Type008A_MessageInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *MessageType0210_Type008A_Body) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *MessageType0210_Type008A_Body) GetInstanceId() uint32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *MessageType0210_Type008A_Body) GetLongFlag() uint32 {
	if x != nil {
		return x.LongFlag
	}
	return 0
}

func (x *MessageType0210_Type008A_Body) GetReserved() []byte {
	if x != nil {
		return x.Reserved
	}
	return nil
}

// MsgInfo
type MessageType0210_Type008A_MessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUin       int64                               `protobuf:"varint,1,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`                   // "uint64_from_uin"
	ToUin         int64                               `protobuf:"varint,2,opt,name=to_uin,json=toUin,proto3" json:"to_uin,omitempty"`                         // "uint64_to_uin"
	MessageSeq    int32                               `protobuf:"varint,3,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`          // "uint32_msg_seq"
	MessageUid    int64                               `protobuf:"varint,4,opt,name=message_uid,json=messageUid,proto3" json:"message_uid,omitempty"`          // "uint64_msg_uid"
	MessageTime   int64                               `protobuf:"varint,5,opt,name=message_time,json=messageTime,proto3" json:"message_time,omitempty"`       // "uint64_msg_time"
	MessageRandom int32                               `protobuf:"varint,6,opt,name=message_random,json=messageRandom,proto3" json:"message_random,omitempty"` // "uint32_msg_random"
	PackageNum    uint32                              `protobuf:"varint,7,opt,name=package_num,json=packageNum,proto3" json:"package_num,omitempty"`          // "uint32_pkg_num"
	PackageIndex  uint32                              `protobuf:"varint,8,opt,name=package_index,json=packageIndex,proto3" json:"package_index,omitempty"`    // "uint32_pkg_index"
	DivSeq        uint32                              `protobuf:"varint,9,opt,name=div_seq,json=divSeq,proto3" json:"div_seq,omitempty"`                      // "uint32_div_seq"
	Flag          uint32                              `protobuf:"varint,12,opt,name=flag,proto3" json:"flag,omitempty"`                                       // "uint32_flag"
	Wording       *MessageService_WithdrawWordingInfo `protobuf:"bytes,13,opt,name=wording,proto3" json:"wording,omitempty"`                                  // "msg_wording_info"
}

func (x *MessageType0210_Type008A_MessageInfo) Reset() {
	*x = MessageType0210_Type008A_MessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[285]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type008A_MessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type008A_MessageInfo) ProtoMessage() {}

func (x *MessageType0210_Type008A_MessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[285]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type008A_MessageInfo.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type008A_MessageInfo) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 2, 1}
}

func (x *MessageType0210_Type008A_MessageInfo) GetFromUin() int64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *MessageType0210_Type008A_MessageInfo) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *MessageType0210_Type008A_MessageInfo) GetMessageSeq() int32 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

func (x *MessageType0210_Type008A_MessageInfo) GetMessageUid() int64 {
	if x != nil {
		return x.MessageUid
	}
	return 0
}

func (x *MessageType0210_Type008A_MessageInfo) GetMessageTime() int64 {
	if x != nil {
		return x.MessageTime
	}
	return 0
}

func (x *MessageType0210_Type008A_MessageInfo) GetMessageRandom() int32 {
	if x != nil {
		return x.MessageRandom
	}
	return 0
}

func (x *MessageType0210_Type008A_MessageInfo) GetPackageNum() uint32 {
	if x != nil {
		return x.PackageNum
	}
	return 0
}

func (x *MessageType0210_Type008A_MessageInfo) GetPackageIndex() uint32 {
	if x != nil {
		return x.PackageIndex
	}
	return 0
}

func (x *MessageType0210_Type008A_MessageInfo) GetDivSeq() uint32 {
	if x != nil {
		return x.DivSeq
	}
	return 0
}

func (x *MessageType0210_Type008A_MessageInfo) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *MessageType0210_Type008A_MessageInfo) GetWording() *MessageService_WithdrawWordingInfo {
	if x != nil {
		return x.Wording
	}
	return nil
}

// MsgBody
type MessageType0210_Type00B3_Body struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   uint32                                    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`    // "uint32_type"
	Notify *MessageType0210_Type00B3_AddFriendNotify `protobuf:"bytes,2,opt,name=notify,proto3" json:"notify,omitempty"` // "msg_add_frd_notify"
}

func (x *MessageType0210_Type00B3_Body) Reset() {
	*x = MessageType0210_Type00B3_Body{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[286]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type00B3_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type00B3_Body) ProtoMessage() {}

func (x *MessageType0210_Type00B3_Body) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[286]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type00B3_Body.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type00B3_Body) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 3, 0}
}

func (x *MessageType0210_Type00B3_Body) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MessageType0210_Type00B3_Body) GetNotify() *MessageType0210_Type00B3_AddFriendNotify {
	if x != nil {
		return x.Notify
	}
	return nil
}

// PushAddFrdNotify
type MessageType0210_Type00B3_AddFriendNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendUin      uint64 `protobuf:"varint,1,opt,name=friend_uin,json=friendUin,proto3" json:"friend_uin,omitempty"`                  // "uint64_fuin"
	FriendBubbleId uint64 `protobuf:"varint,2,opt,name=friend_bubble_id,json=friendBubbleId,proto3" json:"friend_bubble_id,omitempty"` // "uint64_fuin_bubble_id"
	Timestamp      uint32 `protobuf:"fixed32,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                  // "fixed32_timestamp"
	Wording        string `protobuf:"bytes,4,opt,name=wording,proto3" json:"wording,omitempty"`                                        // "bytes_wording"
	FriendNick     string `protobuf:"bytes,5,opt,name=friend_nick,json=friendNick,proto3" json:"friend_nick,omitempty"`                // "bytes_fuin_nick"
	SourceId       uint32 `protobuf:"varint,6,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`                     // "uint32_source_id"
	SubSourceId    uint32 `protobuf:"varint,7,opt,name=sub_source_id,json=subSourceId,proto3" json:"sub_source_id,omitempty"`          // "uint32_subsource_id"
	Mobile         string `protobuf:"bytes,8,opt,name=mobile,proto3" json:"mobile,omitempty"`                                          // "bytes_mobile"
	RequestUin     uint64 `protobuf:"varint,9,opt,name=request_uin,json=requestUin,proto3" json:"request_uin,omitempty"`               // "uint64_req_uin"
}

func (x *MessageType0210_Type00B3_AddFriendNotify) Reset() {
	*x = MessageType0210_Type00B3_AddFriendNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[287]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType0210_Type00B3_AddFriendNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType0210_Type00B3_AddFriendNotify) ProtoMessage() {}

func (x *MessageType0210_Type00B3_AddFriendNotify) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[287]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType0210_Type00B3_AddFriendNotify.ProtoReflect.Descriptor instead.
func (*MessageType0210_Type00B3_AddFriendNotify) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8, 3, 1}
}

func (x *MessageType0210_Type00B3_AddFriendNotify) GetFriendUin() uint64 {
	if x != nil {
		return x.FriendUin
	}
	return 0
}

func (x *MessageType0210_Type00B3_AddFriendNotify) GetFriendBubbleId() uint64 {
	if x != nil {
		return x.FriendBubbleId
	}
	return 0
}

func (x *MessageType0210_Type00B3_AddFriendNotify) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MessageType0210_Type00B3_AddFriendNotify) GetWording() string {
	if x != nil {
		return x.Wording
	}
	return ""
}

func (x *MessageType0210_Type00B3_AddFriendNotify) GetFriendNick() string {
	if x != nil {
		return x.FriendNick
	}
	return ""
}

func (x *MessageType0210_Type00B3_AddFriendNotify) GetSourceId() uint32 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *MessageType0210_Type00B3_AddFriendNotify) GetSubSourceId() uint32 {
	if x != nil {
		return x.SubSourceId
	}
	return 0
}

func (x *MessageType0210_Type00B3_AddFriendNotify) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *MessageType0210_Type00B3_AddFriendNotify) GetRequestUin() uint64 {
	if x != nil {
		return x.RequestUin
	}
	return 0
}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x81, 0x34, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x1a, 0xec, 0x02, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x31, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x70, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x45, 0x78, 0x74,
	0x1a, 0x96, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x31, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x72, 0x65, 0x73, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x4d,
	0x44, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x65, 0x73, 0x4d, 0x44, 0x35,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x49, 0x6e, 0x66, 0x6f,
	0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x31, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x6f,
	0x6f, 0x64, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x64, 0x6f, 0x6f, 0x64, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x6f, 0x6f, 0x64, 0x6c,
	0x65, 0x5f, 0x67, 0x69, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x64, 0x6f, 0x6f, 0x64, 0x6c, 0x65, 0x47, 0x69, 0x66, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x44,
	0x6f, 0x6f, 0x64, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x44, 0x6f, 0x6f, 0x64, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x44, 0x6f,
	0x6f, 0x64, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x44, 0x6f, 0x6f, 0x64, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x1a, 0x4c, 0x0a, 0x0d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x31, 0x33, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x79,
	0x73, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x73, 0x79, 0x73, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65,
	0x61, 0x64, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68,
	0x65, 0x61, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x1a, 0x42, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x31, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xe9, 0x01, 0x0a, 0x0d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x31, 0x35, 0x12, 0x10, 0x0a,
	0x03, 0x76, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x74, 0x72, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x74, 0x72,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0xfc, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x31, 0x36, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x75, 0x6e,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x64,
	0x35, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x6f, 0x6f, 0x64, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x64, 0x6f, 0x6f, 0x64, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x74, 0x72, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x74, 0x72, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0xa4, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x31, 0x38, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x75,
	0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x23, 0x0a,
	0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x31, 0x39, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0xe7, 0x02, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x32, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6b, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6f, 0x6b, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x6b, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x6f, 0x6b, 0x65, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x68, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x48,
	0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x73, 0x70, 0x6f, 0x6b, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x61, 0x73, 0x70, 0x6f, 0x6b, 0x65, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x61, 0x73, 0x70, 0x6f, 0x6b, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x76, 0x61, 0x73, 0x70, 0x6f, 0x6b, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x61, 0x73, 0x70, 0x6f, 0x6b, 0x65, 0x5f,
	0x6d, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x76, 0x61,
	0x73, 0x70, 0x6f, 0x6b, 0x65, 0x4d, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x6f, 0x6b, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x70, 0x6f, 0x6b, 0x65, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x62, 0x75, 0x62, 0x62,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x66, 0x61, 0x63, 0x65, 0x42, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x6b, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x6f, 0x6b, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x1a, 0x23, 0x0a, 0x0d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x32, 0x30, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x8e, 0x0e, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x32, 0x31, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x55, 0x69, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x66, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x65, 0x78, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x6d, 0x73, 0x67, 0x46, 0x6c, 0x61, 0x67,
	0x12, 0x56, 0x0a, 0x0f, 0x63, 0x32, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x5f,
	0x63, 0x74, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x32, 0x31, 0x2e, 0x43, 0x32, 0x43, 0x43, 0x6f, 0x6e, 0x66, 0x65,
	0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0d, 0x63, 0x32, 0x63, 0x43, 0x6f,
	0x6e, 0x66, 0x65, 0x73, 0x73, 0x43, 0x74, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x64, 0x0a, 0x15, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x73, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x32, 0x31, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x74, 0x78, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x32, 0x31,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65,
	0x73, 0x73, 0x43, 0x74, 0x78, 0x1a, 0x98, 0x03, 0x0a, 0x11, 0x43, 0x32, 0x43, 0x43, 0x6f, 0x6e,
	0x66, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x55, 0x69, 0x6e,
	0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x75,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x75,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x55, 0x69,
	0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x6e,
	0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x73, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x66, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x65, 0x78, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x66, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x66, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x78, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x53, 0x65, 0x78,
	0x1a, 0xf4, 0x02, 0x0a, 0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66,
	0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x24, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x55, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x53, 0x65, 0x78, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x6f, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x66, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x2f, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x6e, 0x69,
	0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63,
	0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x4e, 0x69, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x6e, 0x69,
	0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x1a, 0xc2, 0x01, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x26, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x6e, 0x69, 0x63, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x2f, 0x0a, 0x14, 0x63,
	0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x4e, 0x69, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x1a, 0xa3, 0x02, 0x0a,
	0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66,
	0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x53, 0x65,
	0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x6d, 0x73, 0x67, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x52, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x32, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x65, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x73,
	0x73, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x1a, 0xf5, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x32, 0x33, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x66, 0x61,
	0x63, 0x65, 0x42, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x66, 0x61, 0x63, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x66, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x12, 0x4c, 0x0a, 0x13,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x66,
	0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x33, 0x33, 0x52, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x46, 0x61, 0x63, 0x65, 0x1a, 0x90, 0x04, 0x0a, 0x0d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x32, 0x34, 0x12, 0x55, 0x0a, 0x10,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x32, 0x34, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x74, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x52, 0x0e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x74, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x0f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x32, 0x34, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x45, 0x78, 0x69, 0x74, 0x52, 0x0d, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x45, 0x78, 0x69, 0x74, 0x1a, 0x86, 0x02, 0x0a, 0x0e, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69,
	0x70, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x74, 0x69, 0x70, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a,
	0x0e, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x65, 0x66, 0x74, 0x43, 0x68, 0x61, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x73, 0x12, 0x2c,
	0x0a, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x63, 0x32, 0x63, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x32, 0x63, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f,
	0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64, 0x79, 0x54,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x69, 0x63, 0x6b,
	0x1a, 0x4b, 0x0a, 0x0d, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x74, 0x45, 0x78, 0x69,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x78, 0x69, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x73, 0x1a, 0x48, 0x0a,
	0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x32, 0x37, 0x12, 0x37,
	0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x09, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x3a, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x32, 0x39, 0x12, 0x29, 0x0a, 0x10, 0x6c, 0x75, 0x63, 0x6b,
	0x79, 0x62, 0x61, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0f, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x62, 0x61, 0x67, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x94, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x33, 0x12, 0x41, 0x0a, 0x0f, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x72,
	0x6f, 0x6f, 0x70, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x46, 0x61, 0x63, 0x65, 0x52, 0x0d, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x54,
	0x72, 0x6f, 0x6f, 0x70, 0x50, 0x69, 0x63, 0x12, 0x41, 0x0a, 0x0d, 0x66, 0x6c, 0x61, 0x73, 0x68,
	0x5f, 0x63, 0x32, 0x63, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x4e,
	0x6f, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x66,
	0x6c, 0x61, 0x73, 0x68, 0x43, 0x32, 0x63, 0x50, 0x69, 0x63, 0x1a, 0x39, 0x0a, 0x0d, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x33, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x69, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x33, 0x33, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x1a, 0xac, 0x03, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x33, 0x34, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x4e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x70, 0x75, 0x73, 0x68, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x4b, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x33, 0x34, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x65, 0x78, 0x74,
	0x1a, 0xec, 0x01, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x6f, 0x52, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x6f, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x69, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6e, 0x79, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x74, 0x69, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x6f, 0x54, 0x69, 0x6e, 0x79, 0x49, 0x64, 0x1a,
	0x8a, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x33,
	0x35, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x5f, 0x70, 0x61, 0x64, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x61, 0x64, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x65,
	0x74, 0x5f, 0x72, 0x65, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x76, 0x12, 0x27, 0x0a, 0x10, 0x68, 0x69, 0x73, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f,
	0x75, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x68,
	0x69, 0x73, 0x45, 0x64, 0x69, 0x74, 0x55, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x1a, 0x99, 0x02, 0x0a,
	0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x33, 0x37, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05,
	0x71, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x71, 0x53, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x75, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x75, 0x72,
	0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x1a, 0xd9, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x34, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x73,
	0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x66, 0x0a, 0x18, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x61, 0x69, 0x6f, 0x5f, 0x6f, 0x62, 0x6a, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x34, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x69, 0x6f, 0x4f, 0x62,
	0x6a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x14, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x41, 0x69, 0x6f, 0x4f, 0x62, 0x6a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x44,
	0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x69, 0x6f, 0x4f, 0x62, 0x6a, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x6a,
	0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x6d,
	0x70, 0x55, 0x72, 0x6c, 0x1a, 0xc7, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x35, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x76, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x1a, 0x6c,
	0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x38, 0x12, 0x5c,
	0x0a, 0x19, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x67,
	0x69, 0x66, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x16, 0x77, 0x69, 0x66, 0x69, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x47, 0x69, 0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0xc4, 0x01, 0x0a,
	0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x39, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6a, 0x75, 0x6d, 0x70, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6e,
	0x63, 0x68, 0x6f, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x48, 0x65, 0x61,
	0x64, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0xb2, 0xa2, 0x01, 0x0a, 0x0d, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x1a, 0xf9, 0x01, 0x0a, 0x15, 0x41, 0x6e, 0x6f, 0x6e, 0x79,
	0x6d, 0x6f, 0x75, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x6f, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x6e,
	0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6e, 0x6f,
	0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x4e, 0x69, 0x63, 0x6b,
	0x12, 0x23, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x72,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x62, 0x62, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x1a, 0xa5, 0x03, 0x0a, 0x13, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x70, 0x65, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x54, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x74, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x54, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x65, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x79, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x69, 0x79, 0x74, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x79, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x64, 0x69,
	0x79, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x62, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x1a, 0x82, 0x01, 0x0a, 0x0d, 0x41,
	0x72, 0x6b, 0x41, 0x70, 0x70, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69,
	0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x78, 0x6d, 0x6c, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x78, 0x6d, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x9b, 0x02, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x72,
	0x5f, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x72,
	0x53, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x61, 0x6e, 0x64,
	0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70,
	0x69, 0x74, 0x63, 0x68, 0x41, 0x6e, 0x64, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x6f, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x21, 0x0a,
	0x0d, 0x42, 0x69, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x62, 0x75, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x62, 0x75, 0x66,
	0x1a, 0x4d, 0x0a, 0x0f, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x78, 0x5f, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x78, 0x46, 0x6c, 0x61, 0x67, 0x1a,
	0x6f, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x1a, 0x6c, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x69,
	0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0xa7,
	0x01, 0x0a, 0x0a, 0x43, 0x72, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x72, 0x6d, 0x5f, 0x62, 0x75, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x63, 0x72, 0x6d, 0x42, 0x75, 0x66, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x71,
	0x69, 0x64, 0x69, 0x61, 0x6e, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x71, 0x69, 0x64, 0x69, 0x61, 0x6e, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x75, 0x73, 0x68, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x75, 0x73, 0x68, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x1a, 0x80, 0x01, 0x0a, 0x0d, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x1a, 0xbd, 0x07, 0x0a, 0x0a,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66,
	0x6c, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x66, 0x75, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x66, 0x75, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6d, 0x64, 0x35, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65,
	0x4d, 0x64, 0x35, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x72, 0x6c,
	0x12, 0x17, 0x0a, 0x07, 0x62, 0x69, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x69, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x69,
	0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x69,
	0x67, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x6f,
	0x77, 0x4c, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x72, 0x6c, 0x5f, 0x34,
	0x30, 0x30, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x72, 0x6c, 0x34, 0x30, 0x30,
	0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x34, 0x30, 0x30, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x77, 0x69, 0x64, 0x74, 0x68, 0x34, 0x30, 0x30, 0x12, 0x1d, 0x0a,
	0x0a, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x34, 0x30, 0x30, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x34, 0x30, 0x30, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x1a, 0x92, 0x07, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x67, 0x72,
	0x61, 0x79, 0x54, 0x69, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14,
	0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x61, 0x6e, 0x69, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x35,
	0x0a, 0x17, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x14, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x41, 0x12, 0x35, 0x0a, 0x17, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x69,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x49, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x42, 0x72, 0x69, 0x65, 0x66, 0x12,
	0x17, 0x0a, 0x07, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x67, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x69,
	0x66, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6e, 0x69, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0e, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x72, 0x69, 0x65, 0x66,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55,
	0x69, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x73, 0x74, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73,
	0x74, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x73, 0x74, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x74,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x74, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x74, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x70, 0x69, 0x63, 0x69, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x74, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47,
	0x69, 0x66, 0x74, 0x70, 0x69, 0x63, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x74, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x65, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x73, 0x74, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6d, 0x65, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x74, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x73, 0x74, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x78, 0x66, 0x6c,
	0x61, 0x67, 0x12, 0x23, 0x0a, 0x0e, 0x74, 0x6f, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x67, 0x69, 0x66,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x74, 0x6f, 0x41, 0x6c,
	0x6c, 0x47, 0x69, 0x66, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x65, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x63, 0x6f, 0x6d, 0x65, 0x66, 0x72, 0x6f, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x69, 0x63,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x50, 0x69, 0x63, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x74, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x67, 0x69, 0x66, 0x74, 0x75, 0x72, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10,
	0x73, 0x74, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x69, 0x66, 0x74, 0x75, 0x72, 0x6c,
	0x1a, 0x36, 0x0a, 0x07, 0x45, 0x49, 0x4d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x1a, 0x9c, 0x24, 0x0a, 0x07, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x2c, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x2e, 0x46, 0x61, 0x63, 0x65, 0x48, 0x01, 0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x42, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x48, 0x02, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x4e,
	0x6f, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x03, 0x52,
	0x0e, 0x6e, 0x6f, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x42, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x04, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x5f, 0x66, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x49, 0x4d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x46, 0x61, 0x63, 0x65, 0x48, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x46, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0d, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x48, 0x06, 0x52, 0x0c, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3f,
	0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x61, 0x63, 0x65, 0x48, 0x07,
	0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x61, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x48, 0x0a, 0x0e, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x46,
	0x6c, 0x61, 0x67, 0x73, 0x32, 0x48, 0x08, 0x52, 0x0d, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x46, 0x6c, 0x61, 0x67, 0x73, 0x32, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x08, 0x66, 0x75, 0x6e,
	0x5f, 0x66, 0x61, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x49, 0x4d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x46, 0x75, 0x6e, 0x46,
	0x61, 0x63, 0x65, 0x48, 0x09, 0x52, 0x07, 0x66, 0x75, 0x6e, 0x46, 0x61, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x46, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x0a, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0c, 0x72, 0x69, 0x63,
	0x68, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e,
	0x52, 0x69, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x0b, 0x52, 0x0b, 0x72,
	0x69, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x0c, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0c, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x0d, 0x52,
	0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x12,
	0x4e, 0x0a, 0x10, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x49, 0x4d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x0e, 0x52, 0x0f, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x3c, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x0f, 0x52,
	0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a,
	0x0c, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x2e, 0x53, 0x68, 0x61, 0x6b, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x48,
	0x10, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x88, 0x01,
	0x01, 0x12, 0x48, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x49, 0x4d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x11, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0a, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x12, 0x52, 0x09, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x09, 0x74, 0x69, 0x70,
	0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x49,
	0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x54, 0x69, 0x70,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x13, 0x52, 0x08, 0x74, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x61, 0x0a, 0x17, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75,
	0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x14, 0x52, 0x15, 0x61,
	0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x0b, 0x71, 0x71, 0x5f, 0x6c, 0x69,
	0x76, 0x65, 0x5f, 0x6f, 0x6c, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x49,
	0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x51, 0x51, 0x4c,
	0x69, 0x76, 0x65, 0x4f, 0x6c, 0x64, 0x48, 0x15, 0x52, 0x09, 0x71, 0x71, 0x4c, 0x69, 0x76, 0x65,
	0x4f, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0b, 0x6c, 0x69, 0x66, 0x65, 0x5f, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x49, 0x4d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x4c, 0x69, 0x66, 0x65,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x16, 0x52,
	0x0a, 0x6c, 0x69, 0x66, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4e,
	0x0a, 0x10, 0x71, 0x71, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x51, 0x51, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x17, 0x52, 0x0f, 0x71, 0x71, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30,
	0x0a, 0x03, 0x63, 0x72, 0x6d, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x49, 0x4d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x43, 0x72, 0x6d, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x18, 0x52, 0x03, 0x63, 0x72, 0x6d, 0x88, 0x01, 0x01,
	0x12, 0x58, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x74,
	0x69, 0x70, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x19, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54,
	0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x0b, 0x72, 0x65,
	0x64, 0x62, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e,
	0x52, 0x65, 0x64, 0x42, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x1a, 0x52, 0x0a, 0x72, 0x65,
	0x64, 0x62, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x10, 0x6c,
	0x6f, 0x77, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x4c, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x70, 0x73, 0x48, 0x1b, 0x52, 0x0e, 0x6c, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x70, 0x73, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x62, 0x61, 0x6e,
	0x6b, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x74, 0x72, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x1c, 0x52, 0x10, 0x62, 0x61, 0x6e, 0x6b, 0x63, 0x6f, 0x64,
	0x65, 0x43, 0x74, 0x72, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x0f,
	0x6e, 0x65, 0x61, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x4e, 0x65, 0x61, 0x72, 0x42, 0x79, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x1d, 0x52, 0x0d, 0x6e, 0x65, 0x61, 0x72, 0x42,
	0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x06, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x49, 0x4d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x1e, 0x52, 0x06, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x1f, 0x52, 0x0c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x55, 0x0a,
	0x13, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x49, 0x4d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x20, 0x52, 0x11,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x0b, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x49, 0x4d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x45,
	0x6d, 0x6f, 0x6a, 0x69, 0x48, 0x21, 0x52, 0x0a, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0b, 0x66, 0x73, 0x6a, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x49, 0x4d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x46, 0x53, 0x4a, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x22, 0x52, 0x0a,
	0x66, 0x73, 0x6a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a,
	0x07, 0x61, 0x72, 0x6b, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x41,
	0x72, 0x6b, 0x41, 0x70, 0x70, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x23, 0x52, 0x06,
	0x61, 0x72, 0x6b, 0x41, 0x70, 0x70, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0d, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x48, 0x24, 0x52,
	0x0c, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x40, 0x0a, 0x0c, 0x68, 0x63, 0x5f, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x69, 0x63,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x61, 0x63,
	0x65, 0x48, 0x25, 0x52, 0x0a, 0x68, 0x63, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x50, 0x69, 0x63, 0x88,
	0x01, 0x01, 0x12, 0x58, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x69,
	0x66, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x26, 0x52, 0x12, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x47, 0x69,
	0x66, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x0e,
	0x62, 0x69, 0x74, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x2e, 0x42, 0x69, 0x74, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x27, 0x52, 0x0d, 0x62, 0x69, 0x74, 0x61, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x71,
	0x71, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x49,
	0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x51, 0x51, 0x44, 0x61, 0x74, 0x61, 0x48, 0x28, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x51,
	0x71, 0x44, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x4e, 0x0a, 0x0e, 0x61, 0x70, 0x6f, 0x6c,
	0x6c, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x2e, 0x41, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x29, 0x52, 0x0d, 0x61, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x57, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x61, 0x63, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x2b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x2a, 0x52, 0x0f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x50, 0x75, 0x62, 0x41, 0x63, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x4e, 0x0a, 0x10, 0x62, 0x6c, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x49, 0x4d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x42, 0x6c, 0x65, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x2b, 0x52, 0x0f, 0x62,
	0x6c, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x48, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x49, 0x4d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x2c, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0c, 0x6c,
	0x6f, 0x6c, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x2e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x2e, 0x4c, 0x6f, 0x6c, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x2d, 0x52,
	0x0b, 0x6c, 0x6f, 0x6c, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x5e, 0x0a, 0x16, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x2e, 0x52, 0x14, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x61, 0x0a, 0x17, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x2f, 0x52, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x31, 0x0a, 0x03, 0x70, 0x61, 0x74, 0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e,
	0x50, 0x61, 0x74, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x30, 0x52, 0x03, 0x70,
	0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x49, 0x4d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50,
	0x6f, 0x73, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x31, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x09, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x41, 0x70, 0x70, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x32, 0x52,
	0x08, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x70, 0x70, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x08,
	0x65, 0x69, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x45,
	0x49, 0x4d, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x33, 0x52, 0x07, 0x65, 0x69, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x35,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x48, 0x34, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x66, 0x61, 0x63,
	0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x5f, 0x66, 0x61, 0x63, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x32, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66,
	0x75, 0x6e, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x72, 0x69, 0x63, 0x68,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x1a, 0x0a,
	0x18, 0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x71, 0x71,
	0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x6f, 0x6c, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6c, 0x69,
	0x66, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x71, 0x71,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x63, 0x72, 0x6d, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x64, 0x62, 0x61, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42,
	0x13, 0x0a, 0x11, 0x5f, 0x6c, 0x6f, 0x77, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x70, 0x73, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x63, 0x74, 0x72, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x6e, 0x65, 0x61, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x16, 0x0a, 0x14,
	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x65,
	0x6d, 0x6f, 0x6a, 0x69, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x73, 0x6a, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x72, 0x6b, 0x5f, 0x61, 0x70, 0x70,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x68, 0x63, 0x5f, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x5f,
	0x70, 0x69, 0x63, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x67, 0x69, 0x66, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x62, 0x69, 0x74, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x71, 0x71, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x61, 0x70, 0x6f, 0x6c, 0x6c, 0x6f, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70, 0x75,
	0x62, 0x5f, 0x61, 0x63, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x62,
	0x6c, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6c, 0x6f, 0x6c, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x1a,
	0x0a, 0x18, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70,
	0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70, 0x6f, 0x73,
	0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x69, 0x6d, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x49, 0x0a, 0x0c, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x1a, 0x9b, 0x05, 0x0a, 0x0d, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6c,
	0x61, 0x67, 0x73, 0x32, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x68, 0x69, 0x73, 0x70,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x74, 0x74, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x62, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70,
	0x74, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76,
	0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x76, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x32, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x70, 0x74, 0x5f, 0x63, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x70,
	0x74, 0x43, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6c,
	0x61, 0x67, 0x73, 0x32, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x73,
	0x72, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x6e, 0x67, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x6f, 0x6e, 0x67,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x6f, 0x6e,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46,
	0x6f, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x11, 0x70, 0x63, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x50,
	0x43, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x52, 0x0f,
	0x70, 0x63, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x72, 0x6d, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x63, 0x72, 0x6d, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x1a, 0x42, 0x0a, 0x08,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x1a, 0xff, 0x02, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e, 0x69,
	0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x72,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x26, 0x0a, 0x0f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61,
	0x69, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x6e, 0x73, 0x5f,
	0x74, 0x69, 0x70, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x61, 0x70, 0x6e, 0x73,
	0x54, 0x69, 0x70, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x70, 0x6e, 0x73, 0x5f, 0x73, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61,
	0x70, 0x6e, 0x73, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x6e, 0x65, 0x77, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x6c,
	0x61, 0x67, 0x1a, 0x36, 0x0a, 0x11, 0x46, 0x53, 0x4a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x46, 0x0a, 0x04, 0x46, 0x61,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x6c, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6f, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x1a, 0x99, 0x02, 0x0a, 0x07, 0x46, 0x75, 0x6e, 0x46, 0x61, 0x63, 0x65, 0x12, 0x4d,
	0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x75, 0x72, 0x6e, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x49, 0x4d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x46, 0x75, 0x6e, 0x46, 0x61, 0x63,
	0x65, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x10, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x75, 0x72, 0x6e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3e, 0x0a,
	0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f, 0x6d, 0x62, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x2e, 0x46, 0x75, 0x6e, 0x46, 0x61, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x6d, 0x62,
	0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x6d, 0x62, 0x1a, 0x1c, 0x0a,
	0x04, 0x42, 0x6f, 0x6d, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x72, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x75, 0x72, 0x73, 0x74, 0x1a, 0x61, 0x0a, 0x09, 0x54,
	0x75, 0x72, 0x6e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x69, 0x6e, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x75, 0x69, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x69, 0x74, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x69, 0x74, 0x55, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0c,
	0x68, 0x69, 0x74, 0x5f, 0x75, 0x69, 0x6e, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x68, 0x69, 0x74, 0x55, 0x69, 0x6e, 0x4e, 0x69, 0x63, 0x6b, 0x1a, 0xa1,
	0x05, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12,
	0x2b, 0x0a, 0x12, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x69, 0x79, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x62, 0x75, 0x62,
	0x62, 0x6c, 0x65, 0x44, 0x69, 0x79, 0x54, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x4e,
	0x65, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x75, 0x69, 0x6e, 0x12, 0x13, 0x0a, 0x05, 0x72, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x70,
	0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x72, 0x70,
	0x46, 0x6f, 0x6c, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x6f,
	0x6e, 0x67, 0x54, 0x65, 0x78, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f,
	0x6e, 0x67, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x6c, 0x61, 0x6d, 0x6f, 0x75, 0x72, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x6c, 0x61, 0x6d, 0x6f, 0x75,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x0d, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63, 0x5f, 0x74, 0x6f, 0x72, 0x63, 0x68,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x69, 0x63, 0x54,
	0x6f, 0x72, 0x63, 0x68, 0x12, 0x33, 0x0a, 0x16, 0x62, 0x61, 0x62, 0x79, 0x71, 0x5f, 0x67, 0x75,
	0x69, 0x64, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x62, 0x61, 0x62, 0x79, 0x71, 0x47, 0x75, 0x69, 0x64, 0x65,
	0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x75, 0x69, 0x6e,
	0x33, 0x32, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x75, 0x69, 0x6e, 0x33, 0x32, 0x45, 0x78, 0x70, 0x65, 0x72,
	0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x5f,
	0x73, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x75,
	0x62, 0x62, 0x6c, 0x65, 0x53, 0x75, 0x62, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70,
	0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x70, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x70, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x1a, 0xf2, 0x01, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0c,
	0x68, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6c, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x43, 0x6c, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e, 0x69,
	0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x62, 0x67, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x61, 0x6e, 0x6b,
	0x42, 0x67, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x1a, 0xaa, 0x02, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x66, 0x65, 0x65, 0x64, 0x4d, 0x73,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x62, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x1a, 0x66, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6f, 0x73,
	0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x3f, 0x0a, 0x16,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xfc, 0x01,
	0x0a, 0x11, 0x4c, 0x69, 0x66, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x6f, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x74, 0x6d, 0x61,
	0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x62, 0x69, 0x74, 0x6d, 0x61, 0x70, 0x12,
	0x20, 0x0a, 0x0c, 0x67, 0x64, 0x74, 0x5f, 0x69, 0x6d, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x67, 0x64, 0x74, 0x49, 0x6d, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x64, 0x74, 0x5f, 0x63, 0x6c, 0x69, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x67, 0x64, 0x74, 0x43, 0x6c, 0x69, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x1a, 0x46, 0x0a, 0x0f,
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x70, 0x70, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x1a, 0x9e, 0x01, 0x0a, 0x0b, 0x4c, 0x6f, 0x6c, 0x61, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6c, 0x6f, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x55,
	0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x4b, 0x65, 0x79, 0x1a, 0xa8, 0x01, 0x0a, 0x0e, 0x4c, 0x6f, 0x77, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x70, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x1a, 0xfb, 0x02, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x46, 0x61, 0x63, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x61,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x74, 0x61, 0x62, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x1a, 0x97,
	0x01, 0x0a, 0x0f, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x78, 0x6d, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x78, 0x6d, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x5f, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x69,
	0x6e, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x86, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x34, 0x0a, 0x09, 0x72, 0x69, 0x63, 0x68,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x49, 0x4d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x52, 0x69, 0x63, 0x68,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x08, 0x72, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x1a, 0x6f, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x34, 0x12, 0x44, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x5f,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64,
	0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x0d, 0x6e, 0x6f, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x1a, 0x4c, 0x0a, 0x11, 0x4e, 0x65, 0x61, 0x72, 0x42, 0x79, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x1a, 0xe8, 0x04, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69,
	0x67, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x63, 0x6d, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x75, 0x62, 0x63, 0x6d, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x66, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x6c, 0x69, 0x66, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x61, 0x62, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x35,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x62, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x36, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x69, 0x64, 0x63, 0x72, 0x63, 0x5f,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x39, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x6c,
	0x65, 0x69, 0x64, 0x63, 0x72, 0x63, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x1a, 0xe7, 0x06, 0x0a, 0x0e,
	0x4e, 0x6f, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x29, 0x0a,
	0x11, 0x6f, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6f, 0x6c, 0x64, 0x56, 0x65, 0x72,
	0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x69, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x69, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x69, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x24,
	0x0a, 0x0e, 0x6f, 0x70, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6f, 0x70, 0x46, 0x61, 0x63, 0x65, 0x42, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6d, 0x64, 0x35, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6f, 0x6c, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x65, 0x6e, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x4c, 0x65, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x65,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x72, 0x6c, 0x5f, 0x34, 0x30, 0x30, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x72, 0x6c, 0x34, 0x30, 0x30, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x5f, 0x34, 0x30, 0x30, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x34, 0x30, 0x30, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x5f, 0x34, 0x30, 0x30, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x34, 0x30, 0x30, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x62, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x1a, 0x69, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x11, 0x6f, 0x6c, 0x64, 0x5f, 0x76, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0e, 0x6f, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x1a, 0x2c, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x51, 0x51, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e,
	0x0a, 0x0b, 0x63, 0x61, 0x72, 0x5f, 0x71, 0x71, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x61, 0x72, 0x51, 0x71, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x45,
	0x0a, 0x0b, 0x50, 0x61, 0x74, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x70, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xe2, 0x01, 0x0a, 0x0f, 0x50, 0x43, 0x53, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x63, 0x5f,
	0x70, 0x74, 0x6c, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x70, 0x63, 0x50, 0x74, 0x6c, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x0a, 0x70,
	0x63, 0x5f, 0x70, 0x74, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x63, 0x50, 0x74, 0x6c, 0x45, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x63,
	0x5f, 0x70, 0x74, 0x6c, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x6d, 0x61, 0x63, 0x50, 0x74, 0x6c, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a,
	0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x70, 0x74, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x50, 0x74, 0x6c, 0x45, 0x6e, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x74, 0x6c, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x74, 0x6c, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x28, 0x0a, 0x10, 0x70, 0x74, 0x6c, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x70, 0x74, 0x6c, 0x73,
	0x4e, 0x6f, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0xbb, 0x05, 0x0a, 0x03, 0x50,
	0x54, 0x54, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x73, 0x72, 0x63, 0x55, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64,
	0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x63, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66,
	0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f,
	0x70, 0x74, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x50, 0x74, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21,
	0x0a, 0x0c, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x74, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x70, 0x74, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x62, 0x5f,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70,
	0x62, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x74, 0x74, 0x5f,
	0x75, 0x72, 0x6c, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x74, 0x74, 0x55,
	0x72, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x66, 0x6c, 0x61, 0x67, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x1a, 0xa2, 0x01, 0x0a, 0x11, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20,
	0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x73, 0x67, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x6f, 0x6e, 0x67,
	0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x6f, 0x6e, 0x67, 0x4d, 0x73, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4b, 0x65, 0x79, 0x1a, 0x49, 0x0a,
	0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x62, 0x75, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x62, 0x75, 0x66,
	0x12, 0x26, 0x0a, 0x0f, 0x70, 0x75, 0x62, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x69, 0x6e, 0x1a, 0x6f, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x75, 0x0a, 0x09, 0x51, 0x51, 0x4c,
	0x69, 0x76, 0x65, 0x4f, 0x6c, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6d,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x75, 0x62, 0x43, 0x6d, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x1a, 0xac, 0x05, 0x0a, 0x0f, 0x51, 0x51, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x49, 0x4f,
	0x42, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x75, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x75, 0x69, 0x6e, 0x12, 0x39,
	0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x51,
	0x51, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x49, 0x4f, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x49, 0x4d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x51, 0x51, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x41, 0x49, 0x4f, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0a, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64,
	0x12, 0x29, 0x0a, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x64, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x72, 0x65,
	0x64, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x6e, 0x6f, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x6e, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x75, 0x74, 0x68, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x61, 0x75, 0x74, 0x68, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0b, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0a, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x11, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x63, 0x5f, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x63, 0x42, 0x6f, 0x64, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x64, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x70, 0x5f, 0x75, 0x69,
	0x6e, 0x18, 0x14, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x61, 0x70, 0x55, 0x69, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x1a,
	0xae, 0x05, 0x0a, 0x12, 0x51, 0x51, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x49, 0x4f, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x75, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x75, 0x72, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x73, 0x74, 0x72, 0x69,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a,
	0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x69, 0x6f, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x49, 0x6f, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0d, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x69, 0x63, 0x6f, 0x6e, 0x75, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x67, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42,
	0x67, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x69, 0x6f, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x61, 0x69, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x61, 0x69, 0x6f, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x61, 0x69, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x66, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x66, 0x74, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x1a, 0x4c, 0x0a, 0x0f, 0x51, 0x51, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x69, 0x6f, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x51, 0x51, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x49,
	0x4f, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x07, 0x61, 0x69, 0x6f, 0x42, 0x6f, 0x64, 0x79, 0x1a, 0x2d,
	0x0a, 0x0a, 0x52, 0x65, 0x64, 0x42, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x64, 0x62, 0x61, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x62, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65, 0x1a, 0xa9, 0x01,
	0x0a, 0x0b, 0x52, 0x69, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x73, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x1a, 0xf8, 0x02, 0x0a, 0x08, 0x52, 0x69,
	0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x49, 0x4d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x32,
	0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x44, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x49, 0x4d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x70, 0x74, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x50, 0x54, 0x54, 0x52, 0x03, 0x70, 0x74, 0x74, 0x12, 0x31,
	0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x70, 0x74, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x2e, 0x54, 0x65, 0x6d, 0x70, 0x50, 0x54, 0x54, 0x52, 0x07, 0x74, 0x65, 0x6d, 0x70, 0x50, 0x74,
	0x74, 0x12, 0x61, 0x0a, 0x19, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x32,
	0x31, 0x31, 0x5f, 0x74, 0x6d, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x32, 0x31,
	0x31, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x16, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x32, 0x31, 0x31, 0x54, 0x6d, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x9c, 0x04, 0x0a, 0x11, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x6e,
	0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x74, 0x74,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x5f, 0x70, 0x72, 0x65, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x50, 0x72,
	0x65, 0x68, 0x65, 0x61, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x6c, 0x65, 0x66, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x6e,
	0x6f, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x4e, 0x6f, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x5f, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x32, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x49, 0x4d, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x32, 0x52, 0x0a, 0x65, 0x6c, 0x65, 0x6d, 0x46, 0x6c, 0x61,
	0x67, 0x73, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x6e, 0x75, 0x6d, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x6e, 0x75, 0x6d, 0x1a, 0x4d, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x6b, 0x65, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75,
	0x69, 0x6e, 0x1a, 0x48, 0x0a, 0x0a, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x45, 0x6d, 0x6f, 0x6a, 0x69,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x53, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x53, 0x75, 0x6d, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x1a, 0xc9, 0x02, 0x0a,
	0x0d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x53, 0x65, 0x71, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66,
	0x72, 0x6f, 0x6d, 0x55, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c,
	0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x2c,
	0x0a, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x69, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x69, 0x63, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x72, 0x63, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x72, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x6f,
	0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x74,
	0x72, 0x6f, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xbf, 0x01, 0x0a, 0x04, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x36, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x36,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x37, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x10, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x37, 0x42, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x62, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x1a, 0x1e, 0x0a, 0x08, 0x54, 0x69,
	0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0xfa, 0x02, 0x0a, 0x07, 0x54,
	0x65, 0x6d, 0x70, 0x50, 0x54, 0x54, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x74, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x74, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x74, 0x74, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x74, 0x74, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x73, 0x69, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12,
	0x26, 0x0a, 0x0f, 0x70, 0x74, 0x74, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x70, 0x74, 0x74, 0x45, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x55, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x32, 0x31, 0x31, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x32, 0x63, 0x5f, 0x63, 0x6d, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x32, 0x63, 0x43, 0x6d, 0x64, 0x1a, 0x4e,
	0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6c, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x6c, 0x65, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x65, 0x6c, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xcd,
	0x06, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x4d, 0x64, 0x35, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x24, 0x0a, 0x0e, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d,
	0x64, 0x35, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x46,
	0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x46, 0x69,
	0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x73, 0x69, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x72, 0x6f,
	0x6d, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x6f, 0x5f,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x74, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x76, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x22, 0x0a, 0x0d,
	0x73, 0x75, 0x62, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x42, 0x75, 0x73, 0x69, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x74, 0x74, 0x72, 0x12,
	0x26, 0x0a, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x46,
	0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12,
	0x2e, 0x0a, 0x13, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x2e, 0x0a, 0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x1a, 0x5b,
	0x0a, 0x15, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x69, 0x6e, 0x1a, 0x5c, 0x0a, 0x0c, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0xb1, 0x1b, 0x0a, 0x0d, 0x49, 0x4d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x1a, 0xbc, 0x02, 0x0a, 0x07,
	0x43, 0x32, 0x43, 0x48, 0x65, 0x61, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x63, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x63, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x63, 0x63, 0x43, 0x6d, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x70, 0x69, 0x63, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x50, 0x69, 0x63, 0x53, 0x69, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61,
	0x75, 0x74, 0x68, 0x53, 0x69, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x62,
	0x75, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x42, 0x75,
	0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x99, 0x05, 0x0a, 0x06, 0x43,
	0x53, 0x48, 0x65, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x73, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x75, 0x62, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x70, 0x75, 0x62, 0x6e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x07, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x6e, 0x5f, 0x69, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x07, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x6e,
	0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x70, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x49, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x07, 0x52, 0x08, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x49, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x07, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x63,
	0x6d, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x75, 0x62, 0x63, 0x6d, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x64, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x69, 0x64, 0x63, 0x49, 0x64, 0x1a, 0xc4, 0x01, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6c, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x6b,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61,
	0x63, 0x6b, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x1a, 0xb0, 0x04,
	0x0a, 0x04, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x73, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x2e, 0x43, 0x53, 0x48, 0x65, 0x61, 0x64, 0x52,
	0x09, 0x6d, 0x73, 0x67, 0x43, 0x73, 0x48, 0x65, 0x61, 0x64, 0x12, 0x38, 0x0a, 0x0c, 0x6d, 0x73,
	0x67, 0x5f, 0x73, 0x32, 0x63, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64,
	0x2e, 0x53, 0x32, 0x43, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x53, 0x32, 0x63,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x47, 0x0a, 0x11, 0x6d, 0x73, 0x67, 0x5f, 0x68, 0x74, 0x74, 0x70,
	0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x2e,
	0x48, 0x74, 0x74, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0f, 0x6d, 0x73,
	0x67, 0x48, 0x74, 0x74, 0x70, 0x63, 0x6f, 0x6e, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x69, 0x6e, 0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x61, 0x69, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x3b, 0x0a, 0x0d,
	0x6d, 0x73, 0x67, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x69, 0x67, 0x52, 0x0b, 0x6d, 0x73,
	0x67, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x0e, 0x6d, 0x73, 0x67,
	0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61,
	0x64, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0c, 0x6d, 0x73, 0x67,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x48, 0x65, 0x61, 0x64, 0x12, 0x38, 0x0a, 0x0c, 0x6d, 0x73, 0x67,
	0x5f, 0x63, 0x32, 0x63, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x2e,
	0x43, 0x32, 0x43, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x43, 0x32, 0x63, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x3e, 0x0a, 0x0e, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x49, 0x4d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x2e, 0x53, 0x43, 0x6f, 0x6e,
	0x6e, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0c, 0x6d, 0x73, 0x67, 0x53, 0x63, 0x6f, 0x6e, 0x6e, 0x48,
	0x65, 0x61, 0x64, 0x12, 0x3b, 0x0a, 0x0d, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x5f,
	0x63, 0x74, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x49, 0x4d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x43,
	0x74, 0x72, 0x6c, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x43, 0x74, 0x72, 0x6c,
	0x1a, 0x95, 0x06, 0x0a, 0x0c, 0x48, 0x74, 0x74, 0x70, 0x43, 0x6f, 0x6e, 0x6e, 0x48, 0x65, 0x61,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x75, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x74, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06,
	0x70, 0x75, 0x62, 0x5f, 0x6e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x75,
	0x62, 0x4e, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x07, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x71, 0x7a, 0x68,
	0x74, 0x74, 0x70, 0x5f, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x07, 0x52, 0x08, 0x71, 0x7a,
	0x68, 0x74, 0x74, 0x70, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x7a, 0x68, 0x74, 0x74, 0x70,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x71, 0x7a, 0x68,
	0x74, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x70, 0x5f, 0x69,
	0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x07, 0x52, 0x05, 0x73, 0x70, 0x70, 0x49, 0x70, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x70, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x73, 0x70, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x49, 0x4d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x52, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6d,
	0x64, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6d, 0x64, 0x69, 0x64, 0x12, 0x3f, 0x0a, 0x0c, 0x6d, 0x73, 0x67, 0x5f, 0x6f,
	0x69, 0x64, 0x62, 0x68, 0x65, 0x61, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x4f, 0x69, 0x64, 0x62, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x6d, 0x73, 0x67,
	0x4f, 0x69, 0x64, 0x62, 0x68, 0x65, 0x61, 0x64, 0x1a, 0xcc, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x73,
	0x74, 0x43, 0x74, 0x72, 0x6c, 0x12, 0x40, 0x0a, 0x10, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x10, 0x6d, 0x73, 0x67, 0x5f, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61,
	0x64, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6d, 0x73, 0x67, 0x45,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x6d, 0x73,
	0x67, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61,
	0x64, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x46,
	0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x1a, 0x80, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x70, 0x70, 0x70, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x6e, 0x73, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x6e,
	0x73, 0x74, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x6e, 0x75, 0x6d,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x30, 0x0a, 0x08, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x53, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x1a, 0xd2, 0x01, 0x0a,
	0x0b, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x28, 0x0a, 0x10,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x49, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0a, 0x72, 0x65, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x49, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0xc8, 0x01, 0x0a, 0x07, 0x53, 0x32, 0x43, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x75, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x4d, 0x73, 0x67, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x72, 0x6f,
	0x6d, 0x55, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x5f, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x07, 0x52, 0x07, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x49, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61,
	0x79, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x1a, 0x0b, 0x0a, 0x09,
	0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x1a, 0x81, 0x01, 0x0a, 0x0d, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x4f, 0x69, 0x64, 0x62, 0x48, 0x65, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x90, 0x03,
	0x0a, 0x09, 0x49, 0x4d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x1a, 0x87, 0x01, 0x0a, 0x0b,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66,
	0x72, 0x6f, 0x6d, 0x55, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x71, 0x12, 0x25,
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x1a, 0x2a, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x1a, 0x65, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x39, 0x0a,
	0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x49, 0x4d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x66, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x39, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x49, 0x4d,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xcd, 0x1d, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x1a, 0x6d, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x1a, 0xb2, 0x03, 0x0a, 0x12, 0x43, 0x32, 0x43, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x32, 0x63, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x32, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x75, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x55, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x73, 0x69, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x12, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x62, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x8b, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x69, 0x76, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64,
	0x69, 0x76, 0x53, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x1a, 0xc5, 0x01, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x5f,
	0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x55, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x63, 0x75, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63,
	0x75, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x53,
	0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x5f, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63,
	0x75, 0x73, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x63, 0x75, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xb6, 0x01, 0x0a,
	0x11, 0x45, 0x78, 0x74, 0x72, 0x61, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61,
	0x78, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x78, 0x53, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x72, 0x61, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x95, 0x02, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x72, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x89, 0x02,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x41, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41,
	0x70, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x61, 0x70, 0x70,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xa4, 0x09, 0x0a, 0x0b, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72, 0x6f,
	0x6d, 0x55, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x32, 0x63, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x63, 0x32, 0x63, 0x43, 0x6d, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x69, 0x64, 0x12, 0x54, 0x0a, 0x15,
	0x63, 0x32, 0x63, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x32, 0x43, 0x54,
	0x65, 0x6d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x12,
	0x63, 0x32, 0x63, 0x54, 0x65, 0x6d, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x3d, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x75, 0x69, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68,
	0x55, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6e, 0x69, 0x63, 0x6b,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x4e, 0x69, 0x63, 0x6b,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x69, 0x6c, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x75,
	0x74, 0x69, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x52, 0x0e, 0x6d, 0x75, 0x74, 0x69, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x48, 0x65, 0x61, 0x64,
	0x12, 0x43, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x5f, 0x63, 0x74, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x49, 0x4d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x43, 0x74, 0x72, 0x6c, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x43, 0x74, 0x72, 0x6c, 0x12, 0x42, 0x0a, 0x1e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x2d, 0x0a, 0x13, 0x77, 0x73, 0x65,
	0x71, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x32, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x68, 0x65, 0x61, 0x64,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x77, 0x73, 0x65, 0x71, 0x49, 0x6e, 0x43, 0x32,
	0x63, 0x4d, 0x73, 0x67, 0x68, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x70, 0x69, 0x64,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x70, 0x69, 0x64, 0x12, 0x4d, 0x0a, 0x12,
	0x65, 0x78, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x15, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x65, 0x78, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x53, 0x65, 0x78, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73,
	0x5f, 0x73, 0x72, 0x63, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x72, 0x63, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x46, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30,
	0x32, 0x31, 0x30, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x4b, 0x0a, 0x12, 0x4d, 0x75, 0x74, 0x69,
	0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x1a, 0x98, 0x03, 0x0a, 0x0a, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e,
	0x65, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x28, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x5f,
	0x62, 0x69, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x42, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x72, 0x6c, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x1a, 0x30, 0x0a, 0x08, 0x55, 0x69, 0x6e, 0x32, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69,
	0x63, 0x6b, 0x1a, 0xdb, 0x02, 0x0a, 0x0e, 0x55, 0x69, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x65, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70,
	0x65, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x32, 0x0a, 0x15, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x13, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x32, 0x63, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x32, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x74, 0x69, 0x6e, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x6f, 0x54, 0x69, 0x6e, 0x79, 0x49, 0x64,
	0x22, 0xd7, 0x02, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x3e,
	0x0a, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xe9,
	0x01, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c,
	0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x31, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x31, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x33,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x63, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x69, 0x63, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x63, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x69, 0x63, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x73, 0x76, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x76, 0x46, 0x6c, 0x61, 0x67, 0x22, 0xec, 0x80, 0x01, 0x0a, 0x0e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x4b,
	0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x15, 0x0a, 0x06,
	0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x55, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x73, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x1a, 0xa0, 0x01, 0x0a, 0x0f,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x6f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f,
	0x75, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73,
	0x69, 0x67, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x66,
	0x72, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x1a, 0x33,
	0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f,
	0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x73, 0x69, 0x67, 0x1a, 0x37, 0x0a, 0x0c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54,
	0x65, 0x6d, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x1a, 0x4e, 0x0a, 0x0f,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x57, 0x50, 0x41, 0x54, 0x65, 0x6d, 0x70, 0x12,
	0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x69, 0x67, 0x74, 0x1a, 0x1c, 0x0a, 0x03,
	0x43, 0x32, 0x43, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x1a, 0x87, 0x01, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f,
	0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x32, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x63, 0x32, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x76, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73,
	0x76, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x1a, 0x22, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x64, 0x69, 0x73, 0x55, 0x69, 0x6e, 0x1a, 0x3d, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x63,
	0x75, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x5f, 0x75,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x69, 0x73, 0x55, 0x69, 0x6e,
	0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x1a, 0x26, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x1a,
	0x3f, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f,
	0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e,
	0x1a, 0x54, 0x0a, 0x13, 0x4e, 0x65, 0x61, 0x72, 0x42, 0x79, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x1a, 0x51, 0x0a, 0x10, 0x4e, 0x65, 0x61, 0x72, 0x42, 0x79,
	0x44, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f,
	0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x73, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x1a, 0x57, 0x0a, 0x0f, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x15, 0x0a, 0x06,
	0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x55, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x73, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x75,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x55,
	0x69, 0x6e, 0x1a, 0x35, 0x0a, 0x0a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x50, 0x6c, 0x61, 0x74,
	0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x1a, 0x3e, 0x0a, 0x13, 0x51, 0x51, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70,
	0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x1a, 0x39, 0x0a, 0x0e, 0x52, 0x69, 0x63,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x74,
	0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x55,
	0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x73, 0x69, 0x67, 0x1a, 0xa3, 0x0b, 0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x48, 0x65, 0x61, 0x64, 0x12, 0x25, 0x0a, 0x03, 0x63, 0x32, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x32, 0x43, 0x52, 0x03, 0x63, 0x32, 0x63, 0x12, 0x2b, 0x0a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x38, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x65,
	0x6d, 0x70, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x52, 0x07, 0x64, 0x69,
	0x73, 0x63, 0x75, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73,
	0x5f, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69, 0x73,
	0x63, 0x75, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73,
	0x73, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x32, 0x0a, 0x08, 0x77, 0x70, 0x61, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x50, 0x41, 0x54, 0x65, 0x6d, 0x70,
	0x52, 0x07, 0x77, 0x70, 0x61, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x3f, 0x0a, 0x0b, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0a,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x50, 0x6c, 0x61, 0x74, 0x52, 0x0a, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x50, 0x6c, 0x61, 0x74, 0x12, 0x45, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42,
	0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x48, 0x0a, 0x10, 0x72, 0x69, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x69,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0e, 0x72, 0x69,
	0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x41, 0x0a, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6d,
	0x64, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6d, 0x64, 0x12,
	0x3b, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x73, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x45, 0x0a, 0x0e,
	0x70, 0x75, 0x62, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0c, 0x70, 0x75, 0x62, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54,
	0x65, 0x6d, 0x70, 0x12, 0x3f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x30, 0x78, 0x32,
	0x31, 0x31, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x30, 0x78, 0x32, 0x31, 0x31, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x30,
	0x78, 0x32, 0x31, 0x31, 0x12, 0x4b, 0x0a, 0x11, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x77, 0x70, 0x61, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x57, 0x50, 0x41, 0x54, 0x65, 0x6d, 0x70,
	0x52, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x57, 0x70, 0x61, 0x54, 0x65, 0x6d,
	0x70, 0x12, 0x35, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x08,
	0x61, 0x75, 0x74, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x41, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0c, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x57, 0x0a, 0x15, 0x71,
	0x71, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x51, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x52,
	0x13, 0x71, 0x71, 0x51, 0x75, 0x65, 0x72, 0x79, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x54, 0x65, 0x6d, 0x70, 0x12, 0x4e, 0x0a, 0x12, 0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x5f, 0x64,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4e, 0x65, 0x61, 0x72, 0x42, 0x79, 0x44, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x65,
	0x6d, 0x70, 0x52, 0x10, 0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x44, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x54, 0x65, 0x6d, 0x70, 0x12, 0x57, 0x0a, 0x15, 0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x5f, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x65, 0x61, 0x72, 0x42, 0x79, 0x41, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x13, 0x6e, 0x65, 0x61, 0x72, 0x62, 0x79,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x3b, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6d, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x1a, 0xae, 0x01, 0x0a, 0x0e, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x65, 0x61, 0x64, 0x12, 0x4e, 0x0a,
	0x13, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x41, 0x36, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x30, 0x30, 0x43, 0x31, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x11, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a,
	0x12, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x30, 0x30, 0x31, 0x41, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x10, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0xe9, 0x01, 0x0a, 0x0e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x30, 0x78, 0x32, 0x31, 0x31, 0x12, 0x15,
	0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x63, 0x5f, 0x63, 0x6d, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x63, 0x43, 0x6d, 0x64, 0x12, 0x34, 0x0a, 0x09,
	0x69, 0x6e, 0x73, 0x74, 0x5f, 0x63, 0x74, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x43, 0x74, 0x72, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x43, 0x74,
	0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x73, 0x69, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x32, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x32, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x6c,
	0x69, 0x6e, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x1a, 0x40, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x42, 0x0a, 0x10, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74,
	0x6f, 0x55, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x32, 0x63, 0x5f, 0x63, 0x6d, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x32, 0x63, 0x43, 0x6d, 0x64, 0x1a, 0x5c, 0x0a,
	0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x71, 0x54, 0x61, 0x67,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x71, 0x42, 0x75, 0x66, 0x66, 0x1a, 0x84, 0x01, 0x0a, 0x0d,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x70, 0x54, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x62, 0x75,
	0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x42, 0x75,
	0x66, 0x66, 0x1a, 0x32, 0x0a, 0x07, 0x57, 0x50, 0x41, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x15, 0x0a,
	0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74,
	0x6f, 0x55, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x1a, 0x4b, 0x0a, 0x13, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x1a, 0x89, 0x02, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xb6, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69,
	0x6e, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x1a,
	0x4d, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0xe8,
	0x04, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x03, 0x63, 0x32, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x32, 0x43, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x63, 0x32, 0x63, 0x12, 0x47, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x4d, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x1a, 0xad, 0x01, 0x0a, 0x0a, 0x43, 0x32, 0x43, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x65, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x70, 0x65, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x71,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x71, 0x1a, 0x52, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x5f,
	0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x55, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x71, 0x1a, 0x71, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x1a, 0x54, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x89, 0x04, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x30, 0x0a,
	0x14, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x52, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x13, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x52, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x28, 0x0a, 0x10, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x79, 0x6e, 0x63, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x2c, 0x0a, 0x12,
	0x77, 0x68, 0x69, 0x73, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x77, 0x68, 0x69, 0x73, 0x70, 0x65,
	0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x15,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x12, 0x34, 0x0a, 0x16, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x14, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x1a, 0xa8, 0x03, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73,
	0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x79,
	0x6e, 0x63, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x49, 0x0a, 0x11, 0x75, 0x69, 0x6e, 0x5f, 0x70, 0x61,
	0x69, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x55, 0x69, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x0f, 0x75, 0x69, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x15,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x32, 0x0a, 0x15, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x13, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69,
	0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x28, 0x0a, 0x10,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x74, 0x72, 0x6c, 0x5f, 0x62, 0x75, 0x66,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x74, 0x72, 0x6c, 0x42, 0x75, 0x66, 0x1a, 0xef, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x73, 0x63, 0x75, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x55, 0x69, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x65, 0x6e, 0x64, 0x53, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f,
	0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x53, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x67, 0x65, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x65, 0x71, 0x1a, 0xbc, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x55, 0x69, 0x6e, 0x12, 0x24, 0x0a,
	0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x71, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x6e, 0x64,
	0x53, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x12, 0x2a, 0x0a,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x65,
	0x71, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x71, 0x1a, 0x8d, 0x02, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x5f, 0x73,
	0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x73, 0x68, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x2a, 0x0a, 0x11, 0x73,
	0x61, 0x76, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x61, 0x76, 0x65, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x46, 0x6c, 0x61, 0x67, 0x1a, 0xea, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x53,
	0x65, 0x71, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x65, 0x6e, 0x64,
	0x5f, 0x73, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x45, 0x6e, 0x64, 0x53, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x1a, 0x8a, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x4f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6e,
	0x74, 0x1a, 0xf9, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x4f, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x65, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70,
	0x65, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d,
	0x73, 0x67, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x61,
	0x73, 0x74, 0x4d, 0x73, 0x67, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x12, 0x2a, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x73, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x69, 0x73, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x9d, 0x02,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x61,
	0x64, 0x43, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x70, 0x77,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x77,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x73, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x77, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x70, 0x77, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x63, 0x6d, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x75, 0x62, 0x63, 0x6d, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x6d, 0x73, 0x67, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x4d, 0x73, 0x67, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x1a, 0xe5, 0x01,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x73, 0x69, 0x67, 0x1a, 0x55, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x1a, 0x8b, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x75,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x69,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x4e, 0x75, 0x6d, 0x1a, 0x15, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x32, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x6c, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x32,
	0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x4e, 0x75, 0x6d, 0x1a,
	0xc3, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x44, 0x69, 0x73,
	0x63, 0x75, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x10, 0x64,
	0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x71, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44,
	0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x52, 0x0e, 0x64,
	0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x46, 0x0a,
	0x0e, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x55, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x61,
	0x73, 0x74, 0x53, 0x65, 0x71, 0x1a, 0xa5, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x64, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x1a, 0x66, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66,
	0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66,
	0x55, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53,
	0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x53, 0x65, 0x71, 0x1a, 0xab, 0x01,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x1a, 0x48, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x71, 0x1a, 0x8d, 0x02, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a,
	0x6a, 0x0a, 0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x65, 0x71, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x71, 0x1a, 0x90, 0x02, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x54, 0x68, 0x69, 0x72, 0x64, 0x51, 0x51,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x10, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x71, 0x71, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x51, 0x51, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x51, 0x51, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x71, 0x71, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x1a, 0x7b, 0x0a, 0x0e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x51, 0x51, 0x52, 0x65, 0x71, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x68, 0x69, 0x72, 0x64, 0x55, 0x69, 0x6e,
	0x12, 0x22, 0x0a, 0x0d, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x5f, 0x73, 0x69,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x55, 0x69,
	0x6e, 0x53, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x75, 0x69,
	0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x55, 0x69, 0x6e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x1a, 0xc5,
	0x03, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x51, 0x51, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x64, 0x0a, 0x11, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x71, 0x71, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x51, 0x51, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x51, 0x51, 0x52, 0x65, 0x73, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x71, 0x71, 0x52, 0x65, 0x73, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x1a, 0xe9, 0x01, 0x0a, 0x0f, 0x54,
	0x68, 0x69, 0x72, 0x64, 0x51, 0x51, 0x52, 0x65, 0x73, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x74, 0x68, 0x69, 0x72, 0x64, 0x55, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x55, 0x69, 0x6e, 0x43,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x4e, 0x75, 0x6d, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x64,
	0x62, 0x61, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x72, 0x65, 0x64, 0x62, 0x61, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4d,
	0x73, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xd1, 0x02, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x03, 0x63,
	0x32, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x43, 0x32, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x63,
	0x32, 0x63, 0x12, 0x42, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x42,
	0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x62,
	0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x12, 0x3b, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x41, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x44,
	0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x64,
	0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x12, 0x42, 0x0a, 0x08, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f,
	0x71, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x54, 0x68, 0x69, 0x72, 0x64, 0x51, 0x51, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x74, 0x68, 0x69, 0x72, 0x64, 0x51, 0x71, 0x1a, 0xd7, 0x02, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x03, 0x63, 0x32, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x32, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x03, 0x63, 0x32, 0x63, 0x12, 0x43, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x64,
	0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x12, 0x3c, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x42, 0x0a, 0x07, 0x64,
	0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x12,
	0x43, 0x0a, 0x08, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x71, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x51, 0x51, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x51, 0x71, 0x1a, 0x58, 0x0a, 0x1a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x61, 0x64, 0x65, 0x64, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x1a, 0x96,
	0x01, 0x0a, 0x1b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x42,
	0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x69, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x62, 0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x1a, 0xfc, 0x02, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x43, 0x32, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64,
	0x43, 0x32, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x55, 0x69, 0x6e, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x1a, 0xf2, 0x01, 0x0a, 0x0f, 0x55, 0x69, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x61,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x75, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x55, 0x69, 0x6e,
	0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x72, 0x6d, 0x5f, 0x73, 0x69,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x72, 0x6d, 0x53, 0x69, 0x67, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x70, 0x65, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x70, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x70, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x69, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x61, 0x69, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x74,
	0x69, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x6f,
	0x54, 0x69, 0x6e, 0x79, 0x49, 0x64, 0x1a, 0x77, 0x0a, 0x17, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x43, 0x32, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x1a,
	0x5b, 0x0a, 0x1a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x44,
	0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x66, 0x55, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65, 0x71, 0x1a, 0xaf, 0x01, 0x0a,
	0x1b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x44, 0x69, 0x73,
	0x63, 0x75, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x6e,
	0x66, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x66, 0x55, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x53, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x73, 0x65, 0x71, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x53, 0x65, 0x71, 0x1a, 0x5d,
	0x0a, 0x18, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65, 0x71, 0x1a, 0xba, 0x01,
	0x0a, 0x19, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x53, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x1a, 0x90, 0x02, 0x0a, 0x13, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x38, 0x0a, 0x01, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x44, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x01, 0x63, 0x12, 0x38, 0x0a, 0x03,
	0x63, 0x32, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x43, 0x32, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x03, 0x63, 0x32, 0x63, 0x12, 0x45, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x75,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x1a, 0xa1, 0x02,
	0x0a, 0x14, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x61,
	0x64, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x45, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x63, 0x75,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x44, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x64, 0x69, 0x73, 0x63, 0x75, 0x73, 0x73, 0x12, 0x39,
	0x0a, 0x03, 0x63, 0x32, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x43, 0x32, 0x43, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x03, 0x63, 0x32, 0x63, 0x12, 0x46, 0x0a, 0x08, 0x62, 0x69, 0x6e,
	0x64, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x65, 0x64, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x69,
	0x6e, 0x1a, 0x43, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x71, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0x70, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x2b, 0x0a, 0x11, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x72, 0x73, 0x70, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x52, 0x73, 0x70, 0x62, 0x6f, 0x64, 0x79, 0x1a, 0xda, 0x09, 0x0a, 0x0b, 0x53, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x61, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79,
	0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x61,
	0x70, 0x70, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41,
	0x70, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x61, 0x70, 0x70,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x76, 0x69, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x56, 0x69, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x10, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x52, 0x0e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x73, 0x67, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x11, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x0f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x42, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x49, 0x4d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x71,
	0x1a, 0xab, 0x02, 0x0a, 0x12, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0f,
	0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x6d, 0x73, 0x67, 0x55, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x6d, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x65, 0x6d, 0x70, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x4c, 0x65, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x65, 0x64, 0x62, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x72, 0x65, 0x64, 0x62, 0x61, 0x67, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x64, 0x62, 0x61, 0x67, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x62, 0x61, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x62, 0x61, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x52, 0x65, 0x61, 0x64, 0x62, 0x61,
	0x67, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x5f, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68, 0x61, 0x73, 0x56, 0x65, 0x64, 0x69, 0x6f, 0x1a, 0xa4,
	0x01, 0x0a, 0x0f, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69,
	0x6f, 0x73, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x69, 0x6f, 0x73, 0x50, 0x75, 0x73, 0x68, 0x57, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0xf4, 0x05, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x11, 0x73, 0x76, 0x72, 0x62, 0x75, 0x73, 0x79, 0x5f, 0x77, 0x61, 0x69, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x76, 0x72,
	0x62, 0x75, 0x73, 0x79, 0x57, 0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x0d,
	0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x56, 0x0a,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x73, 0x76, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x53, 0x76,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x49, 0x4d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x74, 0x65, 0x78, 0x74,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x22,
	0x0a, 0x0d, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x35, 0x0a, 0x16, 0x6d, 0x73, 0x67, 0x65, 0x6c, 0x65, 0x6d, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x74, 0x79, 0x70, 0x65, 0x33, 0x37, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x15, 0x6d, 0x73, 0x67, 0x65, 0x6c, 0x65, 0x6d, 0x69, 0x6e, 0x66, 0x6f, 0x53,
	0x65, 0x72, 0x76, 0x74, 0x79, 0x70, 0x65, 0x33, 0x37, 0x1a, 0x2d, 0x0a, 0x0f, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x1a, 0x91, 0x01, 0x0a, 0x13, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x72, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xbb, 0x04, 0x0a,
	0x12, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x32, 0x43, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x32, 0x43, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x6e,
	0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6c, 0x6f, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x75, 0x62, 0x43, 0x6d, 0x64, 0x1a, 0xfd, 0x02, 0x0a, 0x0b, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x72,
	0x6f, 0x6d, 0x55, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x71, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6b, 0x67, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6b, 0x67, 0x4e, 0x75,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6b, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6b, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17,
	0x0a, 0x07, 0x64, 0x69, 0x76, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x64, 0x69, 0x76, 0x53, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x61, 0x64, 0x52, 0x0b, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x65, 0x61, 0x64, 0x1a, 0xd2, 0x02, 0x0a, 0x13, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x32, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x40, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x32, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x75, 0x62, 0x43, 0x6d, 0x64, 0x12, 0x3d, 0x0a, 0x07, 0x77, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x64, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x42, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x32, 0x43, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a,
	0xed, 0x02, 0x0a, 0x14, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x5f,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x75, 0x62, 0x43, 0x6d,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x46, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x64,
	0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65,
	0x66, 0x1a, 0x9b, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x71,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x1a,
	0xb9, 0x04, 0x0a, 0x15, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x6d,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x75, 0x62, 0x43, 0x6d, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x56, 0x0a,
	0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x64, 0x65, 0x66, 0x12,
	0x3d, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0xda,
	0x01, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x83, 0x01, 0x0a, 0x0f,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x03, 0x63, 0x32, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x32, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x03, 0x63, 0x32, 0x63, 0x12, 0x3a, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x1a, 0x86, 0x01, 0x0a, 0x10, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x03, 0x63, 0x32, 0x63, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x43, 0x32, 0x43,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x03, 0x63, 0x32, 0x63, 0x12, 0x3b, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xd8, 0x06, 0x0a, 0x0f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x41, 0x36, 0x1a, 0xc4,
	0x06, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x43, 0x31, 0x1a, 0x9b, 0x03, 0x0a, 0x04,
	0x42, 0x6f, 0x64, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f,
	0x5f, 0x75, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x34, 0x0a, 0x16, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x68, 0x65,
	0x61, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x50, 0x72, 0x65, 0x68, 0x65, 0x61, 0x64, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72,
	0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x66, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x65, 0x66,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x5f, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x41,
	0x36, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x43, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x1a, 0x99, 0x03, 0x0a, 0x0e, 0x4e, 0x6f,
	0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x4c, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x11, 0x6f, 0x6c, 0x64,
	0x5f, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6f, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x5f, 0x6d, 0x64,
	0x35, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x69, 0x63, 0x4d, 0x64, 0x35, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x63, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x69, 0x63, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x69, 0x63, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x69, 0x63, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x15, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x72, 0x65, 0x73,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x22, 0xe5, 0x4d, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x1a, 0x9b, 0x02, 0x0a, 0x08, 0x54, 0x79,
	0x70, 0x65, 0x30, 0x30, 0x31, 0x41, 0x1a, 0x8e, 0x02, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12,
	0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x77, 0x6f,
	0x72, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x6e, 0x12, 0x1e,
	0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x69,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x6e,
	0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x1a, 0xd3, 0x43, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65,
	0x30, 0x30, 0x32, 0x37, 0x1a, 0x5d, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6f,
	0x72, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x1a, 0x87, 0x03, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x72, 0x6f,
	0x6d, 0x55, 0x69, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x69, 0x70, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x69, 0x70, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6a, 0x6f, 0x69, 0x6e, 0x57, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x77, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x65,
	0x77, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x65, 0x61,
	0x72, 0x62, 0x79, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x6e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d,
	0x66, 0x65, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x39, 0x0a,
	0x0d, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x42, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79,
	0x12, 0x3a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31,
	0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0xc5, 0x02, 0x0a,
	0x0d, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75,
	0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x75, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x69, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x69, 0x70, 0x73, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x74, 0x69, 0x70, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x65, 0x66, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x32, 0x63, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x63, 0x32, 0x63, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x6e, 0x69, 0x63, 0x6b, 0x1a, 0x63, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x66, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0xa4, 0x01, 0x0a, 0x0b, 0x44, 0x61,
	0x52, 0x65, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x12, 0x2a,
	0x0a, 0x11, 0x69, 0x73, 0x5f, 0x79, 0x65, 0x73, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x5f, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x69, 0x73, 0x59, 0x65, 0x73,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73,
	0x5f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x69, 0x73, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x1a, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x04,
	0x75, 0x69, 0x6e, 0x73, 0x1a, 0x28, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0x7d,
	0x0a, 0x0e, 0x46, 0x61, 0x6e, 0x70, 0x61, 0x69, 0x7a, 0x69, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x69, 0x70, 0x73,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x74, 0x69, 0x70, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x1a, 0xb5, 0x16,
	0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x09, 0x61, 0x64, 0x64,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x08, 0x61, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x48, 0x0a, 0x0c, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32,
	0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x4c, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x4d, 0x6f, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x6d, 0x6f, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x4d, 0x6f, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x6f,
	0x72, 0x74, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x52, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x4d, 0x6f, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x0e, 0x6d, 0x6f, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x45, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x30, 0x30, 0x32, 0x37, 0x2e, 0x4d, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x0a, 0x6d, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x55, 0x0a, 0x11, 0x6d,
	0x6f, 0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32,
	0x37, 0x2e, 0x4d, 0x6f, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x52, 0x0f, 0x6d, 0x6f, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x49, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e,
	0x69, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x30, 0x30, 0x32, 0x37, 0x2e, 0x4d, 0x6f, 0x64, 0x4c, 0x6f, 0x6e, 0x67, 0x4e, 0x69, 0x63, 0x6b,
	0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x4c, 0x6f, 0x6e, 0x67, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x4f, 0x0a,
	0x0f, 0x6d, 0x6f, 0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x61, 0x63, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32,
	0x37, 0x2e, 0x4d, 0x6f, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x61, 0x63, 0x65, 0x52,
	0x0d, 0x6d, 0x6f, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x61, 0x63, 0x65, 0x12, 0x55,
	0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x30, 0x30, 0x32, 0x37, 0x2e, 0x4d, 0x6f, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x0f, 0x6d, 0x6f, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x68, 0x0a, 0x18, 0x6d, 0x6f, 0x64, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30,
	0x32, 0x37, 0x2e, 0x4d, 0x6f, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x15, 0x6d, 0x6f, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x45, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x4b, 0x0a, 0x09, 0x72, 0x6f, 0x61, 0x6d, 0x5f, 0x70,
	0x72, 0x69, 0x76, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x30, 0x30, 0x32, 0x37, 0x2e, 0x4d, 0x6f, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x6f,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x76, 0x52, 0x08, 0x72, 0x6f, 0x61, 0x6d, 0x50,
	0x72, 0x69, 0x76, 0x12, 0x60, 0x0a, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x73, 0x67,
	0x5f, 0x72, 0x6f, 0x61, 0x6d, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32,
	0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x46,
	0x6c, 0x61, 0x67, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x6f, 0x61,
	0x6d, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x5d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x72, 0x6f, 0x61, 0x6d, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30,
	0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x46,
	0x6c, 0x61, 0x67, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x4d, 0x73, 0x67, 0x52, 0x6f, 0x61, 0x6d,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x52, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x5f, 0x72, 0x69, 0x63, 0x68,
	0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32,
	0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x4d, 0x6f, 0x64, 0x4c,
	0x6f, 0x6e, 0x67, 0x4e, 0x69, 0x63, 0x6b, 0x52, 0x0f, 0x6d, 0x6f, 0x64, 0x52, 0x69, 0x63, 0x68,
	0x4c, 0x6f, 0x6e, 0x67, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x40, 0x0a, 0x07, 0x62, 0x69, 0x6e, 0x5f,
	0x70, 0x6b, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x30, 0x30, 0x32, 0x37, 0x2e, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x50, 0x6b, 0x67, 0x12, 0x55, 0x0a, 0x10, 0x6d, 0x6f,
	0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e,
	0x4d, 0x6f, 0x64, 0x53, 0x4e, 0x53, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0e, 0x6d, 0x6f, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x52, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x4d, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0e, 0x6d, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x6d, 0x6f, 0x64, 0x5f, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x53, 0x4e, 0x53, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x5a, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x41, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x11, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x48, 0x0a, 0x0c, 0x64, 0x61, 0x72, 0x65, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30,
	0x30, 0x32, 0x37, 0x2e, 0x44, 0x61, 0x52, 0x65, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x0b, 0x64, 0x61, 0x72, 0x65, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x62, 0x0a, 0x16,
	0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x6d, 0x65, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6d, 0x65, 0x69,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x13, 0x6e, 0x65, 0x77,
	0x43, 0x6f, 0x6d, 0x65, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x12, 0x50, 0x0a, 0x0f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x64, 0x65, 0x76, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x44, 0x65, 0x76, 0x52, 0x0d, 0x70, 0x75, 0x73, 0x68, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44,
	0x65, 0x76, 0x12, 0x50, 0x0a, 0x0f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x64, 0x65, 0x76, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x44, 0x65, 0x76, 0x52, 0x0d, 0x70, 0x75, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x44, 0x65, 0x76, 0x12, 0x44, 0x0a, 0x0b, 0x71, 0x71, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x70,
	0x75, 0x73, 0x68, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x51, 0x51, 0x50, 0x61, 0x79, 0x50, 0x75, 0x73, 0x68, 0x52,
	0x09, 0x71, 0x71, 0x50, 0x61, 0x79, 0x50, 0x75, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xcb, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x56, 0x0a, 0x11, 0x68, 0x6f, 0x74, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0xcc, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x48, 0x6f, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x0f, 0x68, 0x6f, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x59, 0x0a, 0x12, 0x70, 0x72, 0x61, 0x69,
	0x73, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0xcd,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37,
	0x2e, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x52, 0x10, 0x70, 0x72, 0x61, 0x69, 0x73, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x4f, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x18, 0xd2, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x4d, 0x51, 0x51, 0x43, 0x61, 0x6d, 0x70, 0x75, 0x73,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x75, 0x73, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x58, 0x0a, 0x15, 0x6d, 0x6f, 0x64, 0x5f, 0x72, 0x69, 0x63, 0x68,
	0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x65, 0x78, 0x18, 0xd3, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e,
	0x4d, 0x6f, 0x64, 0x4c, 0x6f, 0x6e, 0x67, 0x4e, 0x69, 0x63, 0x6b, 0x52, 0x11, 0x6d, 0x6f, 0x64,
	0x52, 0x69, 0x63, 0x68, 0x4c, 0x6f, 0x6e, 0x67, 0x4e, 0x69, 0x63, 0x6b, 0x45, 0x78, 0x12, 0x50,
	0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0xd4, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30,
	0x30, 0x32, 0x37, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x7f, 0x0a, 0x1f, 0x66, 0x72, 0x64, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0xd6, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x1b, 0x66, 0x72, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x52, 0x0a, 0x0f, 0x66, 0x61, 0x6e, 0x70, 0x61, 0x6e, 0x7a, 0x69, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x18, 0xd0, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x46, 0x61, 0x6e, 0x70, 0x61, 0x69, 0x7a, 0x69, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x0e, 0x66, 0x61, 0x6e, 0x70, 0x61, 0x6e, 0x7a, 0x69, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x1a, 0x32, 0x0a, 0x1e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x1a, 0x63, 0x0a, 0x0b, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x6c,
	0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0a, 0x6f, 0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c,
	0x6e, 0x65, 0x77, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0x74,
	0x0a, 0x0c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x75, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x1a, 0x4f, 0x0a, 0x03, 0x47, 0x50, 0x53, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x6c,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x44, 0x0a, 0x16, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x3e, 0x0a, 0x10, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x3f, 0x0a, 0x09, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x1a, 0x6a, 0x0a, 0x17,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x6f, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0xe9, 0x04, 0x0a, 0x0f, 0x48, 0x6f, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64,
	0x73, 0x74, 0x55, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x61, 0x69, 0x73, 0x65, 0x5f,
	0x68, 0x6f, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x70, 0x72, 0x61, 0x69, 0x73, 0x65, 0x48, 0x6f, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x68, 0x6f, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x48, 0x6f, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x61, 0x69, 0x73, 0x65, 0x5f,
	0x68, 0x6f, 0x74, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x70, 0x72, 0x61, 0x69, 0x73, 0x65, 0x48, 0x6f, 0x74, 0x44, 0x61, 0x79, 0x73, 0x12, 0x22, 0x0a,
	0x0d, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x68, 0x6f, 0x74, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x48, 0x6f, 0x74, 0x44, 0x61, 0x79,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x79,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x61, 0x69, 0x73, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x61, 0x69, 0x73, 0x65, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1f,
	0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x61, 0x69, 0x73, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x50,
	0x72, 0x61, 0x69, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x0f, 0x71, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x68, 0x6f, 0x74, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x71, 0x7a, 0x6f, 0x6e, 0x65, 0x48,
	0x6f, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x71, 0x7a, 0x6f, 0x6e, 0x65,
	0x5f, 0x68, 0x6f, 0x74, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x71, 0x7a, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x74, 0x44, 0x61, 0x79, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x71, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x71, 0x7a, 0x6f, 0x6e, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x26, 0x0a, 0x0f,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x71, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x51, 0x7a, 0x6f, 0x6e, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x1a, 0x8a, 0x01, 0x0a, 0x0f, 0x4d, 0x51, 0x51, 0x43, 0x61, 0x6d, 0x70,
	0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d,
	0x55, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x1a, 0x7a, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x5f, 0x75, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x55, 0x69, 0x6e,
	0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31,
	0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x6d, 0x0a,
	0x0d, 0x4d, 0x6f, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x61, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x75, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6d, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x6d, 0x64, 0x55, 0x69, 0x6e, 0x1a, 0x56, 0x0a, 0x14,
	0x4d, 0x6f, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x69, 0x76, 0x12, 0x3e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x4f,
	0x6e, 0x65, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x76, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0x4d, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x1a, 0x4f, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37,
	0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0xad, 0x01, 0x0a, 0x15, 0x4d, 0x6f, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x46, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x1a, 0x48, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xa8,
	0x01, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x75, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x69, 0x6e, 0x12,
	0x40, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x6d, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x63, 0x6d, 0x64, 0x55, 0x69, 0x6e, 0x1a, 0x49, 0x0a, 0x0c, 0x4d, 0x6f, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30,
	0x30, 0x32, 0x37, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x1a, 0x35, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x4c, 0x6f, 0x6e, 0x67, 0x4e,
	0x69, 0x63, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x5b, 0x0a, 0x0a, 0x4d,
	0x6f, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x3b, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x53, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x53,
	0x4e, 0x53, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x53, 0x4e, 0x53, 0x55, 0x70, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x6a, 0x0a,
	0x0d, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x6d, 0x65, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x73, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x1a, 0xcb, 0x02, 0x0a, 0x13, 0x4e, 0x65,
	0x77, 0x43, 0x6f, 0x6d, 0x65, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x74,
	0x72, 0x6f, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75,
	0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x75, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x6e, 0x65, 0x77, 0x5f, 0x63,
	0x6f, 0x6d, 0x65, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32,
	0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x4e, 0x65, 0x77, 0x43,
	0x6f, 0x6d, 0x65, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0d, 0x6e, 0x65, 0x77, 0x43, 0x6f,
	0x6d, 0x65, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x4e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x08, 0x6e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x4c, 0x0a, 0x0e, 0x6e, 0x65, 0x77,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30,
	0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x4e, 0x65, 0x77,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x1a, 0xa0, 0x01, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x74, 0x0a, 0x0c, 0x4e, 0x65,
	0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x69, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x1a, 0x5c, 0x0a, 0x0e, 0x4f, 0x6e, 0x65, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x69, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x75, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x76, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x54, 0x61, 0x67, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x68,
	0x0a, 0x10, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6d, 0x70, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6d, 0x70,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x71, 0x0a, 0x0d, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x44, 0x65, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x4d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x02, 0x73, 0x6e, 0x1a, 0xbb, 0x01, 0x0a, 0x0d, 0x50, 0x75, 0x73, 0x68, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x08,
	0x67, 0x70, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x47, 0x50, 0x53, 0x52, 0x07, 0x67,
	0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x64, 0x65, 0x76, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x75, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x64, 0x69, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x34, 0x0a, 0x09, 0x51, 0x51, 0x50, 0x61, 0x79, 0x50, 0x75, 0x73,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x75, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x61, 0x79, 0x5f, 0x6f, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x70, 0x61, 0x79, 0x4f, 0x6b, 0x1a, 0xa8, 0x01, 0x0a, 0x0e, 0x53,
	0x4e, 0x53, 0x55, 0x70, 0x61, 0x74, 0x65, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x90, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x30, 0x30, 0x32, 0x37, 0x2e, 0x53, 0x4e, 0x53, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x91, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x69,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x51, 0x0a, 0x0d, 0x53, 0x4e, 0x53, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x40, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x32, 0x37,
	0x2e, 0x53, 0x4e, 0x53, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x65, 0x46, 0x6c, 0x61,
	0x67, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x39, 0x0a, 0x0d, 0x53, 0x4e, 0x53, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x1a, 0x48, 0x0a, 0x10, 0x53, 0x4e, 0x53, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x6e, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x1a, 0xc1, 0x04,
	0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x38, 0x41, 0x1a, 0xb4, 0x01, 0x0a, 0x04, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x38, 0x41, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x6f, 0x6e,
	0x67, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x1a, 0xfd, 0x02, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06,
	0x74, 0x6f, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x55, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x69, 0x76, 0x5f, 0x73, 0x65, 0x71,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x69, 0x76, 0x53, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c,
	0x61, 0x67, 0x12, 0x3d, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x57, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x1a, 0x99, 0x03, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x30, 0x30, 0x42, 0x33, 0x1a, 0x5d,
	0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x30, 0x32, 0x31, 0x30, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x30, 0x30, 0x42, 0x33, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x1a, 0xad, 0x02,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x6e,
	0x12, 0x28, 0x0a, 0x10, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x75, 0x62, 0x62, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x42, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x07, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x69, 0x63,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e,
	0x69, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x69, 0x6e, 0x42, 0x07, 0x5a,
	0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 288)
var file_message_proto_goTypes = []interface{}{
	(*CommonElement)(nil),                                           // 0: CommonElement
	(*IMMessageBody)(nil),                                           // 1: IMMessageBody
	(*IMMessageHead)(nil),                                           // 2: IMMessageHead
	(*IMReceipt)(nil),                                               // 3: IMReceipt
	(*MessageCommon)(nil),                                           // 4: MessageCommon
	(*MessageControl)(nil),                                          // 5: MessageControl
	(*MessageService)(nil),                                          // 6: MessageService
	(*MessageType00A6)(nil),                                         // 7: MessageType00A6
	(*MessageType0210)(nil),                                         // 8: MessageType0210
	(*CommonElement_ServiceType1)(nil),                              // 9: CommonElement.ServiceType1
	(*CommonElement_ServiceType11)(nil),                             // 10: CommonElement.ServiceType11
	(*CommonElement_ServiceType13)(nil),                             // 11: CommonElement.ServiceType13
	(*CommonElement_ServiceType14)(nil),                             // 12: CommonElement.ServiceType14
	(*CommonElement_ServiceType15)(nil),                             // 13: CommonElement.ServiceType15
	(*CommonElement_ServiceType16)(nil),                             // 14: CommonElement.ServiceType16
	(*CommonElement_ServiceType18)(nil),                             // 15: CommonElement.ServiceType18
	(*CommonElement_ServiceType19)(nil),                             // 16: CommonElement.ServiceType19
	(*CommonElement_ServiceType2)(nil),                              // 17: CommonElement.ServiceType2
	(*CommonElement_ServiceType20)(nil),                             // 18: CommonElement.ServiceType20
	(*CommonElement_ServiceType21)(nil),                             // 19: CommonElement.ServiceType21
	(*CommonElement_ServiceType23)(nil),                             // 20: CommonElement.ServiceType23
	(*CommonElement_ServiceType24)(nil),                             // 21: CommonElement.ServiceType24
	(*CommonElement_ServiceType27)(nil),                             // 22: CommonElement.ServiceType27
	(*CommonElement_ServiceType29)(nil),                             // 23: CommonElement.ServiceType29
	(*CommonElement_ServiceType3)(nil),                              // 24: CommonElement.ServiceType3
	(*CommonElement_ServiceType31)(nil),                             // 25: CommonElement.ServiceType31
	(*CommonElement_ServiceType33)(nil),                             // 26: CommonElement.ServiceType33
	(*CommonElement_ServiceType34)(nil),                             // 27: CommonElement.ServiceType34
	(*CommonElement_ServiceType35)(nil),                             // 28: CommonElement.ServiceType35
	(*CommonElement_ServiceType37)(nil),                             // 29: CommonElement.ServiceType37
	(*CommonElement_ServiceType4)(nil),                              // 30: CommonElement.ServiceType4
	(*CommonElement_ServiceType5)(nil),                              // 31: CommonElement.ServiceType5
	(*CommonElement_ServiceType8)(nil),                              // 32: CommonElement.ServiceType8
	(*CommonElement_ServiceType9)(nil),                              // 33: CommonElement.ServiceType9
	(*CommonElement_ServiceType21_C2CConfessContext)(nil),           // 34: CommonElement.ServiceType21.C2CConfessContext
	(*CommonElement_ServiceType21_GroupConfessContext)(nil),         // 35: CommonElement.ServiceType21.GroupConfessContext
	(*CommonElement_ServiceType21_GroupConfessItem)(nil),            // 36: CommonElement.ServiceType21.GroupConfessItem
	(*CommonElement_ServiceType21_GroupConfessMessage)(nil),         // 37: CommonElement.ServiceType21.GroupConfessMessage
	(*CommonElement_ServiceType24_LimitChatEnter)(nil),              // 38: CommonElement.ServiceType24.LimitChatEnter
	(*CommonElement_ServiceType24_LimitChatExit)(nil),               // 39: CommonElement.ServiceType24.LimitChatExit
	(*CommonElement_ServiceType34_GameSession)(nil),                 // 40: CommonElement.ServiceType34.GameSession
	(*CommonElement_ServiceType4_StoryAioObjMessage)(nil),           // 41: CommonElement.ServiceType4.StoryAioObjMessage
	(*IMMessageBody_AnonymousGroupMessage)(nil),                     // 42: IMMessageBody.AnonymousGroupMessage
	(*IMMessageBody_ApolloActionMessage)(nil),                       // 43: IMMessageBody.ApolloActionMessage
	(*IMMessageBody_ArkAppElement)(nil),                             // 44: IMMessageBody.ArkAppElement
	(*IMMessageBody_Attribute)(nil),                                 // 45: IMMessageBody.Attribute
	(*IMMessageBody_BitAppMessage)(nil),                             // 46: IMMessageBody.BitAppMessage
	(*IMMessageBody_BlessingMessage)(nil),                           // 47: IMMessageBody.BlessingMessage
	(*IMMessageBody_CommonElement)(nil),                             // 48: IMMessageBody.CommonElement
	(*IMMessageBody_ConferenceTipsInfo)(nil),                        // 49: IMMessageBody.ConferenceTipsInfo
	(*IMMessageBody_CrmElement)(nil),                                // 50: IMMessageBody.CrmElement
	(*IMMessageBody_CustomElement)(nil),                             // 51: IMMessageBody.CustomElement
	(*IMMessageBody_CustomFace)(nil),                                // 52: IMMessageBody.CustomFace
	(*IMMessageBody_DeliverGiftMessage)(nil),                        // 53: IMMessageBody.DeliverGiftMessage
	(*IMMessageBody_EIMInfo)(nil),                                   // 54: IMMessageBody.EIMInfo
	(*IMMessageBody_Element)(nil),                                   // 55: IMMessageBody.Element
	(*IMMessageBody_ElementFlags)(nil),                              // 56: IMMessageBody.ElementFlags
	(*IMMessageBody_ElementFlags2)(nil),                             // 57: IMMessageBody.ElementFlags2
	(*IMMessageBody_ExtraInfo)(nil),                                 // 58: IMMessageBody.ExtraInfo
	(*IMMessageBody_FSJMessageElement)(nil),                         // 59: IMMessageBody.FSJMessageElement
	(*IMMessageBody_Face)(nil),                                      // 60: IMMessageBody.Face
	(*IMMessageBody_FunFace)(nil),                                   // 61: IMMessageBody.FunFace
	(*IMMessageBody_GeneralFlags)(nil),                              // 62: IMMessageBody.GeneralFlags
	(*IMMessageBody_GroupBusinessMessage)(nil),                      // 63: IMMessageBody.GroupBusinessMessage
	(*IMMessageBody_GroupFile)(nil),                                 // 64: IMMessageBody.GroupFile
	(*IMMessageBody_GroupPostElement)(nil),                          // 65: IMMessageBody.GroupPostElement
	(*IMMessageBody_GroupPublicAccountInfo)(nil),                    // 66: IMMessageBody.GroupPublicAccountInfo
	(*IMMessageBody_LifeOnlineAccount)(nil),                         // 67: IMMessageBody.LifeOnlineAccount
	(*IMMessageBody_LightAppElement)(nil),                           // 68: IMMessageBody.LightAppElement
	(*IMMessageBody_LolaMessage)(nil),                               // 69: IMMessageBody.LolaMessage
	(*IMMessageBody_LowVersionTips)(nil),                            // 70: IMMessageBody.LowVersionTips
	(*IMMessageBody_MarketFace)(nil),                                // 71: IMMessageBody.MarketFace
	(*IMMessageBody_MarketTransport)(nil),                           // 72: IMMessageBody.MarketTransport
	(*IMMessageBody_MessageBody)(nil),                               // 73: IMMessageBody.MessageBody
	(*IMMessageBody_MessageBodySubType4)(nil),                       // 74: IMMessageBody.MessageBodySubType4
	(*IMMessageBody_NearByMessageType)(nil),                         // 75: IMMessageBody.NearByMessageType
	(*IMMessageBody_NotOnlineFile)(nil),                             // 76: IMMessageBody.NotOnlineFile
	(*IMMessageBody_NotOnlineImage)(nil),                            // 77: IMMessageBody.NotOnlineImage
	(*IMMessageBody_OnlineImage)(nil),                               // 78: IMMessageBody.OnlineImage
	(*IMMessageBody_OpenQQData)(nil),                                // 79: IMMessageBody.OpenQQData
	(*IMMessageBody_PatsElement)(nil),                               // 80: IMMessageBody.PatsElement
	(*IMMessageBody_PCSupportDefine)(nil),                           // 81: IMMessageBody.PCSupportDefine
	(*IMMessageBody_PTT)(nil),                                       // 82: IMMessageBody.PTT
	(*IMMessageBody_PublicAccountInfo)(nil),                         // 83: IMMessageBody.PublicAccountInfo
	(*IMMessageBody_PublicAccount)(nil),                             // 84: IMMessageBody.PublicAccount
	(*IMMessageBody_PublicGroup)(nil),                               // 85: IMMessageBody.PublicGroup
	(*IMMessageBody_QQLiveOld)(nil),                                 // 86: IMMessageBody.QQLiveOld
	(*IMMessageBody_QQWalletAIOBody)(nil),                           // 87: IMMessageBody.QQWalletAIOBody
	(*IMMessageBody_QQWalletAIOElement)(nil),                        // 88: IMMessageBody.QQWalletAIOElement
	(*IMMessageBody_QQWalletMessage)(nil),                           // 89: IMMessageBody.QQWalletMessage
	(*IMMessageBody_RedBagInfo)(nil),                                // 90: IMMessageBody.RedBagInfo
	(*IMMessageBody_RichMessage)(nil),                               // 91: IMMessageBody.RichMessage
	(*IMMessageBody_RichText)(nil),                                  // 92: IMMessageBody.RichText
	(*IMMessageBody_SecretFileMessage)(nil),                         // 93: IMMessageBody.SecretFileMessage
	(*IMMessageBody_ShakeWindow)(nil),                               // 94: IMMessageBody.ShakeWindow
	(*IMMessageBody_SmallEmoji)(nil),                                // 95: IMMessageBody.SmallEmoji
	(*IMMessageBody_SourceMessage)(nil),                             // 96: IMMessageBody.SourceMessage
	(*IMMessageBody_Text)(nil),                                      // 97: IMMessageBody.Text
	(*IMMessageBody_TipsInfo)(nil),                                  // 98: IMMessageBody.TipsInfo
	(*IMMessageBody_TempPTT)(nil),                                   // 99: IMMessageBody.TempPTT
	(*IMMessageBody_Transport211TempMessage)(nil),                   // 100: IMMessageBody.Transport211TempMessage
	(*IMMessageBody_TransportElement)(nil),                          // 101: IMMessageBody.TransportElement
	(*IMMessageBody_VideoFile)(nil),                                 // 102: IMMessageBody.VideoFile
	(*IMMessageBody_WorkflowNotifyMessage)(nil),                     // 103: IMMessageBody.WorkflowNotifyMessage
	(*IMMessageBody_LocationInfo)(nil),                              // 104: IMMessageBody.LocationInfo
	(*IMMessageBody_ElementFlags2_Instance)(nil),                    // 105: IMMessageBody.ElementFlags2.Instance
	(*IMMessageBody_FunFace_Bomb)(nil),                              // 106: IMMessageBody.FunFace.Bomb
	(*IMMessageBody_FunFace_Turntable)(nil),                         // 107: IMMessageBody.FunFace.Turntable
	(*IMMessageHead_C2CHead)(nil),                                   // 108: IMMessageHead.C2CHead
	(*IMMessageHead_CSHead)(nil),                                    // 109: IMMessageHead.CSHead
	(*IMMessageHead_DeltaHead)(nil),                                 // 110: IMMessageHead.DeltaHead
	(*IMMessageHead_Head)(nil),                                      // 111: IMMessageHead.Head
	(*IMMessageHead_HttpConnHead)(nil),                              // 112: IMMessageHead.HttpConnHead
	(*IMMessageHead_InstCtrl)(nil),                                  // 113: IMMessageHead.InstCtrl
	(*IMMessageHead_InstInfo)(nil),                                  // 114: IMMessageHead.InstInfo
	(*IMMessageHead_LoginSig)(nil),                                  // 115: IMMessageHead.LoginSig
	(*IMMessageHead_RedirectMsg)(nil),                               // 116: IMMessageHead.RedirectMsg
	(*IMMessageHead_S2CHead)(nil),                                   // 117: IMMessageHead.S2CHead
	(*IMMessageHead_SConnHead)(nil),                                 // 118: IMMessageHead.SConnHead
	(*IMMessageHead_TransOidbHead)(nil),                             // 119: IMMessageHead.TransOidbHead
	(*IMReceipt_MessageInfo)(nil),                                   // 120: IMReceipt.MessageInfo
	(*IMReceipt_ReceiptInfo)(nil),                                   // 121: IMReceipt.ReceiptInfo
	(*IMReceipt_ReceiptRequest)(nil),                                // 122: IMReceipt.ReceiptRequest
	(*IMReceipt_ReceiptResponse)(nil),                               // 123: IMReceipt.ReceiptResponse
	(*MessageCommon_AppShareInfo)(nil),                              // 124: MessageCommon.AppShareInfo
	(*MessageCommon_C2CTempMessageHead)(nil),                        // 125: MessageCommon.C2CTempMessageHead
	(*MessageCommon_ContentHead)(nil),                               // 126: MessageCommon.ContentHead
	(*MessageCommon_DiscussInfo)(nil),                               // 127: MessageCommon.DiscussInfo
	(*MessageCommon_ExtraGroupKeyInfo)(nil),                         // 128: MessageCommon.ExtraGroupKeyInfo
	(*MessageCommon_GroupInfo)(nil),                                 // 129: MessageCommon.GroupInfo
	(*MessageCommon_Message)(nil),                                   // 130: MessageCommon.Message
	(*MessageCommon_MessageHead)(nil),                               // 131: MessageCommon.MessageHead
	(*MessageCommon_MessageType0210)(nil),                           // 132: MessageCommon.MessageType0210
	(*MessageCommon_MutilTransportHead)(nil),                        // 133: MessageCommon.MutilTransportHead
	(*MessageCommon_PluginInfo)(nil),                                // 134: MessageCommon.PluginInfo
	(*MessageCommon_Uin2Nick)(nil),                                  // 135: MessageCommon.Uin2Nick
	(*MessageCommon_UinPairMessage)(nil),                            // 136: MessageCommon.UinPairMessage
	(*MessageControl_ReserveInfo)(nil),                              // 137: MessageControl.ReserveInfo
	(*MessageService_AccostTemp)(nil),                               // 138: MessageService.AccostTemp
	(*MessageService_AddressListTemp)(nil),                          // 139: MessageService.AddressListTemp
	(*MessageService_AuthTemp)(nil),                                 // 140: MessageService.AuthTemp
	(*MessageService_BusinessTemp)(nil),                             // 141: MessageService.BusinessTemp
	(*MessageService_BusinessWPATemp)(nil),                          // 142: MessageService.BusinessWPATemp
	(*MessageService_C2C)(nil),                                      // 143: MessageService.C2C
	(*MessageService_CommonTemp)(nil),                               // 144: MessageService.CommonTemp
	(*MessageService_Discuss)(nil),                                  // 145: MessageService.Discuss
	(*MessageService_DiscussTemp)(nil),                              // 146: MessageService.DiscussTemp
	(*MessageService_Group)(nil),                                    // 147: MessageService.Group
	(*MessageService_GroupTemp)(nil),                                // 148: MessageService.GroupTemp
	(*MessageService_NearByAssistantTemp)(nil),                      // 149: MessageService.NearByAssistantTemp
	(*MessageService_NearByDatingTemp)(nil),                         // 150: MessageService.NearByDatingTemp
	(*MessageService_PublicGroupTemp)(nil),                          // 151: MessageService.PublicGroupTemp
	(*MessageService_PublicPlat)(nil),                               // 152: MessageService.PublicPlat
	(*MessageService_QQQueryBusinessTemp)(nil),                      // 153: MessageService.QQQueryBusinessTemp
	(*MessageService_RichStatusTemp)(nil),                           // 154: MessageService.RichStatusTemp
	(*MessageService_RoutingHead)(nil),                              // 155: MessageService.RoutingHead
	(*MessageService_SecretFileHead)(nil),                           // 156: MessageService.SecretFileHead
	(*MessageService_Transport0X211)(nil),                           // 157: MessageService.Transport0x211
	(*MessageService_TransportCmd)(nil),                             // 158: MessageService.TransportCmd
	(*MessageService_TransportMessage)(nil),                         // 159: MessageService.TransportMessage
	(*MessageService_TransportReq)(nil),                             // 160: MessageService.TransportReq
	(*MessageService_TransportResp)(nil),                            // 161: MessageService.TransportResp
	(*MessageService_WPATemp)(nil),                                  // 162: MessageService.WPATemp
	(*MessageService_WithdrawWordingInfo)(nil),                      // 163: MessageService.WithdrawWordingInfo
	(*MessageService_DeleteRequest)(nil),                            // 164: MessageService.DeleteRequest
	(*MessageService_DeleteResponse)(nil),                           // 165: MessageService.DeleteResponse
	(*MessageService_DeleteRoamingRequest)(nil),                     // 166: MessageService.DeleteRoamingRequest
	(*MessageService_DeleteRoamingResponse)(nil),                    // 167: MessageService.DeleteRoamingResponse
	(*MessageService_GetRequest)(nil),                               // 168: MessageService.GetRequest
	(*MessageService_GetResponse)(nil),                              // 169: MessageService.GetResponse
	(*MessageService_GetDiscussRequest)(nil),                        // 170: MessageService.GetDiscussRequest
	(*MessageService_GetDiscussResponse)(nil),                       // 171: MessageService.GetDiscussResponse
	(*MessageService_GetGroupRequest)(nil),                          // 172: MessageService.GetGroupRequest
	(*MessageService_GetGroupResponse)(nil),                         // 173: MessageService.GetGroupResponse
	(*MessageService_GetRoamingOneDayRequest)(nil),                  // 174: MessageService.GetRoamingOneDayRequest
	(*MessageService_GetRoamingOneDayResponse)(nil),                 // 175: MessageService.GetRoamingOneDayResponse
	(*MessageService_GetRoamingRequest)(nil),                        // 176: MessageService.GetRoamingRequest
	(*MessageService_GetRoamingResponse)(nil),                       // 177: MessageService.GetRoamingResponse
	(*MessageService_GetUnreadBindUinRequest)(nil),                  // 178: MessageService.GetUnreadBindUinRequest
	(*MessageService_GetUnreadBindUinResponse)(nil),                 // 179: MessageService.GetUnreadBindUinResponse
	(*MessageService_GetUnreadC2CRequest)(nil),                      // 180: MessageService.GetUnreadC2CRequest
	(*MessageService_GetUnreadC2CResponse)(nil),                     // 181: MessageService.GetUnreadC2CResponse
	(*MessageService_GetUnreadDiscussRequest)(nil),                  // 182: MessageService.GetUnreadDiscussRequest
	(*MessageService_GetUnreadDiscussResponse)(nil),                 // 183: MessageService.GetUnreadDiscussResponse
	(*MessageService_GetUnreadGroupRequest)(nil),                    // 184: MessageService.GetUnreadGroupRequest
	(*MessageService_GetUnreadGroupResponse)(nil),                   // 185: MessageService.GetUnreadGroupResponse
	(*MessageService_GetUnreadThirdQQRequest)(nil),                  // 186: MessageService.GetUnreadThirdQQRequest
	(*MessageService_GetUnreadThirdQQResponse)(nil),                 // 187: MessageService.GetUnreadThirdQQResponse
	(*MessageService_GetUnreadRequest)(nil),                         // 188: MessageService.GetUnreadRequest
	(*MessageService_GetUnreadResponse)(nil),                        // 189: MessageService.GetUnreadResponse
	(*MessageService_ReportReadedBindUinRequest)(nil),               // 190: MessageService.ReportReadedBindUinRequest
	(*MessageService_ReportReadedBindUinResponse)(nil),              // 191: MessageService.ReportReadedBindUinResponse
	(*MessageService_ReportReadedC2CRequest)(nil),                   // 192: MessageService.ReportReadedC2CRequest
	(*MessageService_ReportReadedC2CResponse)(nil),                  // 193: MessageService.ReportReadedC2CResponse
	(*MessageService_ReportReadedDiscussRequest)(nil),               // 194: MessageService.ReportReadedDiscussRequest
	(*MessageService_ReportReadedDiscussResponse)(nil),              // 195: MessageService.ReportReadedDiscussResponse
	(*MessageService_ReportReadedGroupRequest)(nil),                 // 196: MessageService.ReportReadedGroupRequest
	(*MessageService_ReportReadedGroupResponse)(nil),                // 197: MessageService.ReportReadedGroupResponse
	(*MessageService_ReportReadedRequest)(nil),                      // 198: MessageService.ReportReadedRequest
	(*MessageService_ReportReadedResponse)(nil),                     // 199: MessageService.ReportReadedResponse
	(*MessageService_SearchRoamingRequest)(nil),                     // 200: MessageService.SearchRoamingRequest
	(*MessageService_SearchRoamingResponse)(nil),                    // 201: MessageService.SearchRoamingResponse
	(*MessageService_SendRequest)(nil),                              // 202: MessageService.SendRequest
	(*MessageService_SendResponse)(nil),                             // 203: MessageService.SendResponse
	(*MessageService_WithdrawC2CRequest)(nil),                       // 204: MessageService.WithdrawC2CRequest
	(*MessageService_WithdrawC2CResponse)(nil),                      // 205: MessageService.WithdrawC2CResponse
	(*MessageService_WithdrawGroupRequest)(nil),                     // 206: MessageService.WithdrawGroupRequest
	(*MessageService_WithdrawGroupResponse)(nil),                    // 207: MessageService.WithdrawGroupResponse
	(*MessageService_WithdrawRequest)(nil),                          // 208: MessageService.WithdrawRequest
	(*MessageService_WithdrawResponse)(nil),                         // 209: MessageService.WithdrawResponse
	(*MessageService_DeleteRequest_MessageItem)(nil),                // 210: MessageService.DeleteRequest.MessageItem
	(*MessageService_DeleteRoamingRequest_C2CMessage)(nil),          // 211: MessageService.DeleteRoamingRequest.C2CMessage
	(*MessageService_DeleteRoamingRequest_DiscussMessage)(nil),      // 212: MessageService.DeleteRoamingRequest.DiscussMessage
	(*MessageService_DeleteRoamingRequest_GroupMessage)(nil),        // 213: MessageService.DeleteRoamingRequest.GroupMessage
	(*MessageService_GetUnreadDiscussRequest_DiscussInfoReq)(nil),   // 214: MessageService.GetUnreadDiscussRequest.DiscussInfoReq
	(*MessageService_GetUnreadDiscussResponse_DiscussInfoResp)(nil), // 215: MessageService.GetUnreadDiscussResponse.DiscussInfoResp
	(*MessageService_GetUnreadGroupRequest_GroupInfoReq)(nil),       // 216: MessageService.GetUnreadGroupRequest.GroupInfoReq
	(*MessageService_GetUnreadGroupResponse_GroupInfoResp)(nil),     // 217: MessageService.GetUnreadGroupResponse.GroupInfoResp
	(*MessageService_GetUnreadThirdQQRequest_ThirdQQReqInfo)(nil),   // 218: MessageService.GetUnreadThirdQQRequest.ThirdQQReqInfo
	(*MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo)(nil), // 219: MessageService.GetUnreadThirdQQResponse.ThirdQQRespInfo
	(*MessageService_ReportReadedC2CRequest_UinPairReadInfo)(nil),   // 220: MessageService.ReportReadedC2CRequest.UinPairReadInfo
	(*MessageService_SendRequest_MultiMessageAssist)(nil),           // 221: MessageService.SendRequest.MultiMessageAssist
	(*MessageService_SendRequest_InputNotifyInfo)(nil),              // 222: MessageService.SendRequest.InputNotifyInfo
	(*MessageService_SendResponse_MessageSendInfo)(nil),             // 223: MessageService.SendResponse.MessageSendInfo
	(*MessageService_SendResponse_TransportServerInfo)(nil),         // 224: MessageService.SendResponse.TransportServerInfo
	(*MessageService_WithdrawC2CRequest_MessageInfo)(nil),           // 225: MessageService.WithdrawC2CRequest.MessageInfo
	(*MessageService_WithdrawC2CResponse_Status)(nil),               // 226: MessageService.WithdrawC2CResponse.Status
	(*MessageService_WithdrawGroupRequest_MessageInfo)(nil),         // 227: MessageService.WithdrawGroupRequest.MessageInfo
	(*MessageService_WithdrawGroupResponse_MessageResult)(nil),      // 228: MessageService.WithdrawGroupResponse.MessageResult
	(*MessageType00A6_Type00C1)(nil),                                // 229: MessageType00A6.Type00C1
	(*MessageType00A6_Type00C1_Body)(nil),                           // 230: MessageType00A6.Type00C1.Body
	(*MessageType00A6_Type00C1_NotOnlineImage)(nil),                 // 231: MessageType00A6.Type00C1.NotOnlineImage
	(*MessageType0210_Type001A)(nil),                                // 232: MessageType0210.Type001A
	(*MessageType0210_Type0027)(nil),                                // 233: MessageType0210.Type0027
	(*MessageType0210_Type008A)(nil),                                // 234: MessageType0210.Type008A
	(*MessageType0210_Type00B3)(nil),                                // 235: MessageType0210.Type00B3
	(*MessageType0210_Type001A_Body)(nil),                           // 236: MessageType0210.Type001A.Body
	(*MessageType0210_Type0027_AddGroup)(nil),                       // 237: MessageType0210.Type0027.AddGroup
	(*MessageType0210_Type0027_AppointmentNotify)(nil),              // 238: MessageType0210.Type0027.AppointmentNotify
	(*MessageType0210_Type0027_BinaryMessage)(nil),                  // 239: MessageType0210.Type0027.BinaryMessage
	(*MessageType0210_Type0027_Body)(nil),                           // 240: MessageType0210.Type0027.Body
	(*MessageType0210_Type0027_ChatMatchInfo)(nil),                  // 241: MessageType0210.Type0027.ChatMatchInfo
	(*MessageType0210_Type0027_ConfMessageRoamingFlag)(nil),         // 242: MessageType0210.Type0027.ConfMessageRoamingFlag
	(*MessageType0210_Type0027_DaRenNotify)(nil),                    // 243: MessageType0210.Type0027.DaRenNotify
	(*MessageType0210_Type0027_DeleteFriend)(nil),                   // 244: MessageType0210.Type0027.DeleteFriend
	(*MessageType0210_Type0027_DeleteGroup)(nil),                    // 245: MessageType0210.Type0027.DeleteGroup
	(*MessageType0210_Type0027_FanpaiziNotify)(nil),                 // 246: MessageType0210.Type0027.FanpaiziNotify
	(*MessageType0210_Type0027_NotifyItem)(nil),                     // 247: MessageType0210.Type0027.NotifyItem
	(*MessageType0210_Type0027_FriendCustomOnlineStatusChange)(nil), // 248: MessageType0210.Type0027.FriendCustomOnlineStatusChange
	(*MessageType0210_Type0027_FriendGroup)(nil),                    // 249: MessageType0210.Type0027.FriendGroup
	(*MessageType0210_Type0027_FriendRemark)(nil),                   // 250: MessageType0210.Type0027.FriendRemark
	(*MessageType0210_Type0027_GPS)(nil),                            // 251: MessageType0210.Type0027.GPS
	(*MessageType0210_Type0027_GroupMemberProfileInfo)(nil),         // 252: MessageType0210.Type0027.GroupMemberProfileInfo
	(*MessageType0210_Type0027_GroupProfileInfo)(nil),               // 253: MessageType0210.Type0027.GroupProfileInfo
	(*MessageType0210_Type0027_GroupSort)(nil),                      // 254: MessageType0210.Type0027.GroupSort
	(*MessageType0210_Type0027_GroupMessageRoamingFlag)(nil),        // 255: MessageType0210.Type0027.GroupMessageRoamingFlag
	(*MessageType0210_Type0027_HotFriendNotify)(nil),                // 256: MessageType0210.Type0027.HotFriendNotify
	(*MessageType0210_Type0027_MQQCampusNotify)(nil),                // 257: MessageType0210.Type0027.MQQCampusNotify
	(*MessageType0210_Type0027_ModConfProfile)(nil),                 // 258: MessageType0210.Type0027.ModConfProfile
	(*MessageType0210_Type0027_ModCustomFace)(nil),                  // 259: MessageType0210.Type0027.ModCustomFace
	(*MessageType0210_Type0027_ModFriendRoamingPriv)(nil),           // 260: MessageType0210.Type0027.ModFriendRoamingPriv
	(*MessageType0210_Type0027_ModFriendGroup)(nil),                 // 261: MessageType0210.Type0027.ModFriendGroup
	(*MessageType0210_Type0027_ModFriendRemark)(nil),                // 262: MessageType0210.Type0027.ModFriendRemark
	(*MessageType0210_Type0027_ModGroupMemberProfile)(nil),          // 263: MessageType0210.Type0027.ModGroupMemberProfile
	(*MessageType0210_Type0027_ModGroupName)(nil),                   // 264: MessageType0210.Type0027.ModGroupName
	(*MessageType0210_Type0027_ModGroupProfile)(nil),                // 265: MessageType0210.Type0027.ModGroupProfile
	(*MessageType0210_Type0027_ModGroupSort)(nil),                   // 266: MessageType0210.Type0027.ModGroupSort
	(*MessageType0210_Type0027_ModLongNick)(nil),                    // 267: MessageType0210.Type0027.ModLongNick
	(*MessageType0210_Type0027_ModProfile)(nil),                     // 268: MessageType0210.Type0027.ModProfile
	(*MessageType0210_Type0027_ModSNSGeneralInfo)(nil),              // 269: MessageType0210.Type0027.ModSNSGeneralInfo
	(*MessageType0210_Type0027_NewComeinUser)(nil),                  // 270: MessageType0210.Type0027.NewComeinUser
	(*MessageType0210_Type0027_NewComeinUserNotify)(nil),            // 271: MessageType0210.Type0027.NewComeinUserNotify
	(*MessageType0210_Type0027_NewGroup)(nil),                       // 272: MessageType0210.Type0027.NewGroup
	(*MessageType0210_Type0027_NewGroupUser)(nil),                   // 273: MessageType0210.Type0027.NewGroupUser
	(*MessageType0210_Type0027_OneRoamingPriv)(nil),                 // 274: MessageType0210.Type0027.OneRoamingPriv
	(*MessageType0210_Type0027_PraiseRankNotify)(nil),               // 275: MessageType0210.Type0027.PraiseRankNotify
	(*MessageType0210_Type0027_ProfileInfo)(nil),                    // 276: MessageType0210.Type0027.ProfileInfo
	(*MessageType0210_Type0027_PushReportDev)(nil),                  // 277: MessageType0210.Type0027.PushReportDev
	(*MessageType0210_Type0027_PushSearchDev)(nil),                  // 278: MessageType0210.Type0027.PushSearchDev
	(*MessageType0210_Type0027_QQPayPush)(nil),                      // 279: MessageType0210.Type0027.QQPayPush
	(*MessageType0210_Type0027_SNSUpateBuffer)(nil),                 // 280: MessageType0210.Type0027.SNSUpateBuffer
	(*MessageType0210_Type0027_SNSUpdateFlag)(nil),                  // 281: MessageType0210.Type0027.SNSUpdateFlag
	(*MessageType0210_Type0027_SNSUpdateItem)(nil),                  // 282: MessageType0210.Type0027.SNSUpdateItem
	(*MessageType0210_Type0027_SNSUpdateOneFlag)(nil),               // 283: MessageType0210.Type0027.SNSUpdateOneFlag
	(*MessageType0210_Type008A_Body)(nil),                           // 284: MessageType0210.Type008A.Body
	(*MessageType0210_Type008A_MessageInfo)(nil),                    // 285: MessageType0210.Type008A.MessageInfo
	(*MessageType0210_Type00B3_Body)(nil),                           // 286: MessageType0210.Type00B3.Body
	(*MessageType0210_Type00B3_AddFriendNotify)(nil),                // 287: MessageType0210.Type00B3.AddFriendNotify
}
var file_message_proto_depIdxs = []int32{
	137, // 0: MessageControl.reserve_info:type_name -> MessageControl.ReserveInfo
	34,  // 1: CommonElement.ServiceType21.c2c_confess_ctx:type_name -> CommonElement.ServiceType21.C2CConfessContext
	37,  // 2: CommonElement.ServiceType21.group_confess_message:type_name -> CommonElement.ServiceType21.GroupConfessMessage
	35,  // 3: CommonElement.ServiceType21.group_confess_ctx:type_name -> CommonElement.ServiceType21.GroupConfessContext
	26,  // 4: CommonElement.ServiceType23.message_yellow_face:type_name -> CommonElement.ServiceType33
	38,  // 5: CommonElement.ServiceType24.limit_chat_enter:type_name -> CommonElement.ServiceType24.LimitChatEnter
	39,  // 6: CommonElement.ServiceType24.limit_chat_exit:type_name -> CommonElement.ServiceType24.LimitChatExit
	102, // 7: CommonElement.ServiceType27.video_file:type_name -> IMMessageBody.VideoFile
	52,  // 8: CommonElement.ServiceType3.flash_troop_pic:type_name -> IMMessageBody.CustomFace
	77,  // 9: CommonElement.ServiceType3.flash_c2c_pic:type_name -> IMMessageBody.NotOnlineImage
	40,  // 10: CommonElement.ServiceType34.game_session:type_name -> CommonElement.ServiceType34.GameSession
	41,  // 11: CommonElement.ServiceType4.st_story_aio_obj_message:type_name -> CommonElement.ServiceType4.StoryAioObjMessage
	53,  // 12: CommonElement.ServiceType8.wifi_deliver_gift_message:type_name -> IMMessageBody.DeliverGiftMessage
	36,  // 13: CommonElement.ServiceType21.GroupConfessMessage.confess_items:type_name -> CommonElement.ServiceType21.GroupConfessItem
	97,  // 14: IMMessageBody.Element.text:type_name -> IMMessageBody.Text
	60,  // 15: IMMessageBody.Element.face:type_name -> IMMessageBody.Face
	78,  // 16: IMMessageBody.Element.online_image:type_name -> IMMessageBody.OnlineImage
	77,  // 17: IMMessageBody.Element.not_online_image:type_name -> IMMessageBody.NotOnlineImage
	101, // 18: IMMessageBody.Element.transport:type_name -> IMMessageBody.TransportElement
	71,  // 19: IMMessageBody.Element.market_face:type_name -> IMMessageBody.MarketFace
	56,  // 20: IMMessageBody.Element.element_flags:type_name -> IMMessageBody.ElementFlags
	52,  // 21: IMMessageBody.Element.custom_face:type_name -> IMMessageBody.CustomFace
	57,  // 22: IMMessageBody.Element.element_flags2:type_name -> IMMessageBody.ElementFlags2
	61,  // 23: IMMessageBody.Element.fun_face:type_name -> IMMessageBody.FunFace
	93,  // 24: IMMessageBody.Element.secret_file:type_name -> IMMessageBody.SecretFileMessage
	91,  // 25: IMMessageBody.Element.rich_message:type_name -> IMMessageBody.RichMessage
	64,  // 26: IMMessageBody.Element.group_file:type_name -> IMMessageBody.GroupFile
	85,  // 27: IMMessageBody.Element.public_group:type_name -> IMMessageBody.PublicGroup
	72,  // 28: IMMessageBody.Element.market_transport:type_name -> IMMessageBody.MarketTransport
	58,  // 29: IMMessageBody.Element.extra_info:type_name -> IMMessageBody.ExtraInfo
	94,  // 30: IMMessageBody.Element.shake_window:type_name -> IMMessageBody.ShakeWindow
	84,  // 31: IMMessageBody.Element.public_account:type_name -> IMMessageBody.PublicAccount
	102, // 32: IMMessageBody.Element.video_file:type_name -> IMMessageBody.VideoFile
	98,  // 33: IMMessageBody.Element.tips_info:type_name -> IMMessageBody.TipsInfo
	42,  // 34: IMMessageBody.Element.anonymous_group_message:type_name -> IMMessageBody.AnonymousGroupMessage
	86,  // 35: IMMessageBody.Element.qq_live_old:type_name -> IMMessageBody.QQLiveOld
	67,  // 36: IMMessageBody.Element.life_online:type_name -> IMMessageBody.LifeOnlineAccount
	89,  // 37: IMMessageBody.Element.qqwallet_message:type_name -> IMMessageBody.QQWalletMessage
	50,  // 38: IMMessageBody.Element.crm:type_name -> IMMessageBody.CrmElement
	49,  // 39: IMMessageBody.Element.conference_tips_info:type_name -> IMMessageBody.ConferenceTipsInfo
	90,  // 40: IMMessageBody.Element.redbag_info:type_name -> IMMessageBody.RedBagInfo
	70,  // 41: IMMessageBody.Element.low_version_tips:type_name -> IMMessageBody.LowVersionTips
	75,  // 42: IMMessageBody.Element.near_by_message:type_name -> IMMessageBody.NearByMessageType
	51,  // 43: IMMessageBody.Element.custom:type_name -> IMMessageBody.CustomElement
	104, // 44: IMMessageBody.Element.location_info:type_name -> IMMessageBody.LocationInfo
	83,  // 45: IMMessageBody.Element.public_account_info:type_name -> IMMessageBody.PublicAccountInfo
	95,  // 46: IMMessageBody.Element.small_emoji:type_name -> IMMessageBody.SmallEmoji
	59,  // 47: IMMessageBody.Element.fsj_message:type_name -> IMMessageBody.FSJMessageElement
	44,  // 48: IMMessageBody.Element.ark_app:type_name -> IMMessageBody.ArkAppElement
	62,  // 49: IMMessageBody.Element.general_flags:type_name -> IMMessageBody.GeneralFlags
	52,  // 50: IMMessageBody.Element.hc_flash_pic:type_name -> IMMessageBody.CustomFace
	53,  // 51: IMMessageBody.Element.deliver_gift_message:type_name -> IMMessageBody.DeliverGiftMessage
	46,  // 52: IMMessageBody.Element.bitapp_message:type_name -> IMMessageBody.BitAppMessage
	79,  // 53: IMMessageBody.Element.open_qq_data:type_name -> IMMessageBody.OpenQQData
	43,  // 54: IMMessageBody.Element.apollo_message:type_name -> IMMessageBody.ApolloActionMessage
	66,  // 55: IMMessageBody.Element.group_pub_acc_info:type_name -> IMMessageBody.GroupPublicAccountInfo
	47,  // 56: IMMessageBody.Element.blessing_message:type_name -> IMMessageBody.BlessingMessage
	96,  // 57: IMMessageBody.Element.source_message:type_name -> IMMessageBody.SourceMessage
	69,  // 58: IMMessageBody.Element.lola_message:type_name -> IMMessageBody.LolaMessage
	63,  // 59: IMMessageBody.Element.group_business_message:type_name -> IMMessageBody.GroupBusinessMessage
	103, // 60: IMMessageBody.Element.message_workflow_notify:type_name -> IMMessageBody.WorkflowNotifyMessage
	80,  // 61: IMMessageBody.Element.pat:type_name -> IMMessageBody.PatsElement
	65,  // 62: IMMessageBody.Element.group_post:type_name -> IMMessageBody.GroupPostElement
	68,  // 63: IMMessageBody.Element.light_app:type_name -> IMMessageBody.LightAppElement
	54,  // 64: IMMessageBody.Element.eim_info:type_name -> IMMessageBody.EIMInfo
	48,  // 65: IMMessageBody.Element.common:type_name -> IMMessageBody.CommonElement
	105, // 66: IMMessageBody.ElementFlags2.items:type_name -> IMMessageBody.ElementFlags2.Instance
	105, // 67: IMMessageBody.ElementFlags2.src_inst:type_name -> IMMessageBody.ElementFlags2.Instance
	81,  // 68: IMMessageBody.ElementFlags2.pc_support_define:type_name -> IMMessageBody.PCSupportDefine
	107, // 69: IMMessageBody.FunFace.message_turntable:type_name -> IMMessageBody.FunFace.Turntable
	106, // 70: IMMessageBody.FunFace.message_bomb:type_name -> IMMessageBody.FunFace.Bomb
	92,  // 71: IMMessageBody.MessageBody.rich_text:type_name -> IMMessageBody.RichText
	76,  // 72: IMMessageBody.MessageBodySubType4.not_online_file:type_name -> IMMessageBody.NotOnlineFile
	88,  // 73: IMMessageBody.QQWalletAIOBody.sender:type_name -> IMMessageBody.QQWalletAIOElement
	88,  // 74: IMMessageBody.QQWalletAIOBody.receiver:type_name -> IMMessageBody.QQWalletAIOElement
	87,  // 75: IMMessageBody.QQWalletMessage.aio_body:type_name -> IMMessageBody.QQWalletAIOBody
	45,  // 76: IMMessageBody.RichText.attribute:type_name -> IMMessageBody.Attribute
	55,  // 77: IMMessageBody.RichText.elements:type_name -> IMMessageBody.Element
	76,  // 78: IMMessageBody.RichText.not_online_file:type_name -> IMMessageBody.NotOnlineFile
	82,  // 79: IMMessageBody.RichText.ptt:type_name -> IMMessageBody.PTT
	99,  // 80: IMMessageBody.RichText.temp_ptt:type_name -> IMMessageBody.TempPTT
	100, // 81: IMMessageBody.RichText.transport_211_tmp_message:type_name -> IMMessageBody.Transport211TempMessage
	77,  // 82: IMMessageBody.SecretFileMessage.not_online_image:type_name -> IMMessageBody.NotOnlineImage
	57,  // 83: IMMessageBody.SecretFileMessage.elem_flags2:type_name -> IMMessageBody.ElementFlags2
	55,  // 84: IMMessageBody.SourceMessage.elems:type_name -> IMMessageBody.Element
	109, // 85: IMMessageHead.Head.msg_cs_head:type_name -> IMMessageHead.CSHead
	117, // 86: IMMessageHead.Head.msg_s2c_head:type_name -> IMMessageHead.S2CHead
	112, // 87: IMMessageHead.Head.msg_httpconn_head:type_name -> IMMessageHead.HttpConnHead
	115, // 88: IMMessageHead.Head.msg_login_sig:type_name -> IMMessageHead.LoginSig
	110, // 89: IMMessageHead.Head.msg_delta_head:type_name -> IMMessageHead.DeltaHead
	108, // 90: IMMessageHead.Head.msg_c2c_head:type_name -> IMMessageHead.C2CHead
	118, // 91: IMMessageHead.Head.msg_sconn_head:type_name -> IMMessageHead.SConnHead
	113, // 92: IMMessageHead.Head.msg_inst_ctrl:type_name -> IMMessageHead.InstCtrl
	116, // 93: IMMessageHead.HttpConnHead.msg_redirect:type_name -> IMMessageHead.RedirectMsg
	119, // 94: IMMessageHead.HttpConnHead.msg_oidbhead:type_name -> IMMessageHead.TransOidbHead
	114, // 95: IMMessageHead.InstCtrl.msg_send_to_inst:type_name -> IMMessageHead.InstInfo
	114, // 96: IMMessageHead.InstCtrl.msg_exclude_inst:type_name -> IMMessageHead.InstInfo
	114, // 97: IMMessageHead.InstCtrl.msg_from_inst:type_name -> IMMessageHead.InstInfo
	120, // 98: IMReceipt.ReceiptRequest.message_info:type_name -> IMReceipt.MessageInfo
	121, // 99: IMReceipt.ReceiptResponse.receipt_info:type_name -> IMReceipt.ReceiptInfo
	134, // 100: MessageCommon.AppShareInfo.resource:type_name -> MessageCommon.PluginInfo
	131, // 101: MessageCommon.Message.message_head:type_name -> MessageCommon.MessageHead
	126, // 102: MessageCommon.Message.content_head:type_name -> MessageCommon.ContentHead
	73,  // 103: MessageCommon.Message.message_body:type_name -> IMMessageBody.MessageBody
	124, // 104: MessageCommon.Message.app_share_info:type_name -> MessageCommon.AppShareInfo
	125, // 105: MessageCommon.MessageHead.c2c_temp_message_head:type_name -> MessageCommon.C2CTempMessageHead
	129, // 106: MessageCommon.MessageHead.group_info:type_name -> MessageCommon.GroupInfo
	127, // 107: MessageCommon.MessageHead.discuss_info:type_name -> MessageCommon.DiscussInfo
	133, // 108: MessageCommon.MessageHead.mutil_trans_head:type_name -> MessageCommon.MutilTransportHead
	113, // 109: MessageCommon.MessageHead.message_inst_ctrl:type_name -> IMMessageHead.InstCtrl
	128, // 110: MessageCommon.MessageHead.ext_group_key_info:type_name -> MessageCommon.ExtraGroupKeyInfo
	130, // 111: MessageCommon.UinPairMessage.items:type_name -> MessageCommon.Message
	143, // 112: MessageService.RoutingHead.c2c:type_name -> MessageService.C2C
	147, // 113: MessageService.RoutingHead.group:type_name -> MessageService.Group
	148, // 114: MessageService.RoutingHead.group_temp:type_name -> MessageService.GroupTemp
	145, // 115: MessageService.RoutingHead.discuss:type_name -> MessageService.Discuss
	146, // 116: MessageService.RoutingHead.discuss_temp:type_name -> MessageService.DiscussTemp
	162, // 117: MessageService.RoutingHead.wpa_temp:type_name -> MessageService.WPATemp
	156, // 118: MessageService.RoutingHead.secret_file:type_name -> MessageService.SecretFileHead
	152, // 119: MessageService.RoutingHead.public_plat:type_name -> MessageService.PublicPlat
	159, // 120: MessageService.RoutingHead.trans_message:type_name -> MessageService.TransportMessage
	139, // 121: MessageService.RoutingHead.address_list:type_name -> MessageService.AddressListTemp
	154, // 122: MessageService.RoutingHead.rich_status_temp:type_name -> MessageService.RichStatusTemp
	158, // 123: MessageService.RoutingHead.transport_cmd:type_name -> MessageService.TransportCmd
	138, // 124: MessageService.RoutingHead.accost_temp:type_name -> MessageService.AccostTemp
	151, // 125: MessageService.RoutingHead.pub_group_temp:type_name -> MessageService.PublicGroupTemp
	157, // 126: MessageService.RoutingHead.trans_0x211:type_name -> MessageService.Transport0x211
	142, // 127: MessageService.RoutingHead.business_wpa_temp:type_name -> MessageService.BusinessWPATemp
	140, // 128: MessageService.RoutingHead.auth_temp:type_name -> MessageService.AuthTemp
	141, // 129: MessageService.RoutingHead.business_temp:type_name -> MessageService.BusinessTemp
	153, // 130: MessageService.RoutingHead.qq_querybusiness_temp:type_name -> MessageService.QQQueryBusinessTemp
	150, // 131: MessageService.RoutingHead.nearby_dating_temp:type_name -> MessageService.NearByDatingTemp
	149, // 132: MessageService.RoutingHead.nearby_assistant_temp:type_name -> MessageService.NearByAssistantTemp
	144, // 133: MessageService.RoutingHead.commom_temp:type_name -> MessageService.CommonTemp
	230, // 134: MessageService.SecretFileHead.secret_file_message:type_name -> MessageType00A6.Type00C1.Body
	236, // 135: MessageService.SecretFileHead.secret_file_status:type_name -> MessageType0210.Type001A.Body
	113, // 136: MessageService.Transport0x211.inst_ctrl:type_name -> IMMessageHead.InstCtrl
	210, // 137: MessageService.DeleteRequest.items:type_name -> MessageService.DeleteRequest.MessageItem
	211, // 138: MessageService.DeleteRoamingRequest.c2c:type_name -> MessageService.DeleteRoamingRequest.C2CMessage
	213, // 139: MessageService.DeleteRoamingRequest.group:type_name -> MessageService.DeleteRoamingRequest.GroupMessage
	212, // 140: MessageService.DeleteRoamingRequest.discuss:type_name -> MessageService.DeleteRoamingRequest.DiscussMessage
	136, // 141: MessageService.GetResponse.uin_pair_messages:type_name -> MessageCommon.UinPairMessage
	130, // 142: MessageService.GetDiscussResponse.item:type_name -> MessageCommon.Message
	130, // 143: MessageService.GetGroupResponse.item:type_name -> MessageCommon.Message
	130, // 144: MessageService.GetRoamingOneDayResponse.item:type_name -> MessageCommon.Message
	130, // 145: MessageService.GetRoamingResponse.item:type_name -> MessageCommon.Message
	214, // 146: MessageService.GetUnreadDiscussRequest.discuss_info_req:type_name -> MessageService.GetUnreadDiscussRequest.DiscussInfoReq
	215, // 147: MessageService.GetUnreadDiscussResponse.discuss_info_resp:type_name -> MessageService.GetUnreadDiscussResponse.DiscussInfoResp
	216, // 148: MessageService.GetUnreadGroupRequest.items:type_name -> MessageService.GetUnreadGroupRequest.GroupInfoReq
	217, // 149: MessageService.GetUnreadGroupResponse.items:type_name -> MessageService.GetUnreadGroupResponse.GroupInfoResp
	218, // 150: MessageService.GetUnreadThirdQQRequest.thirdqq_req_info:type_name -> MessageService.GetUnreadThirdQQRequest.ThirdQQReqInfo
	219, // 151: MessageService.GetUnreadThirdQQResponse.thirdqq_resp_info:type_name -> MessageService.GetUnreadThirdQQResponse.ThirdQQRespInfo
	180, // 152: MessageService.GetUnreadRequest.c2c:type_name -> MessageService.GetUnreadC2CRequest
	178, // 153: MessageService.GetUnreadRequest.bind_uin:type_name -> MessageService.GetUnreadBindUinRequest
	184, // 154: MessageService.GetUnreadRequest.group:type_name -> MessageService.GetUnreadGroupRequest
	182, // 155: MessageService.GetUnreadRequest.discuss:type_name -> MessageService.GetUnreadDiscussRequest
	186, // 156: MessageService.GetUnreadRequest.third_qq:type_name -> MessageService.GetUnreadThirdQQRequest
	181, // 157: MessageService.GetUnreadResponse.c2c:type_name -> MessageService.GetUnreadC2CResponse
	179, // 158: MessageService.GetUnreadResponse.bind_uin:type_name -> MessageService.GetUnreadBindUinResponse
	185, // 159: MessageService.GetUnreadResponse.group:type_name -> MessageService.GetUnreadGroupResponse
	183, // 160: MessageService.GetUnreadResponse.discuss:type_name -> MessageService.GetUnreadDiscussResponse
	187, // 161: MessageService.GetUnreadResponse.third_qq:type_name -> MessageService.GetUnreadThirdQQResponse
	220, // 162: MessageService.ReportReadedC2CRequest.items:type_name -> MessageService.ReportReadedC2CRequest.UinPairReadInfo
	196, // 163: MessageService.ReportReadedRequest.group:type_name -> MessageService.ReportReadedGroupRequest
	194, // 164: MessageService.ReportReadedRequest.c:type_name -> MessageService.ReportReadedDiscussRequest
	192, // 165: MessageService.ReportReadedRequest.c2c:type_name -> MessageService.ReportReadedC2CRequest
	190, // 166: MessageService.ReportReadedRequest.bind_uin:type_name -> MessageService.ReportReadedBindUinRequest
	197, // 167: MessageService.ReportReadedResponse.group:type_name -> MessageService.ReportReadedGroupResponse
	195, // 168: MessageService.ReportReadedResponse.discuss:type_name -> MessageService.ReportReadedDiscussResponse
	193, // 169: MessageService.ReportReadedResponse.c2c:type_name -> MessageService.ReportReadedC2CResponse
	191, // 170: MessageService.ReportReadedResponse.bind_uin:type_name -> MessageService.ReportReadedBindUinResponse
	130, // 171: MessageService.SearchRoamingResponse.item:type_name -> MessageCommon.Message
	155, // 172: MessageService.SendRequest.routing_head:type_name -> MessageService.RoutingHead
	126, // 173: MessageService.SendRequest.content_head:type_name -> MessageCommon.ContentHead
	73,  // 174: MessageService.SendRequest.message_body:type_name -> IMMessageBody.MessageBody
	124, // 175: MessageService.SendRequest.app_share:type_name -> MessageCommon.AppShareInfo
	221, // 176: MessageService.SendRequest.multi_msg_assist:type_name -> MessageService.SendRequest.MultiMessageAssist
	222, // 177: MessageService.SendRequest.input_notify_info:type_name -> MessageService.SendRequest.InputNotifyInfo
	5,   // 178: MessageService.SendRequest.message_control:type_name -> MessageControl
	122, // 179: MessageService.SendRequest.receipt_request:type_name -> IMReceipt.ReceiptRequest
	223, // 180: MessageService.SendResponse.msg_send_info:type_name -> MessageService.SendResponse.MessageSendInfo
	224, // 181: MessageService.SendResponse.trans_svr_info:type_name -> MessageService.SendResponse.TransportServerInfo
	123, // 182: MessageService.SendResponse.receipt_response:type_name -> IMReceipt.ReceiptResponse
	225, // 183: MessageService.WithdrawC2CRequest.items:type_name -> MessageService.WithdrawC2CRequest.MessageInfo
	226, // 184: MessageService.WithdrawC2CResponse.items:type_name -> MessageService.WithdrawC2CResponse.Status
	163, // 185: MessageService.WithdrawC2CResponse.wording:type_name -> MessageService.WithdrawWordingInfo
	227, // 186: MessageService.WithdrawGroupRequest.items:type_name -> MessageService.WithdrawGroupRequest.MessageInfo
	228, // 187: MessageService.WithdrawGroupResponse.failed_items:type_name -> MessageService.WithdrawGroupResponse.MessageResult
	163, // 188: MessageService.WithdrawGroupResponse.wording:type_name -> MessageService.WithdrawWordingInfo
	204, // 189: MessageService.WithdrawRequest.c2c:type_name -> MessageService.WithdrawC2CRequest
	206, // 190: MessageService.WithdrawRequest.group:type_name -> MessageService.WithdrawGroupRequest
	205, // 191: MessageService.WithdrawResponse.c2c:type_name -> MessageService.WithdrawC2CResponse
	207, // 192: MessageService.WithdrawResponse.group:type_name -> MessageService.WithdrawGroupResponse
	155, // 193: MessageService.SendRequest.MultiMessageAssist.repeated_routing:type_name -> MessageService.RoutingHead
	155, // 194: MessageService.WithdrawC2CRequest.MessageInfo.routing_head:type_name -> MessageService.RoutingHead
	225, // 195: MessageService.WithdrawC2CResponse.Status.item:type_name -> MessageService.WithdrawC2CRequest.MessageInfo
	231, // 196: MessageType00A6.Type00C1.Body.not_online_image:type_name -> MessageType00A6.Type00C1.NotOnlineImage
	247, // 197: MessageType0210.Type0027.Body.items:type_name -> MessageType0210.Type0027.NotifyItem
	237, // 198: MessageType0210.Type0027.NotifyItem.add_group:type_name -> MessageType0210.Type0027.AddGroup
	245, // 199: MessageType0210.Type0027.NotifyItem.delete_group:type_name -> MessageType0210.Type0027.DeleteGroup
	264, // 200: MessageType0210.Type0027.NotifyItem.mod_group_name:type_name -> MessageType0210.Type0027.ModGroupName
	266, // 201: MessageType0210.Type0027.NotifyItem.mod_group_sort:type_name -> MessageType0210.Type0027.ModGroupSort
	261, // 202: MessageType0210.Type0027.NotifyItem.mod_friend_group:type_name -> MessageType0210.Type0027.ModFriendGroup
	268, // 203: MessageType0210.Type0027.NotifyItem.mod_profile:type_name -> MessageType0210.Type0027.ModProfile
	262, // 204: MessageType0210.Type0027.NotifyItem.mod_friend_remark:type_name -> MessageType0210.Type0027.ModFriendRemark
	267, // 205: MessageType0210.Type0027.NotifyItem.mod_long_nick:type_name -> MessageType0210.Type0027.ModLongNick
	259, // 206: MessageType0210.Type0027.NotifyItem.mod_custom_face:type_name -> MessageType0210.Type0027.ModCustomFace
	265, // 207: MessageType0210.Type0027.NotifyItem.mod_group_profile:type_name -> MessageType0210.Type0027.ModGroupProfile
	263, // 208: MessageType0210.Type0027.NotifyItem.mod_group_member_profile:type_name -> MessageType0210.Type0027.ModGroupMemberProfile
	244, // 209: MessageType0210.Type0027.NotifyItem.del_friend:type_name -> MessageType0210.Type0027.DeleteFriend
	260, // 210: MessageType0210.Type0027.NotifyItem.roam_priv:type_name -> MessageType0210.Type0027.ModFriendRoamingPriv
	255, // 211: MessageType0210.Type0027.NotifyItem.group_msg_roam_flag:type_name -> MessageType0210.Type0027.GroupMessageRoamingFlag
	242, // 212: MessageType0210.Type0027.NotifyItem.conf_msg_roam_flag:type_name -> MessageType0210.Type0027.ConfMessageRoamingFlag
	267, // 213: MessageType0210.Type0027.NotifyItem.mod_rich_long_nick:type_name -> MessageType0210.Type0027.ModLongNick
	239, // 214: MessageType0210.Type0027.NotifyItem.bin_pkg:type_name -> MessageType0210.Type0027.BinaryMessage
	269, // 215: MessageType0210.Type0027.NotifyItem.mod_friend_rings:type_name -> MessageType0210.Type0027.ModSNSGeneralInfo
	258, // 216: MessageType0210.Type0027.NotifyItem.mod_conf_profile:type_name -> MessageType0210.Type0027.ModConfProfile
	281, // 217: MessageType0210.Type0027.NotifyItem.mod_friend_flag:type_name -> MessageType0210.Type0027.SNSUpdateFlag
	238, // 218: MessageType0210.Type0027.NotifyItem.appointment_notify:type_name -> MessageType0210.Type0027.AppointmentNotify
	243, // 219: MessageType0210.Type0027.NotifyItem.daren_notify:type_name -> MessageType0210.Type0027.DaRenNotify
	271, // 220: MessageType0210.Type0027.NotifyItem.new_comein_user_notify:type_name -> MessageType0210.Type0027.NewComeinUserNotify
	278, // 221: MessageType0210.Type0027.NotifyItem.push_search_dev:type_name -> MessageType0210.Type0027.PushSearchDev
	277, // 222: MessageType0210.Type0027.NotifyItem.push_report_dev:type_name -> MessageType0210.Type0027.PushReportDev
	279, // 223: MessageType0210.Type0027.NotifyItem.qq_pay_push:type_name -> MessageType0210.Type0027.QQPayPush
	256, // 224: MessageType0210.Type0027.NotifyItem.hot_friend_notify:type_name -> MessageType0210.Type0027.HotFriendNotify
	275, // 225: MessageType0210.Type0027.NotifyItem.praise_rank_notify:type_name -> MessageType0210.Type0027.PraiseRankNotify
	257, // 226: MessageType0210.Type0027.NotifyItem.campus_notify:type_name -> MessageType0210.Type0027.MQQCampusNotify
	267, // 227: MessageType0210.Type0027.NotifyItem.mod_rich_long_nick_ex:type_name -> MessageType0210.Type0027.ModLongNick
	241, // 228: MessageType0210.Type0027.NotifyItem.chat_match_info:type_name -> MessageType0210.Type0027.ChatMatchInfo
	248, // 229: MessageType0210.Type0027.NotifyItem.frd_custom_online_status_change:type_name -> MessageType0210.Type0027.FriendCustomOnlineStatusChange
	246, // 230: MessageType0210.Type0027.NotifyItem.fanpanzi_notify:type_name -> MessageType0210.Type0027.FanpaiziNotify
	276, // 231: MessageType0210.Type0027.ModConfProfile.items:type_name -> MessageType0210.Type0027.ProfileInfo
	274, // 232: MessageType0210.Type0027.ModFriendRoamingPriv.items:type_name -> MessageType0210.Type0027.OneRoamingPriv
	249, // 233: MessageType0210.Type0027.ModFriendGroup.items:type_name -> MessageType0210.Type0027.FriendGroup
	250, // 234: MessageType0210.Type0027.ModFriendRemark.items:type_name -> MessageType0210.Type0027.FriendRemark
	252, // 235: MessageType0210.Type0027.ModGroupMemberProfile.items:type_name -> MessageType0210.Type0027.GroupMemberProfileInfo
	253, // 236: MessageType0210.Type0027.ModGroupProfile.items:type_name -> MessageType0210.Type0027.GroupProfileInfo
	254, // 237: MessageType0210.Type0027.ModGroupSort.items:type_name -> MessageType0210.Type0027.GroupSort
	276, // 238: MessageType0210.Type0027.ModProfile.items:type_name -> MessageType0210.Type0027.ProfileInfo
	280, // 239: MessageType0210.Type0027.ModSNSGeneralInfo.items:type_name -> MessageType0210.Type0027.SNSUpateBuffer
	270, // 240: MessageType0210.Type0027.NewComeinUserNotify.new_comein_user:type_name -> MessageType0210.Type0027.NewComeinUser
	272, // 241: MessageType0210.Type0027.NewComeinUserNotify.new_group:type_name -> MessageType0210.Type0027.NewGroup
	273, // 242: MessageType0210.Type0027.NewComeinUserNotify.new_group_user:type_name -> MessageType0210.Type0027.NewGroupUser
	251, // 243: MessageType0210.Type0027.PushSearchDev.gps_info:type_name -> MessageType0210.Type0027.GPS
	282, // 244: MessageType0210.Type0027.SNSUpateBuffer.items:type_name -> MessageType0210.Type0027.SNSUpdateItem
	283, // 245: MessageType0210.Type0027.SNSUpdateFlag.items:type_name -> MessageType0210.Type0027.SNSUpdateOneFlag
	285, // 246: MessageType0210.Type008A.Body.items:type_name -> MessageType0210.Type008A.MessageInfo
	163, // 247: MessageType0210.Type008A.MessageInfo.wording:type_name -> MessageService.WithdrawWordingInfo
	287, // 248: MessageType0210.Type00B3.Body.notify:type_name -> MessageType0210.Type00B3.AddFriendNotify
	249, // [249:249] is the sub-list for method output_type
	249, // [249:249] is the sub-list for method input_type
	249, // [249:249] is the sub-list for extension type_name
	249, // [249:249] is the sub-list for extension extendee
	0,   // [0:249] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType00A6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType11); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType13); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType14); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType15); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType16); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType18); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType19); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType20); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType21); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType23); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType24); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType27); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType29); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType31); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType33); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType34); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType35); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType37); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType8); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType9); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType21_C2CConfessContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType21_GroupConfessContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType21_GroupConfessItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType21_GroupConfessMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType24_LimitChatEnter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType24_LimitChatExit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType34_GameSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonElement_ServiceType4_StoryAioObjMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_AnonymousGroupMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_ApolloActionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_ArkAppElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_BitAppMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_BlessingMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_CommonElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_ConferenceTipsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_CrmElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_CustomElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_CustomFace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_DeliverGiftMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_EIMInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_Element); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_ElementFlags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_ElementFlags2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_ExtraInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_FSJMessageElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_Face); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_FunFace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_GeneralFlags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_GroupBusinessMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_GroupFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_GroupPostElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_GroupPublicAccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_LifeOnlineAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_LightAppElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_LolaMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_LowVersionTips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_MarketFace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_MarketTransport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_MessageBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_MessageBodySubType4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_NearByMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_NotOnlineFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_NotOnlineImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_OnlineImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_OpenQQData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_PatsElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_PCSupportDefine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_PTT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_PublicAccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_PublicAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_PublicGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_QQLiveOld); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_QQWalletAIOBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_QQWalletAIOElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_QQWalletMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_RedBagInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_RichMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_RichText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_SecretFileMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_ShakeWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_SmallEmoji); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_SourceMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_TipsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_TempPTT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_Transport211TempMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_TransportElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_VideoFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_WorkflowNotifyMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_LocationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_ElementFlags2_Instance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_FunFace_Bomb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody_FunFace_Turntable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageHead_C2CHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageHead_CSHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageHead_DeltaHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageHead_Head); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageHead_HttpConnHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageHead_InstCtrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageHead_InstInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageHead_LoginSig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageHead_RedirectMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageHead_S2CHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageHead_SConnHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageHead_TransOidbHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMReceipt_MessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMReceipt_ReceiptInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMReceipt_ReceiptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMReceipt_ReceiptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCommon_AppShareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCommon_C2CTempMessageHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCommon_ContentHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCommon_DiscussInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCommon_ExtraGroupKeyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCommon_GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCommon_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCommon_MessageHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCommon_MessageType0210); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCommon_MutilTransportHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCommon_PluginInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCommon_Uin2Nick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageCommon_UinPairMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageControl_ReserveInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_AccostTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_AddressListTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_AuthTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_BusinessTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_BusinessWPATemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_C2C); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_CommonTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_Discuss); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_DiscussTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GroupTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_NearByAssistantTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_NearByDatingTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_PublicGroupTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_PublicPlat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_QQQueryBusinessTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_RichStatusTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_RoutingHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_SecretFileHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_Transport0X211); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_TransportCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_TransportMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_TransportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_TransportResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_WPATemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_WithdrawWordingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_DeleteRoamingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_DeleteRoamingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetDiscussRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetDiscussResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetRoamingOneDayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetRoamingOneDayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetRoamingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetRoamingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadBindUinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadBindUinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadC2CRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadC2CResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadDiscussRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadDiscussResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadThirdQQRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadThirdQQResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_ReportReadedBindUinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_ReportReadedBindUinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_ReportReadedC2CRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_ReportReadedC2CResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_ReportReadedDiscussRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_ReportReadedDiscussResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_ReportReadedGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_ReportReadedGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_ReportReadedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_ReportReadedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_SearchRoamingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_SearchRoamingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_SendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_SendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_WithdrawC2CRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_WithdrawC2CResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_WithdrawGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_WithdrawGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_WithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_WithdrawResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_DeleteRequest_MessageItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_DeleteRoamingRequest_C2CMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_DeleteRoamingRequest_DiscussMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_DeleteRoamingRequest_GroupMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadDiscussRequest_DiscussInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadDiscussResponse_DiscussInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadGroupRequest_GroupInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadGroupResponse_GroupInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadThirdQQRequest_ThirdQQReqInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_GetUnreadThirdQQResponse_ThirdQQRespInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[220].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_ReportReadedC2CRequest_UinPairReadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[221].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_SendRequest_MultiMessageAssist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[222].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_SendRequest_InputNotifyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[223].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_SendResponse_MessageSendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_SendResponse_TransportServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[225].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_WithdrawC2CRequest_MessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[226].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_WithdrawC2CResponse_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[227].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_WithdrawGroupRequest_MessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[228].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageService_WithdrawGroupResponse_MessageResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[229].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType00A6_Type00C1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[230].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType00A6_Type00C1_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[231].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType00A6_Type00C1_NotOnlineImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[232].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type001A); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[233].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[234].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type008A); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[235].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type00B3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[236].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type001A_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[237].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_AddGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[238].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_AppointmentNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[239].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_BinaryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[240].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[241].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_ChatMatchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[242].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_ConfMessageRoamingFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[243].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_DaRenNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[244].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_DeleteFriend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[245].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_DeleteGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[246].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_FanpaiziNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[247].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_NotifyItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[248].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_FriendCustomOnlineStatusChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[249].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_FriendGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[250].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_FriendRemark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[251].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_GPS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[252].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_GroupMemberProfileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[253].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_GroupProfileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[254].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_GroupSort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[255].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_GroupMessageRoamingFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[256].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_HotFriendNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[257].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_MQQCampusNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[258].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_ModConfProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[259].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_ModCustomFace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[260].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_ModFriendRoamingPriv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[261].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_ModFriendGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[262].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_ModFriendRemark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[263].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_ModGroupMemberProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[264].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_ModGroupName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[265].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_ModGroupProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[266].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_ModGroupSort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[267].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_ModLongNick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[268].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_ModProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[269].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_ModSNSGeneralInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[270].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_NewComeinUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[271].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_NewComeinUserNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[272].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_NewGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[273].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_NewGroupUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[274].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_OneRoamingPriv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[275].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_PraiseRankNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[276].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_ProfileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[277].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_PushReportDev); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[278].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_PushSearchDev); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[279].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_QQPayPush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[280].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_SNSUpateBuffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[281].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_SNSUpdateFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[282].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_SNSUpdateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[283].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type0027_SNSUpdateOneFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[284].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type008A_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[285].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type008A_MessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[286].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type00B3_Body); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[287].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType0210_Type00B3_AddFriendNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_proto_msgTypes[55].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   288,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
