syntax = "proto3";

option go_package = "./;pb";

import "message_body.proto";

/* message common */

message AppShareInfo {
  optional uint32 id = 1;
  optional bytes cookie = 2;
  optional PluginInfo resource = 3;
}

message C2CTempMessageHead {
  optional uint32 c2cType = 1;
  optional uint32 serviceType = 2;
  optional uint64 groupUin = 3;
  optional uint64 groupCode = 4;
  optional bytes sig = 5;
  optional uint32 sigType = 6;
  optional string fromPhone = 7;
  optional string toPhone = 8;
  optional uint32 lockDisplay = 9;
  optional uint32 directionFlag = 10;
}

message ContentHead {
  optional uint32 pkgNum = 1;
  optional uint32 pkgIndex = 2;
  optional uint32 divSeq = 3;
  optional uint32 autoReply = 4;
}

message DiscussInfo {
  optional uint64 discussUin = 1;
  optional uint32 discussType = 2;
  optional uint64 discussInfoSeq = 3;
  optional bytes discussRemark = 4;
}

message ExtraGroupKeyInfo {
  uint32 current_max_seq = 1;
  uint64 current_time = 2;
  uint32 operate_by_parents = 3;
  bytes extra_group_info = 4;
}

message GroupInfo {
  optional uint64 groupCode = 1;
  optional uint32 groupType = 2;
  optional uint64 groupInfoSeq = 3;
  optional bytes groupCard = 4;
  optional bytes groupRank = 5;
  optional uint32 groupLevel = 6;
}

message Message {
  MessageHead messageHead = 1;
  ContentHead contentHead = 2;
  MessageBody messageBody = 3;
  optional AppShareInfo appShareInfo = 4;
}

message MessageHead {
  uint64 fromUin = 1;
  uint64 toUin = 2;
  uint32 messageType = 3;
  uint32 c2cCmd = 4;
  uint32 messageSeq = 5;
  int64 messageTime = 6;
  uint64 messageUid = 7;
  optional C2CTempMessageHead c2cTempMessageHead = 8;
  optional GroupInfo groupInfo = 9;
  optional uint32 fromAppId = 10;
  optional uint32 fromInstId = 11;
  optional uint32 userActive = 12;
  optional DiscussInfo discussInfo = 13;
  optional string fromNick = 14;
  optional uint64 authUin = 15;
  optional string authNick = 16;
  optional uint32 messageFlag = 17;
  optional string authRemark = 18;
  optional string groupName = 19;
  optional MutilTransHead mutilTransHead = 20;
}

message MessageType0x210 {
  uint32 type = 1;
  bytes content = 2;
}

message MessageSubType0x8aRequest {
  repeated Info infos = 1;
  optional uint32 appId = 2;
  optional uint32 instId = 3;
  optional uint32 flag = 4;
  optional bytes reserved = 5;
  message Info {
    optional uint64 fromUin = 1;
    optional uint64 toUin = 2;
    optional uint32 messageSeq = 3;
    optional uint64 messageUid = 4;
    optional uint64 messageTime = 5;
    optional uint32 messageRandom = 6;
    optional uint32 pkgNum = 7;
    optional uint32 pkgIndex = 8;
    optional uint32 divSeq = 9;
    optional uint32 flag = 10;
    optional WithdrawWordingInfo withdrawWordingInfo = 11;
    message WithdrawWordingInfo {
      optional int32 itemId = 1;
      optional string itemName = 2;
    }
  }
}

message MutilTransHead {
  optional uint32 status = 1;
}

message PluginInfo {
  optional uint32 id = 1;
  optional string pkgName = 2;
  optional uint32 newVer = 3;
  optional uint32 type = 4;
  optional uint32 lanType = 5;
  optional uint32 priority = 6;
  optional string name = 7;
  optional string desc = 8;
  optional string urlBig = 9;
  optional string urlSmall = 10;
  optional string config = 11;
}

message UinPairMessage {
  int64 last_read_time = 1;
  uint64 peer_uin = 2;
  uint32 message_completed = 3;
  repeated Message messages = 4;
  uint32 unread_message_number = 5;
}
