syntax = "proto3";

option go_package = "./;pb";

/* hummer common element */

message MessageElementInfoServiceType33 {
  uint32 index = 1;
  bytes text = 2;
  bytes compat = 3;
  bytes buffer = 4;
}

message MessageElementInfoServiceType37 {
  bytes packId = 1;
  bytes stickerId = 2;
  uint32 qsId = 3;
  uint32 sourceType = 4;
  uint32 stickerType = 5;
  bytes resultId = 6;
  bytes text = 7;
  bytes surpriseId = 8;
  uint32 randomType = 9;
}

/* im message body */

message AnonymousGroupMessage {
  optional uint32 flags = 1;
  optional bytes anonId = 2;
  optional bytes anonNick = 3;
  optional uint32 headPortrait = 4;
  optional uint32 expireTime = 5;
  optional uint32 bubbleId = 6;
  optional bytes rankColor = 7;
}

message Attribute {
  optional sint32 codePage = 1;
  optional uint32 time = 2;
  optional uint32 random = 3;
  optional uint32 color = 4;
  optional uint32 size = 5;
  optional uint32 effect = 6;
  optional uint32 charSet = 7;
  optional uint32 pitchAndAamily = 8;
  optional string fontName = 9;
  optional bytes reserveData = 10;
}

message CommonElement {
  uint32 serviceType = 1;
  bytes pbElement = 2;
  uint32 businessType = 3;
}

message CustomFace {
  bytes guid = 1;
  string filePath = 2;
  string shortcut = 3;
  bytes buffer = 4;
  bytes flag = 5;
  bytes oldData = 6;
  uint32 fileId = 7;
  uint32 serverIp = 8;
  uint32 serverPort = 9;
  uint32 fileType = 10;
  bytes signature = 11;
  uint32 useful = 12;
  bytes md5 = 13;
  string thumbUrl = 14;
  string bigUrl = 15;
  string origUrl = 16;
  uint32 bizType = 17;
  uint32 repeatIndex = 18;
  uint32 repeatImage = 19;
  uint32 imageType = 20;
  uint32 index = 21;
  uint32 width = 22;
  uint32 height = 23;
  uint32 source = 24;
  uint32 size = 25;
  uint32 origin = 26;
  uint32 thumbWidth = 27;
  uint32 thumbHeight = 28;
  uint32 showLen = 29;
  uint32 downloadLen = 30;
  string url400 = 31;
  uint32 width400 = 32;
  uint32 height400 = 33;
  bytes reserveData = 34;
}

message Element {
  optional Text text = 1;
  optional Face face = 2;
  optional OnlineImage onlineImage = 3;
  optional NotOnlineImage notOnlineImage = 4;
  optional TransElement transElement = 5;
  optional MarketFace marketFace = 6;
  optional ElementFlags elementFlags = 7;
  optional CustomFace customFace = 8;
  optional ElementFlags2 elementFlags2 = 9;
  optional FunFace funFace = 10;
  optional SecretFileMessage secretFileMessage = 11;
  optional RichMessage richMessage = 12;
  optional GroupFile groupFile = 13;
  optional PublicGroup publicGroup = 14;
  optional MarketTrans marketTrans = 15;
  optional ExtraInfo extraInfo = 16;
  optional ShakeWindow shakeWindow = 17;
  optional PublicAccount publicAccount = 18;
  optional VideoFile videoFile = 19;
  optional TipsInfo tipsInfo = 20;
  optional AnonymousGroupMessage anonymousGroupMessage = 21;
  optional QQLiveOld qqLiveOld = 22;
  optional LifeOnlineAccount lifeOnline = 23;
  // optional QQWalletMessage qqWalletMessage = 24;
  // optional string crm_elem = 25;
  // optional string conference_tips_info = 26;
  // optional string redbag_info = 27;
  // optional string low_version_tips = 28;
  optional bytes bankcode_ctrl_info = 29;
  // optional string near_by_msg = 30;
  // optional string custom_elem = 31;
  // optional string location_info = 32;
  // optional string pub_acc_info = 33;
  // optional string small_emoji = 34;
  // optional string fsj_msg_elem = 35;
  // optional string ark_app = 36;
  // optional string general_flags = 37;
  // optional string hc_flash_pic = 38;
  // optional string deliver_gift_msg = 39;
  // optional string bitapp_msg = 40;
  // optional string open_qq_data = 41;
  // optional string apollo_msg = 42;
  // optional string group_pub_acc_info = 43;
  // optional string bless_msg = 44;
  optional SourceMessage sourceMessage = 45;
  // optional string lola_msg = 46;
  // optional string group_business_msg = 47;
  // optional string msg_workflow_notify = 48;
  // optional string pat_elem = 49;
  // optional string group_post_elem = 50;
  // optional string light_app = 51;
  // optional string eim_info = 52;
  optional CommonElement commonElement = 53;
}

message ElementFlags {
  optional bytes flags = 1;
  optional bytes businessData = 2;
}

message ElementFlags2 {
  optional uint32 colorTextId = 1;
  optional uint64 messageId = 2;
  optional uint32 whisperSessionId = 3;
  optional uint32 pttChangeBit = 4;
  optional uint32 vipStatus = 5;
  optional uint32 compatibleId = 6;
  repeated Instant Instants = 7;
  optional uint32 messageCount = 8;
  optional Instant srcInstant = 9;
  optional uint32 longtitude = 10;
  optional uint32 latitude = 11;
  optional uint32 customAont = 12;
  optional PCSupportDef pcSupportDef = 13;
  message Instant {
    optional uint32 appId = 1;
    optional uint32 instId = 2;
  }
}

message ExtraInfo {
  optional bytes nick = 1;
  optional bytes groupCard = 2;
  optional uint32 level = 3;
  optional uint32 flags = 4;
  optional uint32 groupMask = 5;
  optional uint32 messageTailId = 6;
  optional bytes senderTitle = 7;
  optional bytes apnsTips = 8;
  optional uint64 uin = 9;
  optional uint32 messageStateFlag = 10;
  optional uint32 apnsSoundType = 11;
  optional uint32 newGroupFlag = 12;
}

message Face {
  uint32 index = 1;
  bytes old = 2;
  bytes buffer = 3;
}

message FunFace {
  optional Turntable turntable = 1;
  optional Bomb bomb = 2;
  message Bomb {
    optional bool burst = 1;
  }
  message Turntable {
    repeated uint64 uinList = 1;
    optional uint64 hitUin = 2;
    optional string hitUinNick = 3;
  }
}

message GroupFile {
  optional bytes filename = 1;
  optional uint64 fileSize = 2;
  optional bytes fileId = 3;
  optional bytes batchId = 4;
  optional bytes fileKey = 5;
  optional bytes mark = 6;
  optional uint64 sequence = 7;
  optional bytes batchItemId = 8;
  optional uint32 feedMessageTime = 9;
}

message LifeOnlineAccount {
  optional uint64 uniqueId = 1;
  optional uint32 op = 2;
  optional uint32 showTime = 3;
  optional uint32 report = 4;
  optional uint32 ack = 5;
  optional uint64 bitmap = 6;
}

message MarketFace {
  bytes faceName = 1;
  uint32 itemType = 2;
  uint32 faceInfo = 3;
  bytes faceId = 4;
  uint32 tabId = 5;
  uint32 subType = 6;
  bytes key = 7;
  bytes param = 8;
  uint32 mediaType = 9;
  uint32 imageWidth = 10;
  uint32 imageHeight = 11;
  bytes mobileparam = 12;
}

message MarketTrans {
  int32 flag = 1;
  bytes xml = 2;
  bytes messageResId = 3;
  uint32 ability = 4;
  uint32 minAbility = 5;
}

message MessageBody {
  optional RichText richText = 1;
  optional bytes messageContent = 2;
}

message NotOnlineFile {
  optional uint32 fileType = 1;
  optional bytes sig = 2;
  optional bytes fileUuid = 3;
  optional bytes fileMd5 = 4;
  optional bytes fileName = 5;
  optional uint64 fileSize = 6;
  optional bytes note = 7;
  optional uint32 reserved = 8;
  optional uint32 subcmd = 9;
  optional uint32 microCloud = 10;
  optional uint32 dangerEvel = 11;
  optional uint32 lifeTime = 12;
  optional uint32 uploadTime = 13;
  optional uint32 absAileType = 14;
  optional uint32 clientType = 15;
  optional uint32 expireTime = 16;
}

message NotOnlineImage {
  bytes filePath = 1;
  uint32 fileLen = 2;
  bytes downloadPath = 3;
  bytes sendFile = 4;
  uint32 imgType = 5;
  bytes previewsImage = 6;
  bytes picMd5 = 7;
  uint32 picHeight = 8;
  uint32 picWidth = 9;
  bytes resId = 10;
  bytes flag = 11;
  string thumbUrl = 12;
  uint32 original = 13;
  string bigUrl = 14;
  string origUrl = 15;
  uint32 bizType = 16;
  uint32 result = 17;
  uint32 index = 18;
  bytes opAaceBuf = 19;
  bool oldPicMd5 = 20;
  uint32 thumbWidth = 21;
  uint32 thumbHeight = 22;
  uint32 fileId = 23;
  uint32 showLen = 24;
  uint32 downloadLen = 25;
}

message OnlineImage {
  optional bytes guid = 1;
  optional bytes filePath = 2;
  optional bytes sendFile = 3;
}

message PCSupportDef {
  optional uint32 pcPtlBegin = 1;
  optional uint32 pcPtlEnd = 2;
  optional uint32 macPtlBegin = 3;
  optional uint32 macPtlEnd = 4;
  repeated uint32 ptlsSupport = 5;
  repeated uint32 ptlsNotSupport = 6;
}

message PTT {
  optional uint32 fileType = 1;
  optional uint64 srcUin = 2;
  optional bytes fileUuid = 3;
  optional bytes fileMd5 = 4;
  optional bytes fileName = 5;
  optional uint32 fileSize = 6;
  optional bytes reserveData = 7;
  optional uint32 fileId = 8;
  optional uint32 serverIp = 9;
  optional uint32 serverPort = 10;
  optional bool valid = 11;
  optional bytes signature = 12;
  optional bytes shortcut = 13;
  optional bytes fileKey = 14;
  optional uint32 magicPttIndex = 15;
  optional uint32 voiceSwitch = 16;
  optional bytes pttUrl = 17;
  optional bytes groupAileKey = 18;
}

message PublicAccount {
  optional bytes buf = 1;
}

message PublicGroup {
  optional bytes nickname = 1;
  optional uint32 gender = 2;
  optional uint32 age = 3;
  optional uint32 distance = 4;
}

message QQLiveOld {
  optional uint32 subCmd = 1;
  optional string showText = 2;
  optional string param = 3;
  optional string introduce = 4;
}

message RichMessage {
  optional bytes template1 = 1;
  optional uint32 serviceId = 2;
  optional bytes messageResId = 3;
  optional uint32 rand = 4;
  optional uint32 seq = 5;
}

message RichText {
  optional Attribute attribute = 1;
  repeated Element elements = 2;
  optional NotOnlineFile notOnlineAile = 3;
  optional PTT ptt = 4;
  optional TempPTT tmpPtt = 5;
  optional Trans211TempMessage trans_211TmpMessage = 6;
}

message SecretFileMessage {
  optional bytes fileKey = 1;
  optional uint64 fromUin = 2;
  optional uint64 toUin = 3;
  optional uint32 status = 4;
  optional uint32 ttl = 5;
  optional uint32 type = 6;
  optional uint32 encryptPreheadLength = 7;
  optional uint32 encryptType = 8;
  optional bytes encryptKey = 9;
  optional uint32 readTimes = 10;
  optional uint32 leftTime = 11;
  optional NotOnlineImage notOnlineImage = 12;
  optional ElementFlags2 flags2 = 13;
  optional uint32 opertype = 14;
  optional string fromPhonenum = 15;
}

message ShakeWindow {
  uint32 type = 1;
  uint32 reserve = 2;
  uint64 uin = 3;
}

message SourceMessage {
  repeated uint32 origSeqs = 1;
  uint64 fromUin = 2;
  uint32 time = 3;
  uint32 flag = 4;
  repeated Element elements = 5;
  uint32 type = 6;
  bytes richMessage = 7;
  bytes reserve = 8;
  bytes sourceMessage = 9;
  uint64 toUin = 10;
  bytes groupName = 11;
}

message Text {
  string data = 1;
  string link = 2;
  bytes attr6Buffer = 3;
  bytes attr7Buffer = 4;
  bytes buffer = 5;
}

message TipsInfo {
    optional string text = 1;
}

message TempPTT {
  optional uint32 fileType = 1;
  optional bytes fileUuid = 2;
  optional bytes fileMd5 = 3;
  optional bytes fileName = 4;
  optional uint32 fileSize = 5;
  optional uint64 pttTimes = 6;
  optional uint32 userType = 7;
  optional uint32 ptttransFlag = 8;
}

message Trans211TempMessage {
  optional bytes messageBody = 1;
  optional uint32 c2cCommand = 2;
}

message TransElement {
  optional uint32 type = 1;
  optional bytes value = 2;
}

message VideoFile {
  optional bytes fileUuid = 1;
  optional bytes fileMd5 = 2;
  optional bytes fileName = 3;
  optional uint32 fileFormat = 4;
  optional uint32 fileTime = 5;
  optional uint32 fileSize = 6;
  optional uint32 thumbWidth = 7;
  optional uint32 thumbHeight = 8;
  optional bytes thumbFileMd5 = 9;
  optional bytes source = 10;
}

/* message common */

message AppShareInfo {
  optional uint32 id = 1;
  optional bytes cookie = 2;
  optional PluginInfo resource = 3;
}

message C2CTempMessageHead {
  optional uint32 c2cType = 1;
  optional uint32 serviceType = 2;
  optional uint64 groupUin = 3;
  optional uint64 groupCode = 4;
  optional bytes sig = 5;
  optional uint32 sigType = 6;
  optional string fromPhone = 7;
  optional string toPhone = 8;
  optional uint32 lockDisplay = 9;
  optional uint32 directionFlag = 10;
}

message ContentHead {
  optional uint32 pkgNum = 1;
  optional uint32 pkgIndex = 2;
  optional uint32 divSeq = 3;
  optional uint32 autoReply = 4;
}

message DiscussInfo {
  optional uint64 discussUin = 1;
  optional uint32 discussType = 2;
  optional uint64 discussInfoSeq = 3;
  optional bytes discussRemark = 4;
}

message GroupInfo {
  optional uint64 groupCode = 1;
  optional uint32 groupType = 2;
  optional uint64 groupInfoSeq = 3;
  optional bytes groupCard = 4;
  optional bytes groupRank = 5;
  optional uint32 groupLevel = 6;
}

message Message {
  MessageHead messageHead = 1;
  ContentHead contentHead = 2;
  MessageBody messageBody = 3;
  optional AppShareInfo appShareInfo = 4;
}

message MessageHead {
  uint64 fromUin = 1;
  uint64 toUin = 2;
  uint32 messageType = 3;
  uint32 c2cCmd = 4;
  uint32 messageSeq = 5;
  int64 messageTime = 6;
  uint64 messageUid = 7;
  optional C2CTempMessageHead c2cTempMessageHead = 8;
  optional GroupInfo groupInfo = 9;
  optional uint32 fromAppId = 10;
  optional uint32 fromInstId = 11;
  optional uint32 userActive = 12;
  optional DiscussInfo discussInfo = 13;
  optional string fromNick = 14;
  optional uint64 authUin = 15;
  optional string authNick = 16;
  optional uint32 messageFlag = 17;
  optional string authRemark = 18;
  optional string groupName = 19;
  optional MutilTransHead mutilTransHead = 20;
}

message MessageType0x210 {
  uint32 type = 1;
  bytes content = 2;
}

message MessageSubType0x8aRequest {
  repeated Info infos = 1;
  optional uint32 appId = 2;
  optional uint32 instId = 3;
  optional uint32 flag = 4;
  optional bytes reserved = 5;
  message Info {
    optional uint64 fromUin = 1;
    optional uint64 toUin = 2;
    optional uint32 messageSeq = 3;
    optional uint64 messageUid = 4;
    optional uint64 messageTime = 5;
    optional uint32 messageRandom = 6;
    optional uint32 pkgNum = 7;
    optional uint32 pkgIndex = 8;
    optional uint32 divSeq = 9;
    optional uint32 flag = 10;
    optional WithdrawWordingInfo withdrawWordingInfo = 11;
    message WithdrawWordingInfo {
      optional int32 itemId = 1;
      optional string itemName = 2;
    }
  }
}

message MutilTransHead {
  optional uint32 status = 1;
}

message PluginInfo {
  optional uint32 id = 1;
  optional string pkgName = 2;
  optional uint32 newVer = 3;
  optional uint32 type = 4;
  optional uint32 lanType = 5;
  optional uint32 priority = 6;
  optional string name = 7;
  optional string desc = 8;
  optional string urlBig = 9;
  optional string urlSmall = 10;
  optional string config = 11;
}

message UinPairMessage {
  int64 lastReadTime = 1;
  uint64 peerUin = 2;
  uint32 messageCompleted = 3;
  repeated Message messages = 4;
  optional uint32 unreadMessageNum = 5;
}

/* message service */

message C2C {
  uint64 uin = 1;
}

message MessageDeleteMessageRequest {
  repeated MessageItem messageItems = 1;
  message MessageItem {
    uint64 fromUin = 1;
    uint64 toUin = 2;
    uint32 messageType = 3;
    uint32 messageSeq = 4;
    uint64 messageUid = 5;
  }
}

message MessageDeleteMessageResponse {
  optional uint32 result = 1;
  optional string errorMessage = 2;
}

message Discussion {
  uint64 code = 1;
}

message DiscussionTemp {
  uint64 code = 1;
  uint64 toUin = 2;
}

message MessageGetMessageRequest {
  uint32 syncFlag = 1;
  bytes syncCookie = 2;
  uint32 rambleFlag = 3;
  uint32 latestRambleNumber = 4;
  uint32 otherRambleNumber = 5;
  uint32 onlineSyncFlag = 6;
  uint32 contextFlag = 7;
  uint32 whisperSessionId = 8;
  uint32 requestType = 9;
  bytes publicAccountCookie = 10;
  bytes controlBuffer = 11;
  bytes serverBuffer = 12;
}

message MessageGetMessageResponse {
  optional uint32 result = 1;
  optional string errorMessage = 2;
  optional bytes syncCookie = 3;
  optional uint32 syncFlag = 4;
  repeated UinPairMessage uinPairMessages = 5;
  optional uint64 bindUin = 6;
}

message Group {
  uint64 code = 1;
}

message GroupTemp {
  uint64 code = 1;
  uint64 toUin = 2;
}

message RoutingHead {
  C2C c2c = 1;
  Group group = 2;
  GroupTemp groupTemp = 3;
  Discussion discussion = 4;
  DiscussionTemp discussionTemp = 5;
  // string wpaTemp = 6;
  // string secretFile = 7;
  // string publicPlat = 8;
  // string transMessage = 9;
  // string addressList = 10;
  // string richStatusTemp = 11;
  // string accostTemp = 12;
  // string publicGroupTemp = 13;
  // string trans0x211 = 14;
  // string businessWpaTemp = 15;
  // string authTemp = 16;
  // string bsnsTemp = 17;
  // string qqQueryBusinessTemp = 18;
  // string nearbyDatingTemp = 19;
  // string nearbyAssistantTemp = 20;
}

message MessageSendMessageRequest {
  RoutingHead routingHead = 1;
  ContentHead contentHead = 2;
  MessageBody messageBody = 3;
  uint32 messageSeq = 4;
  uint32 messageRand = 5;
  bytes syncCookie = 6;
  AppShareInfo appShare = 7;
  uint32 messageVia = 8;
}

message MessageSendMessageResponse {
  optional int32 result = 1;
  optional string errorMessage = 2;
  optional int64 sendTime = 3;
}

/* message online push */

message OnlinePushMessage {
  optional Message message = 1;
  optional int32 serverIp = 2;
  optional bytes pushToken = 3;
  optional uint32 pingFlag = 4;
  optional uint32 generalFlag = 5;
  optional uint64 bindUin = 6;
}
