// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: oidb.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// C59542mutualmark
type MutualMark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MutualMark) Reset() {
	*x = MutualMark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutualMark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutualMark) ProtoMessage() {}

func (x *MutualMark) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutualMark.ProtoReflect.Descriptor instead.
func (*MutualMark) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{0}
}

type OIDB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OIDB) Reset() {
	*x = OIDB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB) ProtoMessage() {}

func (x *OIDB) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB.ProtoReflect.Descriptor instead.
func (*OIDB) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1}
}

// MutualActionDay
type MutualMark_MutualActionDay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type uint64 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"` // "uint64_type"
	Day  uint64 `protobuf:"varint,2,opt,name=day,proto3" json:"day,omitempty"`   // "uint64_day"
	Time uint64 `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"` // "uint64_time"
}

func (x *MutualMark_MutualActionDay) Reset() {
	*x = MutualMark_MutualActionDay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutualMark_MutualActionDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutualMark_MutualActionDay) ProtoMessage() {}

func (x *MutualMark_MutualActionDay) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutualMark_MutualActionDay.ProtoReflect.Descriptor instead.
func (*MutualMark_MutualActionDay) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{0, 0}
}

func (x *MutualMark_MutualActionDay) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MutualMark_MutualActionDay) GetDay() uint64 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *MutualMark_MutualActionDay) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// MutualMark
type MutualMark_MutualMark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                    uint64                        `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                                                                               // "uint64_type"
	Level                   uint64                        `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`                                                                             // "uint64_level"
	SrcUin                  uint64                        `protobuf:"varint,3,opt,name=src_uin,json=srcUin,proto3" json:"src_uin,omitempty"`                                                             // "uint64_src_uin"
	DstUin                  uint64                        `protobuf:"varint,4,opt,name=dst_uin,json=dstUin,proto3" json:"dst_uin,omitempty"`                                                             // "uint64_dst_uin"
	FloatCount              float32                       `protobuf:"fixed32,5,opt,name=float_count,json=floatCount,proto3" json:"float_count,omitempty"`                                                // "float_count"
	Day                     uint64                        `protobuf:"varint,6,opt,name=day,proto3" json:"day,omitempty"`                                                                                 // "uint64_day"
	Time                    uint64                        `protobuf:"varint,7,opt,name=time,proto3" json:"time,omitempty"`                                                                               // "uint64_time"
	IconStatus              uint64                        `protobuf:"varint,8,opt,name=icon_status,json=iconStatus,proto3" json:"icon_status,omitempty"`                                                 // "uint64_icon_status"
	IconStatusEndTime       uint64                        `protobuf:"varint,9,opt,name=icon_status_end_time,json=iconStatusEndTime,proto3" json:"icon_status_end_time,omitempty"`                        // "uint64_icon_status_end_time"
	CloseFlag               uint32                        `protobuf:"varint,10,opt,name=close_flag,json=closeFlag,proto3" json:"close_flag,omitempty"`                                                   // "uint32_close_flag"
	ResourceInfo            []byte                        `protobuf:"bytes,11,opt,name=resource_info,json=resourceInfo,proto3" json:"resource_info,omitempty"`                                           // "bytes_resource_info"
	Cluster                 []byte                        `protobuf:"bytes,12,opt,name=cluster,proto3" json:"cluster,omitempty"`                                                                         // "bytes_cluster"
	SubLevel                uint64                        `protobuf:"varint,13,opt,name=sub_level,json=subLevel,proto3" json:"sub_level,omitempty"`                                                      // "uint64_sub_level"
	GradeResourceInfo       []byte                        `protobuf:"bytes,14,opt,name=grade_resource_info,json=gradeResourceInfo,proto3" json:"grade_resource_info,omitempty"`                          // "bytes_grade_resource_info"
	ModifyTime              uint64                        `protobuf:"varint,100,opt,name=modify_time,json=modifyTime,proto3" json:"modify_time,omitempty"`                                               // "uint64_modify_time"
	MinVer                  []byte                        `protobuf:"bytes,200,opt,name=min_ver,json=minVer,proto3" json:"min_ver,omitempty"`                                                            // "bytes_min_ver"
	MaxVer                  []byte                        `protobuf:"bytes,201,opt,name=max_ver,json=maxVer,proto3" json:"max_ver,omitempty"`                                                            // "bytes_max_ver"
	MutualActionDay         []*MutualMark_MutualActionDay `protobuf:"bytes,1000,rep,name=mutual_action_day,json=mutualActionDay,proto3" json:"mutual_action_day,omitempty"`                              // "rpt_mutual_action_day"
	FloatLastWeekCount      float32                       `protobuf:"fixed32,1001,opt,name=float_last_week_count,json=floatLastWeekCount,proto3" json:"float_last_week_count,omitempty"`                 // "float_last_week_count"
	AddFriendTime           uint64                        `protobuf:"varint,5000,opt,name=add_friend_time,json=addFriendTime,proto3" json:"add_friend_time,omitempty"`                                   // "uint64_add_friend_time"
	AddFriendFlag           uint64                        `protobuf:"varint,5001,opt,name=add_friend_flag,json=addFriendFlag,proto3" json:"add_friend_flag,omitempty"`                                   // "uint64_add_friend_flag"
	AddFriendTimeUpdateTime uint64                        `protobuf:"varint,5002,opt,name=add_friend_time_update_time,json=addFriendTimeUpdateTime,proto3" json:"add_friend_time_update_time,omitempty"` // "uint64_add_friend_time_update_time"
	DegradeTime             uint64                        `protobuf:"varint,6000,opt,name=degrade_time,json=degradeTime,proto3" json:"degrade_time,omitempty"`                                           // "uint64_degrade_time"
	PushTimeC2C_50          uint64                        `protobuf:"varint,15000,opt,name=push_time_c2c_50,json=pushTimeC2c50,proto3" json:"push_time_c2c_50,omitempty"`                                // "uint64_push_time_c2c_50"
	PushTimeC2C_100         uint64                        `protobuf:"varint,15001,opt,name=push_time_c2c_100,json=pushTimeC2c100,proto3" json:"push_time_c2c_100,omitempty"`                             // "uint64_push_time_c2c_100"
	PushTimeTalk            uint64                        `protobuf:"varint,15002,opt,name=push_time_talk,json=pushTimeTalk,proto3" json:"push_time_talk,omitempty"`                                     // "uint64_push_time_talk"
	PushTimeScore_200       uint64                        `protobuf:"varint,16000,opt,name=push_time_score_200,json=pushTimeScore200,proto3" json:"push_time_score_200,omitempty"`                       // "uint64_push_time_score_200"
	PushTimeScore_400       uint64                        `protobuf:"varint,16001,opt,name=push_time_score_400,json=pushTimeScore400,proto3" json:"push_time_score_400,omitempty"`                       // "uint64_push_time_score_400"
	PushTimeScore_600       uint64                        `protobuf:"varint,16002,opt,name=push_time_score_600,json=pushTimeScore600,proto3" json:"push_time_score_600,omitempty"`                       // "uint64_push_time_score_600"
	PushTimeScore_800       uint64                        `protobuf:"varint,16003,opt,name=push_time_score_800,json=pushTimeScore800,proto3" json:"push_time_score_800,omitempty"`                       // "uint64_push_time_score_800"
	PushTimeScore_1000      uint64                        `protobuf:"varint,16004,opt,name=push_time_score_1000,json=pushTimeScore1000,proto3" json:"push_time_score_1000,omitempty"`                    // "uint64_push_time_score_1000"
	PushTimeScore_1200      uint64                        `protobuf:"varint,16005,opt,name=push_time_score_1200,json=pushTimeScore1200,proto3" json:"push_time_score_1200,omitempty"`                    // "uint64_push_time_score_1200"
	SpecialWordAttribute    []byte                        `protobuf:"bytes,17000,opt,name=special_word_attribute,json=specialWordAttribute,proto3" json:"special_word_attribute,omitempty"`              // "bytes_special_word_attribute"
}

func (x *MutualMark_MutualMark) Reset() {
	*x = MutualMark_MutualMark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutualMark_MutualMark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutualMark_MutualMark) ProtoMessage() {}

func (x *MutualMark_MutualMark) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutualMark_MutualMark.ProtoReflect.Descriptor instead.
func (*MutualMark_MutualMark) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{0, 1}
}

func (x *MutualMark_MutualMark) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *MutualMark_MutualMark) GetLevel() uint64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *MutualMark_MutualMark) GetSrcUin() uint64 {
	if x != nil {
		return x.SrcUin
	}
	return 0
}

func (x *MutualMark_MutualMark) GetDstUin() uint64 {
	if x != nil {
		return x.DstUin
	}
	return 0
}

func (x *MutualMark_MutualMark) GetFloatCount() float32 {
	if x != nil {
		return x.FloatCount
	}
	return 0
}

func (x *MutualMark_MutualMark) GetDay() uint64 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *MutualMark_MutualMark) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *MutualMark_MutualMark) GetIconStatus() uint64 {
	if x != nil {
		return x.IconStatus
	}
	return 0
}

func (x *MutualMark_MutualMark) GetIconStatusEndTime() uint64 {
	if x != nil {
		return x.IconStatusEndTime
	}
	return 0
}

func (x *MutualMark_MutualMark) GetCloseFlag() uint32 {
	if x != nil {
		return x.CloseFlag
	}
	return 0
}

func (x *MutualMark_MutualMark) GetResourceInfo() []byte {
	if x != nil {
		return x.ResourceInfo
	}
	return nil
}

func (x *MutualMark_MutualMark) GetCluster() []byte {
	if x != nil {
		return x.Cluster
	}
	return nil
}

func (x *MutualMark_MutualMark) GetSubLevel() uint64 {
	if x != nil {
		return x.SubLevel
	}
	return 0
}

func (x *MutualMark_MutualMark) GetGradeResourceInfo() []byte {
	if x != nil {
		return x.GradeResourceInfo
	}
	return nil
}

func (x *MutualMark_MutualMark) GetModifyTime() uint64 {
	if x != nil {
		return x.ModifyTime
	}
	return 0
}

func (x *MutualMark_MutualMark) GetMinVer() []byte {
	if x != nil {
		return x.MinVer
	}
	return nil
}

func (x *MutualMark_MutualMark) GetMaxVer() []byte {
	if x != nil {
		return x.MaxVer
	}
	return nil
}

func (x *MutualMark_MutualMark) GetMutualActionDay() []*MutualMark_MutualActionDay {
	if x != nil {
		return x.MutualActionDay
	}
	return nil
}

func (x *MutualMark_MutualMark) GetFloatLastWeekCount() float32 {
	if x != nil {
		return x.FloatLastWeekCount
	}
	return 0
}

func (x *MutualMark_MutualMark) GetAddFriendTime() uint64 {
	if x != nil {
		return x.AddFriendTime
	}
	return 0
}

func (x *MutualMark_MutualMark) GetAddFriendFlag() uint64 {
	if x != nil {
		return x.AddFriendFlag
	}
	return 0
}

func (x *MutualMark_MutualMark) GetAddFriendTimeUpdateTime() uint64 {
	if x != nil {
		return x.AddFriendTimeUpdateTime
	}
	return 0
}

func (x *MutualMark_MutualMark) GetDegradeTime() uint64 {
	if x != nil {
		return x.DegradeTime
	}
	return 0
}

func (x *MutualMark_MutualMark) GetPushTimeC2C_50() uint64 {
	if x != nil {
		return x.PushTimeC2C_50
	}
	return 0
}

func (x *MutualMark_MutualMark) GetPushTimeC2C_100() uint64 {
	if x != nil {
		return x.PushTimeC2C_100
	}
	return 0
}

func (x *MutualMark_MutualMark) GetPushTimeTalk() uint64 {
	if x != nil {
		return x.PushTimeTalk
	}
	return 0
}

func (x *MutualMark_MutualMark) GetPushTimeScore_200() uint64 {
	if x != nil {
		return x.PushTimeScore_200
	}
	return 0
}

func (x *MutualMark_MutualMark) GetPushTimeScore_400() uint64 {
	if x != nil {
		return x.PushTimeScore_400
	}
	return 0
}

func (x *MutualMark_MutualMark) GetPushTimeScore_600() uint64 {
	if x != nil {
		return x.PushTimeScore_600
	}
	return 0
}

func (x *MutualMark_MutualMark) GetPushTimeScore_800() uint64 {
	if x != nil {
		return x.PushTimeScore_800
	}
	return 0
}

func (x *MutualMark_MutualMark) GetPushTimeScore_1000() uint64 {
	if x != nil {
		return x.PushTimeScore_1000
	}
	return 0
}

func (x *MutualMark_MutualMark) GetPushTimeScore_1200() uint64 {
	if x != nil {
		return x.PushTimeScore_1200
	}
	return 0
}

func (x *MutualMark_MutualMark) GetSpecialWordAttribute() []byte {
	if x != nil {
		return x.SpecialWordAttribute
	}
	return nil
}

// ResourceInfo
type MutualMark_ResourceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynamicUrl  []byte `protobuf:"bytes,1,opt,name=dynamic_url,json=dynamicUrl,proto3" json:"dynamic_url,omitempty"`     // "bytes_dynamic_url"
	StaticUrl   []byte `protobuf:"bytes,2,opt,name=static_url,json=staticUrl,proto3" json:"static_url,omitempty"`        // "bytes_static_url"
	CartoonUrl  []byte `protobuf:"bytes,3,opt,name=cartoon_url,json=cartoonUrl,proto3" json:"cartoon_url,omitempty"`     // "bytes_cartoon_url"
	CartoonMd5  []byte `protobuf:"bytes,4,opt,name=cartoon_md5,json=cartoonMd5,proto3" json:"cartoon_md5,omitempty"`     // "bytes_cartoon_md5"
	PlayCartoon uint32 `protobuf:"varint,5,opt,name=play_cartoon,json=playCartoon,proto3" json:"play_cartoon,omitempty"` // "uint32_play_cartoon"
	Word        []byte `protobuf:"bytes,6,opt,name=word,proto3" json:"word,omitempty"`                                   // "bytes_word"
}

func (x *MutualMark_ResourceInfo) Reset() {
	*x = MutualMark_ResourceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutualMark_ResourceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutualMark_ResourceInfo) ProtoMessage() {}

func (x *MutualMark_ResourceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutualMark_ResourceInfo.ProtoReflect.Descriptor instead.
func (*MutualMark_ResourceInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{0, 2}
}

func (x *MutualMark_ResourceInfo) GetDynamicUrl() []byte {
	if x != nil {
		return x.DynamicUrl
	}
	return nil
}

func (x *MutualMark_ResourceInfo) GetStaticUrl() []byte {
	if x != nil {
		return x.StaticUrl
	}
	return nil
}

func (x *MutualMark_ResourceInfo) GetCartoonUrl() []byte {
	if x != nil {
		return x.CartoonUrl
	}
	return nil
}

func (x *MutualMark_ResourceInfo) GetCartoonMd5() []byte {
	if x != nil {
		return x.CartoonMd5
	}
	return nil
}

func (x *MutualMark_ResourceInfo) GetPlayCartoon() uint32 {
	if x != nil {
		return x.PlayCartoon
	}
	return 0
}

func (x *MutualMark_ResourceInfo) GetWord() []byte {
	if x != nil {
		return x.Word
	}
	return nil
}

// ResourceInfo_17
type MutualMark_ResourceInfo_17 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynamicUrl  []byte `protobuf:"bytes,1,opt,name=dynamic_url,json=dynamicUrl,proto3" json:"dynamic_url,omitempty"`     // "bytes_dynamic_url"
	StaticUrl   []byte `protobuf:"bytes,2,opt,name=static_url,json=staticUrl,proto3" json:"static_url,omitempty"`        // "bytes_static_url"
	CartoonUrl  []byte `protobuf:"bytes,3,opt,name=cartoon_url,json=cartoonUrl,proto3" json:"cartoon_url,omitempty"`     // "bytes_cartoon_url"
	CartoonMd5  []byte `protobuf:"bytes,4,opt,name=cartoon_md5,json=cartoonMd5,proto3" json:"cartoon_md5,omitempty"`     // "bytes_cartoon_md5"
	PlayCartoon uint32 `protobuf:"varint,5,opt,name=play_cartoon,json=playCartoon,proto3" json:"play_cartoon,omitempty"` // "uint32_play_cartoon"
	Word        []byte `protobuf:"bytes,6,opt,name=word,proto3" json:"word,omitempty"`                                   // "bytes_word"
}

func (x *MutualMark_ResourceInfo_17) Reset() {
	*x = MutualMark_ResourceInfo_17{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutualMark_ResourceInfo_17) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutualMark_ResourceInfo_17) ProtoMessage() {}

func (x *MutualMark_ResourceInfo_17) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutualMark_ResourceInfo_17.ProtoReflect.Descriptor instead.
func (*MutualMark_ResourceInfo_17) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{0, 3}
}

func (x *MutualMark_ResourceInfo_17) GetDynamicUrl() []byte {
	if x != nil {
		return x.DynamicUrl
	}
	return nil
}

func (x *MutualMark_ResourceInfo_17) GetStaticUrl() []byte {
	if x != nil {
		return x.StaticUrl
	}
	return nil
}

func (x *MutualMark_ResourceInfo_17) GetCartoonUrl() []byte {
	if x != nil {
		return x.CartoonUrl
	}
	return nil
}

func (x *MutualMark_ResourceInfo_17) GetCartoonMd5() []byte {
	if x != nil {
		return x.CartoonMd5
	}
	return nil
}

func (x *MutualMark_ResourceInfo_17) GetPlayCartoon() uint32 {
	if x != nil {
		return x.PlayCartoon
	}
	return 0
}

func (x *MutualMark_ResourceInfo_17) GetWord() []byte {
	if x != nil {
		return x.Word
	}
	return nil
}

// SpecialWordAttribute
type MutualMark_SpecialWordAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardId                           []byte                             `protobuf:"bytes,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`                                                                                         // "bytes_card_id"
	CardColor                        []byte                             `protobuf:"bytes,2,opt,name=card_color,json=cardColor,proto3" json:"card_color,omitempty"`                                                                                // "bytes_card_color"
	SetUin                           uint64                             `protobuf:"varint,3,opt,name=set_uin,json=setUin,proto3" json:"set_uin,omitempty"`                                                                                        // "uint64_set_uin"
	LastSetTime                      uint64                             `protobuf:"varint,4,opt,name=last_set_time,json=lastSetTime,proto3" json:"last_set_time,omitempty"`                                                                       // "uint64_last_set_time"
	LastOnTime                       uint64                             `protobuf:"varint,5,opt,name=last_on_time,json=lastOnTime,proto3" json:"last_on_time,omitempty"`                                                                          // "uint64_last_on_time"
	LastOffTime                      uint64                             `protobuf:"varint,6,opt,name=last_off_time,json=lastOffTime,proto3" json:"last_off_time,omitempty"`                                                                       // "uint64_last_off_time"
	WordLightUpTime                  uint64                             `protobuf:"varint,7,opt,name=word_light_up_time,json=wordLightUpTime,proto3" json:"word_light_up_time,omitempty"`                                                         // "uint64_word_light_up_time"
	MessageMinSpecialWordCardGetInfo *MutualMark_SpecialWordCardGetInfo `protobuf:"bytes,8,opt,name=message_min_special_word_card_get_info,json=messageMinSpecialWordCardGetInfo,proto3" json:"message_min_special_word_card_get_info,omitempty"` // "msg_min_special_word_card_get_info"
	MessageMaxSpecialWordCardGetInfo *MutualMark_SpecialWordCardGetInfo `protobuf:"bytes,9,opt,name=message_max_special_word_card_get_info,json=messageMaxSpecialWordCardGetInfo,proto3" json:"message_max_special_word_card_get_info,omitempty"` // "msg_max_special_word_card_get_info"
}

func (x *MutualMark_SpecialWordAttribute) Reset() {
	*x = MutualMark_SpecialWordAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutualMark_SpecialWordAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutualMark_SpecialWordAttribute) ProtoMessage() {}

func (x *MutualMark_SpecialWordAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutualMark_SpecialWordAttribute.ProtoReflect.Descriptor instead.
func (*MutualMark_SpecialWordAttribute) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{0, 4}
}

func (x *MutualMark_SpecialWordAttribute) GetCardId() []byte {
	if x != nil {
		return x.CardId
	}
	return nil
}

func (x *MutualMark_SpecialWordAttribute) GetCardColor() []byte {
	if x != nil {
		return x.CardColor
	}
	return nil
}

func (x *MutualMark_SpecialWordAttribute) GetSetUin() uint64 {
	if x != nil {
		return x.SetUin
	}
	return 0
}

func (x *MutualMark_SpecialWordAttribute) GetLastSetTime() uint64 {
	if x != nil {
		return x.LastSetTime
	}
	return 0
}

func (x *MutualMark_SpecialWordAttribute) GetLastOnTime() uint64 {
	if x != nil {
		return x.LastOnTime
	}
	return 0
}

func (x *MutualMark_SpecialWordAttribute) GetLastOffTime() uint64 {
	if x != nil {
		return x.LastOffTime
	}
	return 0
}

func (x *MutualMark_SpecialWordAttribute) GetWordLightUpTime() uint64 {
	if x != nil {
		return x.WordLightUpTime
	}
	return 0
}

func (x *MutualMark_SpecialWordAttribute) GetMessageMinSpecialWordCardGetInfo() *MutualMark_SpecialWordCardGetInfo {
	if x != nil {
		return x.MessageMinSpecialWordCardGetInfo
	}
	return nil
}

func (x *MutualMark_SpecialWordAttribute) GetMessageMaxSpecialWordCardGetInfo() *MutualMark_SpecialWordCardGetInfo {
	if x != nil {
		return x.MessageMaxSpecialWordCardGetInfo
	}
	return nil
}

// SpecialWordCardGetInfo
type MutualMark_SpecialWordCardGetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin              uint64 `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`                                                       // "uint64_uin"
	CanGetCardCount  uint32 `protobuf:"varint,2,opt,name=can_get_card_count,json=canGetCardCount,proto3" json:"can_get_card_count,omitempty"`    // "uint32_can_get_card_count"
	LastGiveCardTime uint64 `protobuf:"varint,3,opt,name=last_give_card_time,json=lastGiveCardTime,proto3" json:"last_give_card_time,omitempty"` // "uint64_last_give_card_time"
}

func (x *MutualMark_SpecialWordCardGetInfo) Reset() {
	*x = MutualMark_SpecialWordCardGetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutualMark_SpecialWordCardGetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutualMark_SpecialWordCardGetInfo) ProtoMessage() {}

func (x *MutualMark_SpecialWordCardGetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutualMark_SpecialWordCardGetInfo.ProtoReflect.Descriptor instead.
func (*MutualMark_SpecialWordCardGetInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{0, 5}
}

func (x *MutualMark_SpecialWordCardGetInfo) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *MutualMark_SpecialWordCardGetInfo) GetCanGetCardCount() uint32 {
	if x != nil {
		return x.CanGetCardCount
	}
	return 0
}

func (x *MutualMark_SpecialWordCardGetInfo) GetLastGiveCardTime() uint64 {
	if x != nil {
		return x.LastGiveCardTime
	}
	return 0
}

// TroopTips0x857
type OIDB_Type0857 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OIDB_Type0857) Reset() {
	*x = OIDB_Type0857{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857) ProtoMessage() {}

func (x *OIDB_Type0857) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0}
}

// Oidb_0xd50
type OIDB_Type0D50 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OIDB_Type0D50) Reset() {
	*x = OIDB_Type0D50{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0D50) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0D50) ProtoMessage() {}

func (x *OIDB_Type0D50) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0D50.ProtoReflect.Descriptor instead.
func (*OIDB_Type0D50) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 1}
}

// Oidb_0xd6b
type OIDB_Type0D6B struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OIDB_Type0D6B) Reset() {
	*x = OIDB_Type0D6B{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0D6B) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0D6B) ProtoMessage() {}

func (x *OIDB_Type0D6B) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0D6B.ProtoReflect.Descriptor instead.
func (*OIDB_Type0D6B) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 2}
}

// AIOGrayTipsInfo
type OIDB_Type0857_GrayTipsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowLatest        *uint32 `protobuf:"varint,1,opt,name=show_latest,json=showLatest,proto3,oneof" json:"show_latest,omitempty"`                  // "opt_uint32_show_lastest"
	Content           []byte  `protobuf:"bytes,2,opt,name=content,proto3,oneof" json:"content,omitempty"`                                           // "opt_bytes_content"
	Remind            *uint32 `protobuf:"varint,3,opt,name=remind,proto3,oneof" json:"remind,omitempty"`                                            // "opt_uint32_remind"
	Brief             []byte  `protobuf:"bytes,4,opt,name=brief,proto3,oneof" json:"brief,omitempty"`                                               // "opt_bytes_brief"
	ReceiverUin       uint64  `protobuf:"varint,5,opt,name=receiver_uin,json=receiverUin,proto3" json:"receiver_uin,omitempty"`                     // "uint64_receiver_uin"
	ReliaoAdminOption uint32  `protobuf:"varint,6,opt,name=reliao_admin_option,json=reliaoAdminOption,proto3" json:"reliao_admin_option,omitempty"` // "uint32_reliao_admin_opt"
	RobotGroupOption  uint32  `protobuf:"varint,7,opt,name=robot_group_option,json=robotGroupOption,proto3" json:"robot_group_option,omitempty"`    // "uint32_robot_group_opt"
}

func (x *OIDB_Type0857_GrayTipsInfo) Reset() {
	*x = OIDB_Type0857_GrayTipsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_GrayTipsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_GrayTipsInfo) ProtoMessage() {}

func (x *OIDB_Type0857_GrayTipsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_GrayTipsInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_GrayTipsInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *OIDB_Type0857_GrayTipsInfo) GetShowLatest() uint32 {
	if x != nil && x.ShowLatest != nil {
		return *x.ShowLatest
	}
	return 0
}

func (x *OIDB_Type0857_GrayTipsInfo) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *OIDB_Type0857_GrayTipsInfo) GetRemind() uint32 {
	if x != nil && x.Remind != nil {
		return *x.Remind
	}
	return 0
}

func (x *OIDB_Type0857_GrayTipsInfo) GetBrief() []byte {
	if x != nil {
		return x.Brief
	}
	return nil
}

func (x *OIDB_Type0857_GrayTipsInfo) GetReceiverUin() uint64 {
	if x != nil {
		return x.ReceiverUin
	}
	return 0
}

func (x *OIDB_Type0857_GrayTipsInfo) GetReliaoAdminOption() uint32 {
	if x != nil {
		return x.ReliaoAdminOption
	}
	return 0
}

func (x *OIDB_Type0857_GrayTipsInfo) GetRobotGroupOption() uint32 {
	if x != nil {
		return x.RobotGroupOption
	}
	return 0
}

// AIOTopTipsInfo
type OIDB_Type0857_TopTipsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte  `protobuf:"bytes,1,opt,name=content,proto3,oneof" json:"content,omitempty"`          // "opt_bytes_content"
	Icon    *uint32 `protobuf:"varint,2,opt,name=icon,proto3,oneof" json:"icon,omitempty"`               // "opt_uint32_icon"
	Action  *uint32 `protobuf:"varint,3,opt,name=action,proto3,oneof" json:"action,omitempty"`           // "opt_enum_action" Enum
	Url     []byte  `protobuf:"bytes,4,opt,name=url,proto3,oneof" json:"url,omitempty"`                  // "opt_bytes_url"
	Data    []byte  `protobuf:"bytes,5,opt,name=data,proto3,oneof" json:"data,omitempty"`                // "opt_bytes_data"
	DataI   []byte  `protobuf:"bytes,6,opt,name=data_i,json=dataI,proto3,oneof" json:"data_i,omitempty"` // "opt_bytes_data_i"
	DataA   []byte  `protobuf:"bytes,7,opt,name=data_a,json=dataA,proto3,oneof" json:"data_a,omitempty"` // "opt_bytes_data_a"
	DataP   []byte  `protobuf:"bytes,8,opt,name=data_p,json=dataP,proto3,oneof" json:"data_p,omitempty"` // "opt_bytes_data_p"
}

func (x *OIDB_Type0857_TopTipsInfo) Reset() {
	*x = OIDB_Type0857_TopTipsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_TopTipsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_TopTipsInfo) ProtoMessage() {}

func (x *OIDB_Type0857_TopTipsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_TopTipsInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_TopTipsInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 1}
}

func (x *OIDB_Type0857_TopTipsInfo) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *OIDB_Type0857_TopTipsInfo) GetIcon() uint32 {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return 0
}

func (x *OIDB_Type0857_TopTipsInfo) GetAction() uint32 {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return 0
}

func (x *OIDB_Type0857_TopTipsInfo) GetUrl() []byte {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *OIDB_Type0857_TopTipsInfo) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *OIDB_Type0857_TopTipsInfo) GetDataI() []byte {
	if x != nil {
		return x.DataI
	}
	return nil
}

func (x *OIDB_Type0857_TopTipsInfo) GetDataA() []byte {
	if x != nil {
		return x.DataA
	}
	return nil
}

func (x *OIDB_Type0857_TopTipsInfo) GetDataP() []byte {
	if x != nil {
		return x.DataP
	}
	return nil
}

// FloatedTipsInfo
type OIDB_Type0857_FloatedTipsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3,oneof" json:"content,omitempty"` // "opt_bytes_content"
}

func (x *OIDB_Type0857_FloatedTipsInfo) Reset() {
	*x = OIDB_Type0857_FloatedTipsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_FloatedTipsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_FloatedTipsInfo) ProtoMessage() {}

func (x *OIDB_Type0857_FloatedTipsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_FloatedTipsInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_FloatedTipsInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 2}
}

func (x *OIDB_Type0857_FloatedTipsInfo) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

// GeneralGrayTipInfo
type OIDB_Type0857_GeneralGrayTipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusiType          uint64                      `protobuf:"varint,1,opt,name=busi_type,json=busiType,proto3" json:"busi_type,omitempty"`                             // "uint64_busi_type"
	BusiId            uint64                      `protobuf:"varint,2,opt,name=busi_id,json=busiId,proto3" json:"busi_id,omitempty"`                                   // "uint64_busi_id"
	CtrlFlag          uint32                      `protobuf:"varint,3,opt,name=ctrl_flag,json=ctrlFlag,proto3" json:"ctrl_flag,omitempty"`                             // "uint32_ctrl_flag"
	C2CType           uint32                      `protobuf:"varint,4,opt,name=c2c_type,json=c2cType,proto3" json:"c2c_type,omitempty"`                                // "uint32_c2c_type"
	ServiceType       uint32                      `protobuf:"varint,5,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`                    // "uint32_service_type"
	TemplId           uint64                      `protobuf:"varint,6,opt,name=templ_id,json=templId,proto3" json:"templ_id,omitempty"`                                // "uint64_templ_id"
	MessageTemplParam []*OIDB_Type0857_TemplParam `protobuf:"bytes,7,rep,name=message_templ_param,json=messageTemplParam,proto3" json:"message_templ_param,omitempty"` // "rpt_msg_templ_param"
	Content           []byte                      `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`                                                // "bytes_content"
	TipsSeqId         uint64                      `protobuf:"varint,10,opt,name=tips_seq_id,json=tipsSeqId,proto3" json:"tips_seq_id,omitempty"`                       // "uint64_tips_seq_id"
	PbReserv          []byte                      `protobuf:"bytes,100,opt,name=pb_reserv,json=pbReserv,proto3" json:"pb_reserv,omitempty"`                            // "bytes_pb_reserv"
}

func (x *OIDB_Type0857_GeneralGrayTipInfo) Reset() {
	*x = OIDB_Type0857_GeneralGrayTipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_GeneralGrayTipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_GeneralGrayTipInfo) ProtoMessage() {}

func (x *OIDB_Type0857_GeneralGrayTipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_GeneralGrayTipInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_GeneralGrayTipInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 3}
}

func (x *OIDB_Type0857_GeneralGrayTipInfo) GetBusiType() uint64 {
	if x != nil {
		return x.BusiType
	}
	return 0
}

func (x *OIDB_Type0857_GeneralGrayTipInfo) GetBusiId() uint64 {
	if x != nil {
		return x.BusiId
	}
	return 0
}

func (x *OIDB_Type0857_GeneralGrayTipInfo) GetCtrlFlag() uint32 {
	if x != nil {
		return x.CtrlFlag
	}
	return 0
}

func (x *OIDB_Type0857_GeneralGrayTipInfo) GetC2CType() uint32 {
	if x != nil {
		return x.C2CType
	}
	return 0
}

func (x *OIDB_Type0857_GeneralGrayTipInfo) GetServiceType() uint32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *OIDB_Type0857_GeneralGrayTipInfo) GetTemplId() uint64 {
	if x != nil {
		return x.TemplId
	}
	return 0
}

func (x *OIDB_Type0857_GeneralGrayTipInfo) GetMessageTemplParam() []*OIDB_Type0857_TemplParam {
	if x != nil {
		return x.MessageTemplParam
	}
	return nil
}

func (x *OIDB_Type0857_GeneralGrayTipInfo) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *OIDB_Type0857_GeneralGrayTipInfo) GetTipsSeqId() uint64 {
	if x != nil {
		return x.TipsSeqId
	}
	return 0
}

func (x *OIDB_Type0857_GeneralGrayTipInfo) GetPbReserv() []byte {
	if x != nil {
		return x.PbReserv
	}
	return nil
}

// GoldMsgTipsElem
type OIDB_Type0857_GoldMsgTipsElem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`         // "type"
	Billno   string   `protobuf:"bytes,2,opt,name=billno,proto3" json:"billno,omitempty"`      // "billno"
	Result   uint32   `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`     // "result"
	Amount   uint32   `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`     // "amount"
	Total    uint32   `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`       // "total"
	Interval uint32   `protobuf:"varint,6,opt,name=interval,proto3" json:"interval,omitempty"` // "interval"
	Finish   uint32   `protobuf:"varint,7,opt,name=finish,proto3" json:"finish,omitempty"`     // "finish"
	Uin      []uint64 `protobuf:"varint,8,rep,packed,name=uin,proto3" json:"uin,omitempty"`    // "uin"
	Action   uint32   `protobuf:"varint,9,opt,name=action,proto3" json:"action,omitempty"`     // "action"
}

func (x *OIDB_Type0857_GoldMsgTipsElem) Reset() {
	*x = OIDB_Type0857_GoldMsgTipsElem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_GoldMsgTipsElem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_GoldMsgTipsElem) ProtoMessage() {}

func (x *OIDB_Type0857_GoldMsgTipsElem) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_GoldMsgTipsElem.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_GoldMsgTipsElem) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 4}
}

func (x *OIDB_Type0857_GoldMsgTipsElem) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OIDB_Type0857_GoldMsgTipsElem) GetBillno() string {
	if x != nil {
		return x.Billno
	}
	return ""
}

func (x *OIDB_Type0857_GoldMsgTipsElem) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *OIDB_Type0857_GoldMsgTipsElem) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OIDB_Type0857_GoldMsgTipsElem) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OIDB_Type0857_GoldMsgTipsElem) GetInterval() uint32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *OIDB_Type0857_GoldMsgTipsElem) GetFinish() uint32 {
	if x != nil {
		return x.Finish
	}
	return 0
}

func (x *OIDB_Type0857_GoldMsgTipsElem) GetUin() []uint64 {
	if x != nil {
		return x.Uin
	}
	return nil
}

func (x *OIDB_Type0857_GoldMsgTipsElem) GetAction() uint32 {
	if x != nil {
		return x.Action
	}
	return 0
}

// GrayData
type OIDB_Type0857_GrayData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllRead uint32 `protobuf:"varint,1,opt,name=all_read,json=allRead,proto3" json:"all_read,omitempty"` // "all_read"
	FeedId  string `protobuf:"bytes,2,opt,name=feed_id,json=feedId,proto3" json:"feed_id,omitempty"`     // "feed_id"
}

func (x *OIDB_Type0857_GrayData) Reset() {
	*x = OIDB_Type0857_GrayData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_GrayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_GrayData) ProtoMessage() {}

func (x *OIDB_Type0857_GrayData) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_GrayData.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_GrayData) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 5}
}

func (x *OIDB_Type0857_GrayData) GetAllRead() uint32 {
	if x != nil {
		return x.AllRead
	}
	return 0
}

func (x *OIDB_Type0857_GrayData) GetFeedId() string {
	if x != nil {
		return x.FeedId
	}
	return ""
}

// GroupAnnounceTBCInfo
type OIDB_Type0857_GroupAnnounceTBCInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedsId []byte `protobuf:"bytes,1,opt,name=feeds_id,json=feedsId,proto3" json:"feeds_id,omitempty"`  // "feeds_id"
	GroupId uint64 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` // "group_id"
	Action  uint32 `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`                  // "action"
}

func (x *OIDB_Type0857_GroupAnnounceTBCInfo) Reset() {
	*x = OIDB_Type0857_GroupAnnounceTBCInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_GroupAnnounceTBCInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_GroupAnnounceTBCInfo) ProtoMessage() {}

func (x *OIDB_Type0857_GroupAnnounceTBCInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_GroupAnnounceTBCInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_GroupAnnounceTBCInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 6}
}

func (x *OIDB_Type0857_GroupAnnounceTBCInfo) GetFeedsId() []byte {
	if x != nil {
		return x.FeedsId
	}
	return nil
}

func (x *OIDB_Type0857_GroupAnnounceTBCInfo) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *OIDB_Type0857_GroupAnnounceTBCInfo) GetAction() uint32 {
	if x != nil {
		return x.Action
	}
	return 0
}

// GroupAsyncNotify
type OIDB_Type0857_GroupAsyncNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType uint32 `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"` // "uint32_msg_type"
	MessageSeq  uint64 `protobuf:"varint,2,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`    // "uint64_msg_seq"
}

func (x *OIDB_Type0857_GroupAsyncNotify) Reset() {
	*x = OIDB_Type0857_GroupAsyncNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_GroupAsyncNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_GroupAsyncNotify) ProtoMessage() {}

func (x *OIDB_Type0857_GroupAsyncNotify) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_GroupAsyncNotify.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_GroupAsyncNotify) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 7}
}

func (x *OIDB_Type0857_GroupAsyncNotify) GetMessageType() uint32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *OIDB_Type0857_GroupAsyncNotify) GetMessageSeq() uint64 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

// GroupInfoChange
type OIDB_Type0857_GroupInfoChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupHonorSwitch       uint32 `protobuf:"varint,1,opt,name=group_honor_switch,json=groupHonorSwitch,proto3" json:"group_honor_switch,omitempty"`                     // "uint32_group_honor_switch"
	GroupMemberLevelSwitch uint32 `protobuf:"varint,2,opt,name=group_member_level_switch,json=groupMemberLevelSwitch,proto3" json:"group_member_level_switch,omitempty"` // "uint32_group_member_level_switch"
	GroupFlagext4          uint32 `protobuf:"varint,3,opt,name=group_flagext4,json=groupFlagext4,proto3" json:"group_flagext4,omitempty"`                                // "uint32_group_flagext4"
	AppealDeadline         uint32 `protobuf:"varint,4,opt,name=appeal_deadline,json=appealDeadline,proto3" json:"appeal_deadline,omitempty"`                             // "uint32_appeal_deadline"
	GroupFlag              uint32 `protobuf:"varint,5,opt,name=group_flag,json=groupFlag,proto3" json:"group_flag,omitempty"`                                            // "uint32_group_flag"
	GroupFlagext3          uint32 `protobuf:"varint,7,opt,name=group_flagext3,json=groupFlagext3,proto3" json:"group_flagext3,omitempty"`                                // "uint32_group_flagext3"
	GroupClassExt          uint32 `protobuf:"varint,8,opt,name=group_class_ext,json=groupClassExt,proto3" json:"group_class_ext,omitempty"`                              // "uint32_group_class_ext"
	GroupInfoExtSeq        uint32 `protobuf:"varint,9,opt,name=group_info_ext_seq,json=groupInfoExtSeq,proto3" json:"group_info_ext_seq,omitempty"`                      // "uint32_group_info_ext_seq"
}

func (x *OIDB_Type0857_GroupInfoChange) Reset() {
	*x = OIDB_Type0857_GroupInfoChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_GroupInfoChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_GroupInfoChange) ProtoMessage() {}

func (x *OIDB_Type0857_GroupInfoChange) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_GroupInfoChange.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_GroupInfoChange) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 8}
}

func (x *OIDB_Type0857_GroupInfoChange) GetGroupHonorSwitch() uint32 {
	if x != nil {
		return x.GroupHonorSwitch
	}
	return 0
}

func (x *OIDB_Type0857_GroupInfoChange) GetGroupMemberLevelSwitch() uint32 {
	if x != nil {
		return x.GroupMemberLevelSwitch
	}
	return 0
}

func (x *OIDB_Type0857_GroupInfoChange) GetGroupFlagext4() uint32 {
	if x != nil {
		return x.GroupFlagext4
	}
	return 0
}

func (x *OIDB_Type0857_GroupInfoChange) GetAppealDeadline() uint32 {
	if x != nil {
		return x.AppealDeadline
	}
	return 0
}

func (x *OIDB_Type0857_GroupInfoChange) GetGroupFlag() uint32 {
	if x != nil {
		return x.GroupFlag
	}
	return 0
}

func (x *OIDB_Type0857_GroupInfoChange) GetGroupFlagext3() uint32 {
	if x != nil {
		return x.GroupFlagext3
	}
	return 0
}

func (x *OIDB_Type0857_GroupInfoChange) GetGroupClassExt() uint32 {
	if x != nil {
		return x.GroupClassExt
	}
	return 0
}

func (x *OIDB_Type0857_GroupInfoChange) GetGroupInfoExtSeq() uint32 {
	if x != nil {
		return x.GroupInfoExtSeq
	}
	return 0
}

// GroupNotifyInfo
type OIDB_Type0857_GroupNotifyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoPullFlag *uint32 `protobuf:"varint,1,opt,name=auto_pull_flag,json=autoPullFlag,proto3,oneof" json:"auto_pull_flag,omitempty"` // "opt_uint32_auto_pull_flag"
	FeedsId      []byte  `protobuf:"bytes,2,opt,name=feeds_id,json=feedsId,proto3,oneof" json:"feeds_id,omitempty"`                   // "opt_bytes_feeds_id"
}

func (x *OIDB_Type0857_GroupNotifyInfo) Reset() {
	*x = OIDB_Type0857_GroupNotifyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_GroupNotifyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_GroupNotifyInfo) ProtoMessage() {}

func (x *OIDB_Type0857_GroupNotifyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_GroupNotifyInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_GroupNotifyInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 9}
}

func (x *OIDB_Type0857_GroupNotifyInfo) GetAutoPullFlag() uint32 {
	if x != nil && x.AutoPullFlag != nil {
		return *x.AutoPullFlag
	}
	return 0
}

func (x *OIDB_Type0857_GroupNotifyInfo) GetFeedsId() []byte {
	if x != nil {
		return x.FeedsId
	}
	return nil
}

// InstCtrl
type OIDB_Type0857_InstanceControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageSendToInst  []*OIDB_Type0857_InstanceInfo `protobuf:"bytes,1,rep,name=message_send_to_inst,json=messageSendToInst,proto3" json:"message_send_to_inst,omitempty"`  // "rpt_msg_send_to_inst"
	MessageExcludeInst []*OIDB_Type0857_InstanceInfo `protobuf:"bytes,2,rep,name=message_exclude_inst,json=messageExcludeInst,proto3" json:"message_exclude_inst,omitempty"` // "rpt_msg_exclude_inst"
	MessageFromInst    *OIDB_Type0857_InstanceInfo   `protobuf:"bytes,3,opt,name=message_from_inst,json=messageFromInst,proto3" json:"message_from_inst,omitempty"`          // "msg_from_inst"
}

func (x *OIDB_Type0857_InstanceControl) Reset() {
	*x = OIDB_Type0857_InstanceControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_InstanceControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_InstanceControl) ProtoMessage() {}

func (x *OIDB_Type0857_InstanceControl) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_InstanceControl.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_InstanceControl) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 10}
}

func (x *OIDB_Type0857_InstanceControl) GetMessageSendToInst() []*OIDB_Type0857_InstanceInfo {
	if x != nil {
		return x.MessageSendToInst
	}
	return nil
}

func (x *OIDB_Type0857_InstanceControl) GetMessageExcludeInst() []*OIDB_Type0857_InstanceInfo {
	if x != nil {
		return x.MessageExcludeInst
	}
	return nil
}

func (x *OIDB_Type0857_InstanceControl) GetMessageFromInst() *OIDB_Type0857_InstanceInfo {
	if x != nil {
		return x.MessageFromInst
	}
	return nil
}

// InstInfo
type OIDB_Type0857_InstanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apppid    uint32 `protobuf:"varint,1,opt,name=apppid,proto3" json:"apppid,omitempty"`                        // "uint32_apppid"
	Instid    uint32 `protobuf:"varint,2,opt,name=instid,proto3" json:"instid,omitempty"`                        // "uint32_instid"
	Platform  uint32 `protobuf:"varint,3,opt,name=platform,proto3" json:"platform,omitempty"`                    // "uint32_platform"
	OpenAppid uint32 `protobuf:"varint,4,opt,name=open_appid,json=openAppid,proto3" json:"open_appid,omitempty"` // "uint32_open_appid"
	Productid uint32 `protobuf:"varint,5,opt,name=productid,proto3" json:"productid,omitempty"`                  // "uint32_productid"
	SsoBid    uint32 `protobuf:"varint,6,opt,name=sso_bid,json=ssoBid,proto3" json:"sso_bid,omitempty"`          // "uint32_sso_bid"
	Guid      []byte `protobuf:"bytes,7,opt,name=guid,proto3" json:"guid,omitempty"`                             // "bytes_guid"
	VerMin    uint32 `protobuf:"varint,8,opt,name=ver_min,json=verMin,proto3" json:"ver_min,omitempty"`          // "uint32_ver_min"
	VerMax    uint32 `protobuf:"varint,9,opt,name=ver_max,json=verMax,proto3" json:"ver_max,omitempty"`          // "uint32_ver_max"
}

func (x *OIDB_Type0857_InstanceInfo) Reset() {
	*x = OIDB_Type0857_InstanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_InstanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_InstanceInfo) ProtoMessage() {}

func (x *OIDB_Type0857_InstanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_InstanceInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_InstanceInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 11}
}

func (x *OIDB_Type0857_InstanceInfo) GetApppid() uint32 {
	if x != nil {
		return x.Apppid
	}
	return 0
}

func (x *OIDB_Type0857_InstanceInfo) GetInstid() uint32 {
	if x != nil {
		return x.Instid
	}
	return 0
}

func (x *OIDB_Type0857_InstanceInfo) GetPlatform() uint32 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *OIDB_Type0857_InstanceInfo) GetOpenAppid() uint32 {
	if x != nil {
		return x.OpenAppid
	}
	return 0
}

func (x *OIDB_Type0857_InstanceInfo) GetProductid() uint32 {
	if x != nil {
		return x.Productid
	}
	return 0
}

func (x *OIDB_Type0857_InstanceInfo) GetSsoBid() uint32 {
	if x != nil {
		return x.SsoBid
	}
	return 0
}

func (x *OIDB_Type0857_InstanceInfo) GetGuid() []byte {
	if x != nil {
		return x.Guid
	}
	return nil
}

func (x *OIDB_Type0857_InstanceInfo) GetVerMin() uint32 {
	if x != nil {
		return x.VerMin
	}
	return 0
}

func (x *OIDB_Type0857_InstanceInfo) GetVerMax() uint32 {
	if x != nil {
		return x.VerMax
	}
	return 0
}

// LbsShareChangePushInfo
type OIDB_Type0857_LbsShareChangePushInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType uint32 `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"` // "uint32_msg_type"
	MessageInfo []byte `protobuf:"bytes,2,opt,name=message_info,json=messageInfo,proto3" json:"message_info,omitempty"`  // "bytes_msg_info"
	VersionCtrl []byte `protobuf:"bytes,3,opt,name=version_ctrl,json=versionCtrl,proto3" json:"version_ctrl,omitempty"`  // "bytes_version_ctrl"
	GroupId     uint64 `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`             // "uint64_group_id"
	OperUin     uint64 `protobuf:"varint,5,opt,name=oper_uin,json=operUin,proto3" json:"oper_uin,omitempty"`             // "uint64_oper_uin"
	GrayTips    []byte `protobuf:"bytes,6,opt,name=gray_tips,json=grayTips,proto3" json:"gray_tips,omitempty"`           // "bytes_gray_tips"
	MessageSeq  uint64 `protobuf:"varint,7,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`    // "uint64_msg_seq"
	JoinNums    uint32 `protobuf:"varint,8,opt,name=join_nums,json=joinNums,proto3" json:"join_nums,omitempty"`          // "uint32_join_nums"
	PushType    uint32 `protobuf:"varint,99,opt,name=push_type,json=pushType,proto3" json:"push_type,omitempty"`         // "uint32_push_type"
	ExtInfo     []byte `protobuf:"bytes,100,opt,name=ext_info,json=extInfo,proto3" json:"ext_info,omitempty"`            // "bytes_ext_info"
}

func (x *OIDB_Type0857_LbsShareChangePushInfo) Reset() {
	*x = OIDB_Type0857_LbsShareChangePushInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_LbsShareChangePushInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_LbsShareChangePushInfo) ProtoMessage() {}

func (x *OIDB_Type0857_LbsShareChangePushInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_LbsShareChangePushInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_LbsShareChangePushInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 12}
}

func (x *OIDB_Type0857_LbsShareChangePushInfo) GetMessageType() uint32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *OIDB_Type0857_LbsShareChangePushInfo) GetMessageInfo() []byte {
	if x != nil {
		return x.MessageInfo
	}
	return nil
}

func (x *OIDB_Type0857_LbsShareChangePushInfo) GetVersionCtrl() []byte {
	if x != nil {
		return x.VersionCtrl
	}
	return nil
}

func (x *OIDB_Type0857_LbsShareChangePushInfo) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *OIDB_Type0857_LbsShareChangePushInfo) GetOperUin() uint64 {
	if x != nil {
		return x.OperUin
	}
	return 0
}

func (x *OIDB_Type0857_LbsShareChangePushInfo) GetGrayTips() []byte {
	if x != nil {
		return x.GrayTips
	}
	return nil
}

func (x *OIDB_Type0857_LbsShareChangePushInfo) GetMessageSeq() uint64 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

func (x *OIDB_Type0857_LbsShareChangePushInfo) GetJoinNums() uint32 {
	if x != nil {
		return x.JoinNums
	}
	return 0
}

func (x *OIDB_Type0857_LbsShareChangePushInfo) GetPushType() uint32 {
	if x != nil {
		return x.PushType
	}
	return 0
}

func (x *OIDB_Type0857_LbsShareChangePushInfo) GetExtInfo() []byte {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

// LuckyBagNotify
type OIDB_Type0857_LuckyBagNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageTips []byte `protobuf:"bytes,1,opt,name=message_tips,json=messageTips,proto3" json:"message_tips,omitempty"` // "bytes_msg_tips"
}

func (x *OIDB_Type0857_LuckyBagNotify) Reset() {
	*x = OIDB_Type0857_LuckyBagNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_LuckyBagNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_LuckyBagNotify) ProtoMessage() {}

func (x *OIDB_Type0857_LuckyBagNotify) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_LuckyBagNotify.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_LuckyBagNotify) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 13}
}

func (x *OIDB_Type0857_LuckyBagNotify) GetMessageTips() []byte {
	if x != nil {
		return x.MessageTips
	}
	return nil
}

// MediaChangePushInfo
type OIDB_Type0857_MediaChangePushInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType       uint32                                             `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`                    // "uint32_msg_type"
	MessageInfo       []byte                                             `protobuf:"bytes,2,opt,name=message_info,json=messageInfo,proto3" json:"message_info,omitempty"`                     // "bytes_msg_info"
	VersionCtrl       []byte                                             `protobuf:"bytes,3,opt,name=version_ctrl,json=versionCtrl,proto3" json:"version_ctrl,omitempty"`                     // "bytes_version_ctrl"
	GroupId           uint64                                             `protobuf:"varint,4,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`                                // "uint64_group_id"
	OperUin           uint64                                             `protobuf:"varint,5,opt,name=oper_uin,json=operUin,proto3" json:"oper_uin,omitempty"`                                // "uint64_oper_uin"
	GrayTips          []byte                                             `protobuf:"bytes,6,opt,name=gray_tips,json=grayTips,proto3" json:"gray_tips,omitempty"`                              // "bytes_gray_tips"
	MessageSeq        uint64                                             `protobuf:"varint,7,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`                       // "uint64_msg_seq"
	JoinNums          uint32                                             `protobuf:"varint,8,opt,name=join_nums,json=joinNums,proto3" json:"join_nums,omitempty"`                             // "uint32_join_nums"
	MessagePerSetting *OIDB_Type0857_MediaChangePushInfo_PersonalSetting `protobuf:"bytes,9,opt,name=message_per_setting,json=messagePerSetting,proto3" json:"message_per_setting,omitempty"` // "msg_per_setting"
	PlayMode          uint32                                             `protobuf:"varint,10,opt,name=play_mode,json=playMode,proto3" json:"play_mode,omitempty"`                            // "uint32_play_mode"
	IsJoinWhenStart   bool                                               `protobuf:"varint,11,opt,name=is_join_when_start,json=isJoinWhenStart,proto3" json:"is_join_when_start,omitempty"`   // "is_join_when_start"
	MediaType         uint32                                             `protobuf:"varint,99,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`                         // "uint32_media_type"
	ExtInfo           []byte                                             `protobuf:"bytes,100,opt,name=ext_info,json=extInfo,proto3" json:"ext_info,omitempty"`                               // "bytes_ext_info"
}

func (x *OIDB_Type0857_MediaChangePushInfo) Reset() {
	*x = OIDB_Type0857_MediaChangePushInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_MediaChangePushInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_MediaChangePushInfo) ProtoMessage() {}

func (x *OIDB_Type0857_MediaChangePushInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_MediaChangePushInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_MediaChangePushInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 14}
}

func (x *OIDB_Type0857_MediaChangePushInfo) GetMessageType() uint32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *OIDB_Type0857_MediaChangePushInfo) GetMessageInfo() []byte {
	if x != nil {
		return x.MessageInfo
	}
	return nil
}

func (x *OIDB_Type0857_MediaChangePushInfo) GetVersionCtrl() []byte {
	if x != nil {
		return x.VersionCtrl
	}
	return nil
}

func (x *OIDB_Type0857_MediaChangePushInfo) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *OIDB_Type0857_MediaChangePushInfo) GetOperUin() uint64 {
	if x != nil {
		return x.OperUin
	}
	return 0
}

func (x *OIDB_Type0857_MediaChangePushInfo) GetGrayTips() []byte {
	if x != nil {
		return x.GrayTips
	}
	return nil
}

func (x *OIDB_Type0857_MediaChangePushInfo) GetMessageSeq() uint64 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

func (x *OIDB_Type0857_MediaChangePushInfo) GetJoinNums() uint32 {
	if x != nil {
		return x.JoinNums
	}
	return 0
}

func (x *OIDB_Type0857_MediaChangePushInfo) GetMessagePerSetting() *OIDB_Type0857_MediaChangePushInfo_PersonalSetting {
	if x != nil {
		return x.MessagePerSetting
	}
	return nil
}

func (x *OIDB_Type0857_MediaChangePushInfo) GetPlayMode() uint32 {
	if x != nil {
		return x.PlayMode
	}
	return 0
}

func (x *OIDB_Type0857_MediaChangePushInfo) GetIsJoinWhenStart() bool {
	if x != nil {
		return x.IsJoinWhenStart
	}
	return false
}

func (x *OIDB_Type0857_MediaChangePushInfo) GetMediaType() uint32 {
	if x != nil {
		return x.MediaType
	}
	return 0
}

func (x *OIDB_Type0857_MediaChangePushInfo) GetExtInfo() []byte {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

// MessageBoxInfo
type OIDB_Type0857_MessageBoxInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3,oneof" json:"content,omitempty"` // "opt_bytes_content"
	Title   []byte `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`     // "opt_bytes_title"
	Button  []byte `protobuf:"bytes,3,opt,name=button,proto3,oneof" json:"button,omitempty"`   // "opt_bytes_button"
}

func (x *OIDB_Type0857_MessageBoxInfo) Reset() {
	*x = OIDB_Type0857_MessageBoxInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_MessageBoxInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_MessageBoxInfo) ProtoMessage() {}

func (x *OIDB_Type0857_MessageBoxInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_MessageBoxInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_MessageBoxInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 15}
}

func (x *OIDB_Type0857_MessageBoxInfo) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *OIDB_Type0857_MessageBoxInfo) GetTitle() []byte {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *OIDB_Type0857_MessageBoxInfo) GetButton() []byte {
	if x != nil {
		return x.Button
	}
	return nil
}

// MessageRecallReminder
type OIDB_Type0857_RecallReminder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin             int64                                       `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`                                               // "uint64_uin"
	Nickname        string                                      `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                                      // "bytes_nickname"
	Messages        []*OIDB_Type0857_RecallReminder_MessageInfo `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`                                      // "uint32_recalled_msg_list"
	ReminderContent []byte                                      `protobuf:"bytes,4,opt,name=reminder_content,json=reminderContent,proto3" json:"reminder_content,omitempty"` // "str_reminder_content"
	UserDefine      []byte                                      `protobuf:"bytes,5,opt,name=user_define,json=userDefine,proto3" json:"user_define,omitempty"`                // "bytes_userdef"
	GroupType       uint32                                      `protobuf:"varint,6,opt,name=group_type,json=groupType,proto3" json:"group_type,omitempty"`                  // "uint32_group_type"
	OpType          uint32                                      `protobuf:"varint,7,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty"`                           // "uint32_op_type"
	AdminUin        int64                                       `protobuf:"varint,8,opt,name=admin_uin,json=adminUin,proto3" json:"admin_uin,omitempty"`                     // "uint64_admin_uin"
	Wording         *MessageService_WithdrawWordingInfo         `protobuf:"bytes,9,opt,name=wording,proto3" json:"wording,omitempty"`                                        // "msg_wording_info"
}

func (x *OIDB_Type0857_RecallReminder) Reset() {
	*x = OIDB_Type0857_RecallReminder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_RecallReminder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_RecallReminder) ProtoMessage() {}

func (x *OIDB_Type0857_RecallReminder) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_RecallReminder.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_RecallReminder) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 16}
}

func (x *OIDB_Type0857_RecallReminder) GetUin() int64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *OIDB_Type0857_RecallReminder) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *OIDB_Type0857_RecallReminder) GetMessages() []*OIDB_Type0857_RecallReminder_MessageInfo {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *OIDB_Type0857_RecallReminder) GetReminderContent() []byte {
	if x != nil {
		return x.ReminderContent
	}
	return nil
}

func (x *OIDB_Type0857_RecallReminder) GetUserDefine() []byte {
	if x != nil {
		return x.UserDefine
	}
	return nil
}

func (x *OIDB_Type0857_RecallReminder) GetGroupType() uint32 {
	if x != nil {
		return x.GroupType
	}
	return 0
}

func (x *OIDB_Type0857_RecallReminder) GetOpType() uint32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

func (x *OIDB_Type0857_RecallReminder) GetAdminUin() int64 {
	if x != nil {
		return x.AdminUin
	}
	return 0
}

func (x *OIDB_Type0857_RecallReminder) GetWording() *MessageService_WithdrawWordingInfo {
	if x != nil {
		return x.Wording
	}
	return nil
}

// MiniAppNotify
type OIDB_Type0857_MiniAppNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg []byte `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"` // "bytes_msg"
}

func (x *OIDB_Type0857_MiniAppNotify) Reset() {
	*x = OIDB_Type0857_MiniAppNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_MiniAppNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_MiniAppNotify) ProtoMessage() {}

func (x *OIDB_Type0857_MiniAppNotify) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_MiniAppNotify.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_MiniAppNotify) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 17}
}

func (x *OIDB_Type0857_MiniAppNotify) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

// NotifyMsgBody
type OIDB_Type0857_NotifyMessageBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                *uint32                                  `protobuf:"varint,1,opt,name=type,proto3,oneof" json:"type,omitempty"`                                                            // "opt_enum_type" Enum
	MessageTime         *int64                                   `protobuf:"varint,2,opt,name=message_time,json=messageTime,proto3,oneof" json:"message_time,omitempty"`                           // "opt_uint64_msg_time"
	MessageExpires      *int64                                   `protobuf:"varint,3,opt,name=message_expires,json=messageExpires,proto3,oneof" json:"message_expires,omitempty"`                  // "opt_uint64_msg_expires"
	GroupCode           *int64                                   `protobuf:"varint,4,opt,name=group_code,json=groupCode,proto3,oneof" json:"group_code,omitempty"`                                 // "opt_uint64_group_code"
	GrayTips            *OIDB_Type0857_GrayTipsInfo              `protobuf:"bytes,5,opt,name=gray_tips,json=grayTips,proto3,oneof" json:"gray_tips,omitempty"`                                     // "opt_msg_graytips"
	MessageBox          *OIDB_Type0857_MessageBoxInfo            `protobuf:"bytes,6,opt,name=message_box,json=messageBox,proto3,oneof" json:"message_box,omitempty"`                               // "opt_msg_messagebox"
	FloatedTips         *OIDB_Type0857_FloatedTipsInfo           `protobuf:"bytes,7,opt,name=floated_tips,json=floatedTips,proto3,oneof" json:"floated_tips,omitempty"`                            // "opt_msg_floatedtips"
	TopTips             *OIDB_Type0857_TopTipsInfo               `protobuf:"bytes,8,opt,name=top_tips,json=topTips,proto3,oneof" json:"top_tips,omitempty"`                                        // "opt_msg_toptips"
	RedTips             *OIDB_Type0857_RedGrayTipsInfo           `protobuf:"bytes,9,opt,name=red_tips,json=redTips,proto3,oneof" json:"red_tips,omitempty"`                                        // "opt_msg_redtips"
	GroupNotify         *OIDB_Type0857_GroupNotifyInfo           `protobuf:"bytes,10,opt,name=group_notify,json=groupNotify,proto3,oneof" json:"group_notify,omitempty"`                           // "opt_msg_group_notify"
	Recall              *OIDB_Type0857_RecallReminder            `protobuf:"bytes,11,opt,name=recall,proto3,oneof" json:"recall,omitempty"`                                                        // "opt_msg_recall"
	ThemeNotify         *OIDB_Type0857_ThemeStateNotify          `protobuf:"bytes,12,opt,name=theme_notify,json=themeNotify,proto3,oneof" json:"theme_notify,omitempty"`                           // "opt_msg_theme_notify"
	ServiceType         uint32                                   `protobuf:"varint,13,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`                                // "uint32_service_type"
	ObjectMessageUpdate *OIDB_Type0857_NotifyObjectMessageUpdate `protobuf:"bytes,14,opt,name=object_message_update,json=objectMessageUpdate,proto3,oneof" json:"object_message_update,omitempty"` // "opt_msg_objmsg_update"
	WerewolfPush        *OIDB_Type0857_WereWolfPush              `protobuf:"bytes,15,opt,name=werewolf_push,json=werewolfPush,proto3,oneof" json:"werewolf_push,omitempty"`                        // "opt_msg_werewolf_push"
	// optional apollo_game_status.STCMGameMessage stcm_game_state = 16; // "opt_stcm_game_state"
	// apollo_push_msgInfo.STPushMsgElem apllo_msg_push = 17; // "apllo_msg_push"
	GoldTips                  *OIDB_Type0857_GoldMsgTipsElem            `protobuf:"bytes,18,opt,name=gold_tips,json=goldTips,proto3,oneof" json:"gold_tips,omitempty"`                                                        // "opt_msg_goldtips"
	MiniAppNotify             *OIDB_Type0857_MiniAppNotify              `protobuf:"bytes,20,opt,name=mini_app_notify,json=miniAppNotify,proto3,oneof" json:"mini_app_notify,omitempty"`                                       // "opt_msg_miniapp_notify"
	SenderUin                 *uint64                                   `protobuf:"varint,21,opt,name=sender_uin,json=senderUin,proto3,oneof" json:"sender_uin,omitempty"`                                                    // "opt_uint64_sender_uin"
	LuckyBagNotify            *OIDB_Type0857_LuckyBagNotify             `protobuf:"bytes,22,opt,name=lucky_bag_notify,json=luckyBagNotify,proto3,oneof" json:"lucky_bag_notify,omitempty"`                                    // "opt_msg_luckybag_notify"
	TroopFormTipsPush         *OIDB_Type0857_TroopFormGrayTipsInfo      `protobuf:"bytes,23,opt,name=troop_form_tips_push,json=troopFormTipsPush,proto3,oneof" json:"troop_form_tips_push,omitempty"`                         // "opt_msg_troopformtips_push"
	MediaPush                 *OIDB_Type0857_MediaChangePushInfo        `protobuf:"bytes,24,opt,name=media_push,json=mediaPush,proto3,oneof" json:"media_push,omitempty"`                                                     // "opt_msg_media_push"
	GeneralGrayTip            *OIDB_Type0857_GeneralGrayTipInfo         `protobuf:"bytes,26,opt,name=general_gray_tip,json=generalGrayTip,proto3,oneof" json:"general_gray_tip,omitempty"`                                    // "opt_general_gray_tip"
	VideoPush                 *OIDB_Type0857_VideoChangePushInfo        `protobuf:"bytes,27,opt,name=video_push,json=videoPush,proto3,oneof" json:"video_push,omitempty"`                                                     // "opt_msg_video_push"
	LbsShareChangePlusInfo    *OIDB_Type0857_LbsShareChangePushInfo     `protobuf:"bytes,28,opt,name=lbs_share_change_plus_info,json=lbsShareChangePlusInfo,proto3,oneof" json:"lbs_share_change_plus_info,omitempty"`        // "opt_lbs_share_change_plus_info"
	SingPush                  *OIDB_Type0857_SingChangePushInfo         `protobuf:"bytes,29,opt,name=sing_push,json=singPush,proto3,oneof" json:"sing_push,omitempty"`                                                        // "opt_msg_sing_push"
	GroupInfoChange           *OIDB_Type0857_GroupInfoChange            `protobuf:"bytes,30,opt,name=group_info_change,json=groupInfoChange,proto3,oneof" json:"group_info_change,omitempty"`                                 // "opt_msg_group_info_change"
	GroupAnnounceTbcInfo      *OIDB_Type0857_GroupAnnounceTBCInfo       `protobuf:"bytes,31,opt,name=group_announce_tbc_info,json=groupAnnounceTbcInfo,proto3,oneof" json:"group_announce_tbc_info,omitempty"`                // "opt_group_announce_tbc_info"
	QqVedioGamePushInfo       *OIDB_Type0857_QQVedioGamePushInfo        `protobuf:"bytes,32,opt,name=qq_vedio_game_push_info,json=qqVedioGamePushInfo,proto3,oneof" json:"qq_vedio_game_push_info,omitempty"`                 // "opt_qq_vedio_game_push_info"
	QqGroupDigestMessage      *OIDB_Type0857_QQGroupDigestMsg           `protobuf:"bytes,33,opt,name=qq_group_digest_message,json=qqGroupDigestMessage,proto3,oneof" json:"qq_group_digest_message,omitempty"`                // "opt_qq_group_digest_msg"
	StudyRoomMemberMessage    *OIDB_Type0857_StudyRoomMemberChangePush  `protobuf:"bytes,34,opt,name=study_room_member_message,json=studyRoomMemberMessage,proto3,oneof" json:"study_room_member_message,omitempty"`          // "opt_study_room_member_msg"
	QqLiveNotify              *OIDB_Type0857_QQVaLiveNotifyMsg          `protobuf:"bytes,35,opt,name=qq_live_notify,json=qqLiveNotify,proto3,oneof" json:"qq_live_notify,omitempty"`                                          // "opt_qq_live_notify"
	GroupAsyncNotidy          *OIDB_Type0857_GroupAsyncNotify           `protobuf:"bytes,36,opt,name=group_async_notidy,json=groupAsyncNotidy,proto3,oneof" json:"group_async_notidy,omitempty"`                              // "opt_group_async_notidy"
	GroupCurrentMessageSeq    *uint64                                   `protobuf:"varint,37,opt,name=group_current_message_seq,json=groupCurrentMessageSeq,proto3,oneof" json:"group_current_message_seq,omitempty"`         // "opt_uint64_group_cur_msg_seq"
	GroupDigestMessageSummary *OIDB_Type0857_QQGroupDigestMsgSummary    `protobuf:"bytes,38,opt,name=group_digest_message_summary,json=groupDigestMessageSummary,proto3,oneof" json:"group_digest_message_summary,omitempty"` // "opt_group_digest_msg_summary"
	SysdbMessageId            *uint64                                   `protobuf:"varint,39,opt,name=sysdb_message_id,json=sysdbMessageId,proto3,oneof" json:"sysdb_message_id,omitempty"`                                   // "opt_uint64_sysdb_msg_id"
	RevertGrayTipsTraceless   *OIDB_Type0857_RevertGrayTipsMsgTraceless `protobuf:"bytes,40,opt,name=revert_gray_tips_traceless,json=revertGrayTipsTraceless,proto3,oneof" json:"revert_gray_tips_traceless,omitempty"`       // "opt_revert_graytips_traceless"
}

func (x *OIDB_Type0857_NotifyMessageBody) Reset() {
	*x = OIDB_Type0857_NotifyMessageBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_NotifyMessageBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_NotifyMessageBody) ProtoMessage() {}

func (x *OIDB_Type0857_NotifyMessageBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_NotifyMessageBody.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_NotifyMessageBody) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 18}
}

func (x *OIDB_Type0857_NotifyMessageBody) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *OIDB_Type0857_NotifyMessageBody) GetMessageTime() int64 {
	if x != nil && x.MessageTime != nil {
		return *x.MessageTime
	}
	return 0
}

func (x *OIDB_Type0857_NotifyMessageBody) GetMessageExpires() int64 {
	if x != nil && x.MessageExpires != nil {
		return *x.MessageExpires
	}
	return 0
}

func (x *OIDB_Type0857_NotifyMessageBody) GetGroupCode() int64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *OIDB_Type0857_NotifyMessageBody) GetGrayTips() *OIDB_Type0857_GrayTipsInfo {
	if x != nil {
		return x.GrayTips
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetMessageBox() *OIDB_Type0857_MessageBoxInfo {
	if x != nil {
		return x.MessageBox
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetFloatedTips() *OIDB_Type0857_FloatedTipsInfo {
	if x != nil {
		return x.FloatedTips
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetTopTips() *OIDB_Type0857_TopTipsInfo {
	if x != nil {
		return x.TopTips
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetRedTips() *OIDB_Type0857_RedGrayTipsInfo {
	if x != nil {
		return x.RedTips
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetGroupNotify() *OIDB_Type0857_GroupNotifyInfo {
	if x != nil {
		return x.GroupNotify
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetRecall() *OIDB_Type0857_RecallReminder {
	if x != nil {
		return x.Recall
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetThemeNotify() *OIDB_Type0857_ThemeStateNotify {
	if x != nil {
		return x.ThemeNotify
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetServiceType() uint32 {
	if x != nil {
		return x.ServiceType
	}
	return 0
}

func (x *OIDB_Type0857_NotifyMessageBody) GetObjectMessageUpdate() *OIDB_Type0857_NotifyObjectMessageUpdate {
	if x != nil {
		return x.ObjectMessageUpdate
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetWerewolfPush() *OIDB_Type0857_WereWolfPush {
	if x != nil {
		return x.WerewolfPush
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetGoldTips() *OIDB_Type0857_GoldMsgTipsElem {
	if x != nil {
		return x.GoldTips
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetMiniAppNotify() *OIDB_Type0857_MiniAppNotify {
	if x != nil {
		return x.MiniAppNotify
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetSenderUin() uint64 {
	if x != nil && x.SenderUin != nil {
		return *x.SenderUin
	}
	return 0
}

func (x *OIDB_Type0857_NotifyMessageBody) GetLuckyBagNotify() *OIDB_Type0857_LuckyBagNotify {
	if x != nil {
		return x.LuckyBagNotify
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetTroopFormTipsPush() *OIDB_Type0857_TroopFormGrayTipsInfo {
	if x != nil {
		return x.TroopFormTipsPush
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetMediaPush() *OIDB_Type0857_MediaChangePushInfo {
	if x != nil {
		return x.MediaPush
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetGeneralGrayTip() *OIDB_Type0857_GeneralGrayTipInfo {
	if x != nil {
		return x.GeneralGrayTip
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetVideoPush() *OIDB_Type0857_VideoChangePushInfo {
	if x != nil {
		return x.VideoPush
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetLbsShareChangePlusInfo() *OIDB_Type0857_LbsShareChangePushInfo {
	if x != nil {
		return x.LbsShareChangePlusInfo
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetSingPush() *OIDB_Type0857_SingChangePushInfo {
	if x != nil {
		return x.SingPush
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetGroupInfoChange() *OIDB_Type0857_GroupInfoChange {
	if x != nil {
		return x.GroupInfoChange
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetGroupAnnounceTbcInfo() *OIDB_Type0857_GroupAnnounceTBCInfo {
	if x != nil {
		return x.GroupAnnounceTbcInfo
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetQqVedioGamePushInfo() *OIDB_Type0857_QQVedioGamePushInfo {
	if x != nil {
		return x.QqVedioGamePushInfo
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetQqGroupDigestMessage() *OIDB_Type0857_QQGroupDigestMsg {
	if x != nil {
		return x.QqGroupDigestMessage
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetStudyRoomMemberMessage() *OIDB_Type0857_StudyRoomMemberChangePush {
	if x != nil {
		return x.StudyRoomMemberMessage
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetQqLiveNotify() *OIDB_Type0857_QQVaLiveNotifyMsg {
	if x != nil {
		return x.QqLiveNotify
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetGroupAsyncNotidy() *OIDB_Type0857_GroupAsyncNotify {
	if x != nil {
		return x.GroupAsyncNotidy
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetGroupCurrentMessageSeq() uint64 {
	if x != nil && x.GroupCurrentMessageSeq != nil {
		return *x.GroupCurrentMessageSeq
	}
	return 0
}

func (x *OIDB_Type0857_NotifyMessageBody) GetGroupDigestMessageSummary() *OIDB_Type0857_QQGroupDigestMsgSummary {
	if x != nil {
		return x.GroupDigestMessageSummary
	}
	return nil
}

func (x *OIDB_Type0857_NotifyMessageBody) GetSysdbMessageId() uint64 {
	if x != nil && x.SysdbMessageId != nil {
		return *x.SysdbMessageId
	}
	return 0
}

func (x *OIDB_Type0857_NotifyMessageBody) GetRevertGrayTipsTraceless() *OIDB_Type0857_RevertGrayTipsMsgTraceless {
	if x != nil {
		return x.RevertGrayTipsTraceless
	}
	return nil
}

// NotifyObjmsgUpdate
type OIDB_Type0857_NotifyObjectMessageUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjMessageId []byte `protobuf:"bytes,1,opt,name=obj_message_id,json=objMessageId,proto3" json:"obj_message_id,omitempty"` // "bytes_objmsg_id"
	UpdateType   uint32 `protobuf:"varint,2,opt,name=update_type,json=updateType,proto3" json:"update_type,omitempty"`        // "uint32_update_type"
	ExtraMessage []byte `protobuf:"bytes,3,opt,name=extra_message,json=extraMessage,proto3" json:"extra_message,omitempty"`   // "bytes_ext_msg"
}

func (x *OIDB_Type0857_NotifyObjectMessageUpdate) Reset() {
	*x = OIDB_Type0857_NotifyObjectMessageUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_NotifyObjectMessageUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_NotifyObjectMessageUpdate) ProtoMessage() {}

func (x *OIDB_Type0857_NotifyObjectMessageUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_NotifyObjectMessageUpdate.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_NotifyObjectMessageUpdate) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 19}
}

func (x *OIDB_Type0857_NotifyObjectMessageUpdate) GetObjMessageId() []byte {
	if x != nil {
		return x.ObjMessageId
	}
	return nil
}

func (x *OIDB_Type0857_NotifyObjectMessageUpdate) GetUpdateType() uint32 {
	if x != nil {
		return x.UpdateType
	}
	return 0
}

func (x *OIDB_Type0857_NotifyObjectMessageUpdate) GetExtraMessage() []byte {
	if x != nil {
		return x.ExtraMessage
	}
	return nil
}

// QQGroupDigestMsg
type OIDB_Type0857_QQGroupDigestMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode     int64  `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`               // "group_code"
	MessageSeq    uint32 `protobuf:"varint,2,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`            // "msg_seq"
	MessageRandom uint32 `protobuf:"varint,3,opt,name=message_random,json=messageRandom,proto3" json:"message_random,omitempty"`   // "msg_random"
	OpType        int32  `protobuf:"varint,4,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty"`                        // "op_type"
	MessageSender uint64 `protobuf:"varint,5,opt,name=message_sender,json=messageSender,proto3" json:"message_sender,omitempty"`   // "msg_sender"
	DigestOper    uint64 `protobuf:"varint,6,opt,name=digest_oper,json=digestOper,proto3" json:"digest_oper,omitempty"`            // "digest_oper"
	OpTime        uint32 `protobuf:"varint,7,opt,name=op_time,json=opTime,proto3" json:"op_time,omitempty"`                        // "op_time"
	LastestMsgSeq uint32 `protobuf:"varint,8,opt,name=lastest_msg_seq,json=lastestMsgSeq,proto3" json:"lastest_msg_seq,omitempty"` // "lastest_msg_seq"
	OperNick      []byte `protobuf:"bytes,9,opt,name=oper_nick,json=operNick,proto3" json:"oper_nick,omitempty"`                   // "oper_nick"
	SenderNick    []byte `protobuf:"bytes,10,opt,name=sender_nick,json=senderNick,proto3" json:"sender_nick,omitempty"`            // "sender_nick"
	ExtInfo       int32  `protobuf:"varint,11,opt,name=ext_info,json=extInfo,proto3" json:"ext_info,omitempty"`                    // "ext_info"
}

func (x *OIDB_Type0857_QQGroupDigestMsg) Reset() {
	*x = OIDB_Type0857_QQGroupDigestMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_QQGroupDigestMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_QQGroupDigestMsg) ProtoMessage() {}

func (x *OIDB_Type0857_QQGroupDigestMsg) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_QQGroupDigestMsg.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_QQGroupDigestMsg) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 20}
}

func (x *OIDB_Type0857_QQGroupDigestMsg) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *OIDB_Type0857_QQGroupDigestMsg) GetMessageSeq() uint32 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

func (x *OIDB_Type0857_QQGroupDigestMsg) GetMessageRandom() uint32 {
	if x != nil {
		return x.MessageRandom
	}
	return 0
}

func (x *OIDB_Type0857_QQGroupDigestMsg) GetOpType() int32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

func (x *OIDB_Type0857_QQGroupDigestMsg) GetMessageSender() uint64 {
	if x != nil {
		return x.MessageSender
	}
	return 0
}

func (x *OIDB_Type0857_QQGroupDigestMsg) GetDigestOper() uint64 {
	if x != nil {
		return x.DigestOper
	}
	return 0
}

func (x *OIDB_Type0857_QQGroupDigestMsg) GetOpTime() uint32 {
	if x != nil {
		return x.OpTime
	}
	return 0
}

func (x *OIDB_Type0857_QQGroupDigestMsg) GetLastestMsgSeq() uint32 {
	if x != nil {
		return x.LastestMsgSeq
	}
	return 0
}

func (x *OIDB_Type0857_QQGroupDigestMsg) GetOperNick() []byte {
	if x != nil {
		return x.OperNick
	}
	return nil
}

func (x *OIDB_Type0857_QQGroupDigestMsg) GetSenderNick() []byte {
	if x != nil {
		return x.SenderNick
	}
	return nil
}

func (x *OIDB_Type0857_QQGroupDigestMsg) GetExtInfo() int32 {
	if x != nil {
		return x.ExtInfo
	}
	return 0
}

// QQGroupDigestMsgSummary
type OIDB_Type0857_QQGroupDigestMsgSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DigestOper  uint64                                    `protobuf:"varint,1,opt,name=digest_oper,json=digestOper,proto3" json:"digest_oper,omitempty"`   // "digest_oper"
	OpType      int32                                     `protobuf:"varint,2,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty"`               // "op_type"
	OpTime      uint32                                    `protobuf:"varint,3,opt,name=op_time,json=opTime,proto3" json:"op_time,omitempty"`               // "op_time"
	DigestNick  []byte                                    `protobuf:"bytes,4,opt,name=digest_nick,json=digestNick,proto3" json:"digest_nick,omitempty"`    // "digest_nick"
	SuccCnt     int32                                     `protobuf:"varint,5,opt,name=succ_cnt,json=succCnt,proto3" json:"succ_cnt,omitempty"`            // "succ_cnt"
	SummaryInfo []*OIDB_Type0857_QQGroupDigestSummaryInfo `protobuf:"bytes,6,rep,name=summary_info,json=summaryInfo,proto3" json:"summary_info,omitempty"` // "summary_info"
}

func (x *OIDB_Type0857_QQGroupDigestMsgSummary) Reset() {
	*x = OIDB_Type0857_QQGroupDigestMsgSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_QQGroupDigestMsgSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_QQGroupDigestMsgSummary) ProtoMessage() {}

func (x *OIDB_Type0857_QQGroupDigestMsgSummary) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_QQGroupDigestMsgSummary.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_QQGroupDigestMsgSummary) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 21}
}

func (x *OIDB_Type0857_QQGroupDigestMsgSummary) GetDigestOper() uint64 {
	if x != nil {
		return x.DigestOper
	}
	return 0
}

func (x *OIDB_Type0857_QQGroupDigestMsgSummary) GetOpType() int32 {
	if x != nil {
		return x.OpType
	}
	return 0
}

func (x *OIDB_Type0857_QQGroupDigestMsgSummary) GetOpTime() uint32 {
	if x != nil {
		return x.OpTime
	}
	return 0
}

func (x *OIDB_Type0857_QQGroupDigestMsgSummary) GetDigestNick() []byte {
	if x != nil {
		return x.DigestNick
	}
	return nil
}

func (x *OIDB_Type0857_QQGroupDigestMsgSummary) GetSuccCnt() int32 {
	if x != nil {
		return x.SuccCnt
	}
	return 0
}

func (x *OIDB_Type0857_QQGroupDigestMsgSummary) GetSummaryInfo() []*OIDB_Type0857_QQGroupDigestSummaryInfo {
	if x != nil {
		return x.SummaryInfo
	}
	return nil
}

// QQGroupDigestSummaryInfo
type OIDB_Type0857_QQGroupDigestSummaryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageSeq    uint32 `protobuf:"varint,1,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`          // "msg_seq"
	MessageRandom uint32 `protobuf:"varint,2,opt,name=message_random,json=messageRandom,proto3" json:"message_random,omitempty"` // "msg_random"
	ErrorCode     uint32 `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`             // "error_code"
}

func (x *OIDB_Type0857_QQGroupDigestSummaryInfo) Reset() {
	*x = OIDB_Type0857_QQGroupDigestSummaryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_QQGroupDigestSummaryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_QQGroupDigestSummaryInfo) ProtoMessage() {}

func (x *OIDB_Type0857_QQGroupDigestSummaryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_QQGroupDigestSummaryInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_QQGroupDigestSummaryInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 22}
}

func (x *OIDB_Type0857_QQGroupDigestSummaryInfo) GetMessageSeq() uint32 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

func (x *OIDB_Type0857_QQGroupDigestSummaryInfo) GetMessageRandom() uint32 {
	if x != nil {
		return x.MessageRandom
	}
	return 0
}

func (x *OIDB_Type0857_QQGroupDigestSummaryInfo) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// QQVaLiveNotifyMsg
type OIDB_Type0857_QQVaLiveNotifyMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        []byte `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                                  // "bytes_uid"
	NotifyType int32  `protobuf:"varint,2,opt,name=notify_type,json=notifyType,proto3" json:"notify_type,omitempty"` // "notify_type"
	Ext1       []byte `protobuf:"bytes,3,opt,name=ext1,proto3" json:"ext1,omitempty"`                                // "bytes_ext1"
	Ext2       []byte `protobuf:"bytes,4,opt,name=ext2,proto3" json:"ext2,omitempty"`                                // "bytes_ext2"
	Ext3       []byte `protobuf:"bytes,5,opt,name=ext3,proto3" json:"ext3,omitempty"`                                // "bytes_ext3"
}

func (x *OIDB_Type0857_QQVaLiveNotifyMsg) Reset() {
	*x = OIDB_Type0857_QQVaLiveNotifyMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_QQVaLiveNotifyMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_QQVaLiveNotifyMsg) ProtoMessage() {}

func (x *OIDB_Type0857_QQVaLiveNotifyMsg) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_QQVaLiveNotifyMsg.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_QQVaLiveNotifyMsg) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 23}
}

func (x *OIDB_Type0857_QQVaLiveNotifyMsg) GetUid() []byte {
	if x != nil {
		return x.Uid
	}
	return nil
}

func (x *OIDB_Type0857_QQVaLiveNotifyMsg) GetNotifyType() int32 {
	if x != nil {
		return x.NotifyType
	}
	return 0
}

func (x *OIDB_Type0857_QQVaLiveNotifyMsg) GetExt1() []byte {
	if x != nil {
		return x.Ext1
	}
	return nil
}

func (x *OIDB_Type0857_QQVaLiveNotifyMsg) GetExt2() []byte {
	if x != nil {
		return x.Ext2
	}
	return nil
}

func (x *OIDB_Type0857_QQVaLiveNotifyMsg) GetExt3() []byte {
	if x != nil {
		return x.Ext3
	}
	return nil
}

// QQVedioGamePushInfo
type OIDB_Type0857_QQVedioGamePushInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType uint32 `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"` // "uint32_msg_type"
	GroupCode   int64  `protobuf:"varint,2,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`       // "uint64_group_code"
	OperUin     uint64 `protobuf:"varint,3,opt,name=oper_uin,json=operUin,proto3" json:"oper_uin,omitempty"`             // "uint64_oper_uin"
	VersionCtrl []byte `protobuf:"bytes,4,opt,name=version_ctrl,json=versionCtrl,proto3" json:"version_ctrl,omitempty"`  // "bytes_version_ctrl"
	ExtInfo     []byte `protobuf:"bytes,5,opt,name=ext_info,json=extInfo,proto3" json:"ext_info,omitempty"`              // "bytes_ext_info"
}

func (x *OIDB_Type0857_QQVedioGamePushInfo) Reset() {
	*x = OIDB_Type0857_QQVedioGamePushInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_QQVedioGamePushInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_QQVedioGamePushInfo) ProtoMessage() {}

func (x *OIDB_Type0857_QQVedioGamePushInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_QQVedioGamePushInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_QQVedioGamePushInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 24}
}

func (x *OIDB_Type0857_QQVedioGamePushInfo) GetMessageType() uint32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *OIDB_Type0857_QQVedioGamePushInfo) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *OIDB_Type0857_QQVedioGamePushInfo) GetOperUin() uint64 {
	if x != nil {
		return x.OperUin
	}
	return 0
}

func (x *OIDB_Type0857_QQVedioGamePushInfo) GetVersionCtrl() []byte {
	if x != nil {
		return x.VersionCtrl
	}
	return nil
}

func (x *OIDB_Type0857_QQVedioGamePushInfo) GetExtInfo() []byte {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

// RedGrayTipsInfo
type OIDB_Type0857_RedGrayTipsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowLastest          *uint32 `protobuf:"varint,1,opt,name=show_lastest,json=showLastest,proto3,oneof" json:"show_lastest,omitempty"`                        // "opt_uint32_show_lastest"
	SenderUin            uint64  `protobuf:"varint,2,opt,name=sender_uin,json=senderUin,proto3" json:"sender_uin,omitempty"`                                    // "uint64_sender_uin"
	ReceiverUin          uint64  `protobuf:"varint,3,opt,name=receiver_uin,json=receiverUin,proto3" json:"receiver_uin,omitempty"`                              // "uint64_receiver_uin"
	SenderRichContent    []byte  `protobuf:"bytes,4,opt,name=sender_rich_content,json=senderRichContent,proto3" json:"sender_rich_content,omitempty"`           // "bytes_sender_rich_content"
	ReceiverRichContent  []byte  `protobuf:"bytes,5,opt,name=receiver_rich_content,json=receiverRichContent,proto3" json:"receiver_rich_content,omitempty"`     // "bytes_receiver_rich_content"
	Authkey              []byte  `protobuf:"bytes,6,opt,name=authkey,proto3" json:"authkey,omitempty"`                                                          // "bytes_authkey"
	Msgtype              int32   `protobuf:"zigzag32,7,opt,name=msgtype,proto3" json:"msgtype,omitempty"`                                                       // "sint32_msgtype"
	LuckyFlag            uint32  `protobuf:"varint,8,opt,name=lucky_flag,json=luckyFlag,proto3" json:"lucky_flag,omitempty"`                                    // "uint32_lucky_flag"
	HideFlag             uint32  `protobuf:"varint,9,opt,name=hide_flag,json=hideFlag,proto3" json:"hide_flag,omitempty"`                                       // "uint32_hide_flag"
	PcBody               []byte  `protobuf:"bytes,10,opt,name=pc_body,json=pcBody,proto3" json:"pc_body,omitempty"`                                             // "bytes_pc_body"
	Icon                 uint32  `protobuf:"varint,11,opt,name=icon,proto3" json:"icon,omitempty"`                                                              // "uint32_icon"
	LuckyUin             uint64  `protobuf:"varint,12,opt,name=lucky_uin,json=luckyUin,proto3" json:"lucky_uin,omitempty"`                                      // "uint64_lucky_uin"
	Time                 uint32  `protobuf:"varint,13,opt,name=time,proto3" json:"time,omitempty"`                                                              // "uint32_time"
	Random               uint32  `protobuf:"varint,14,opt,name=random,proto3" json:"random,omitempty"`                                                          // "uint32_random"
	BroadcastRichContent []byte  `protobuf:"bytes,15,opt,name=broadcast_rich_content,json=broadcastRichContent,proto3" json:"broadcast_rich_content,omitempty"` // "bytes_broadcast_rich_content"
	Idiom                []byte  `protobuf:"bytes,16,opt,name=idiom,proto3" json:"idiom,omitempty"`                                                             // "bytes_idiom"
	IdiomSeq             uint32  `protobuf:"varint,17,opt,name=idiom_seq,json=idiomSeq,proto3" json:"idiom_seq,omitempty"`                                      // "uint32_idiom_seq"
	IdiomAlpha           []byte  `protobuf:"bytes,18,opt,name=idiom_alpha,json=idiomAlpha,proto3" json:"idiom_alpha,omitempty"`                                 // "bytes_idiom_alpha"
	Jumpurl              []byte  `protobuf:"bytes,19,opt,name=jumpurl,proto3" json:"jumpurl,omitempty"`                                                         // "bytes_jumpurl"
	Subchannel           uint32  `protobuf:"varint,20,opt,name=subchannel,proto3" json:"subchannel,omitempty"`                                                  // "uint32_subchannel"
	PoemRule             []byte  `protobuf:"bytes,21,opt,name=poem_rule,json=poemRule,proto3" json:"poem_rule,omitempty"`                                       // "bytes_poem_rule"
}

func (x *OIDB_Type0857_RedGrayTipsInfo) Reset() {
	*x = OIDB_Type0857_RedGrayTipsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_RedGrayTipsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_RedGrayTipsInfo) ProtoMessage() {}

func (x *OIDB_Type0857_RedGrayTipsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_RedGrayTipsInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_RedGrayTipsInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 25}
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetShowLastest() uint32 {
	if x != nil && x.ShowLastest != nil {
		return *x.ShowLastest
	}
	return 0
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetSenderUin() uint64 {
	if x != nil {
		return x.SenderUin
	}
	return 0
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetReceiverUin() uint64 {
	if x != nil {
		return x.ReceiverUin
	}
	return 0
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetSenderRichContent() []byte {
	if x != nil {
		return x.SenderRichContent
	}
	return nil
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetReceiverRichContent() []byte {
	if x != nil {
		return x.ReceiverRichContent
	}
	return nil
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetAuthkey() []byte {
	if x != nil {
		return x.Authkey
	}
	return nil
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetMsgtype() int32 {
	if x != nil {
		return x.Msgtype
	}
	return 0
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetLuckyFlag() uint32 {
	if x != nil {
		return x.LuckyFlag
	}
	return 0
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetHideFlag() uint32 {
	if x != nil {
		return x.HideFlag
	}
	return 0
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetPcBody() []byte {
	if x != nil {
		return x.PcBody
	}
	return nil
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetIcon() uint32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetLuckyUin() uint64 {
	if x != nil {
		return x.LuckyUin
	}
	return 0
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetTime() uint32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetRandom() uint32 {
	if x != nil {
		return x.Random
	}
	return 0
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetBroadcastRichContent() []byte {
	if x != nil {
		return x.BroadcastRichContent
	}
	return nil
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetIdiom() []byte {
	if x != nil {
		return x.Idiom
	}
	return nil
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetIdiomSeq() uint32 {
	if x != nil {
		return x.IdiomSeq
	}
	return 0
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetIdiomAlpha() []byte {
	if x != nil {
		return x.IdiomAlpha
	}
	return nil
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetJumpurl() []byte {
	if x != nil {
		return x.Jumpurl
	}
	return nil
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetSubchannel() uint32 {
	if x != nil {
		return x.Subchannel
	}
	return 0
}

func (x *OIDB_Type0857_RedGrayTipsInfo) GetPoemRule() []byte {
	if x != nil {
		return x.PoemRule
	}
	return nil
}

// ReqBody
type OIDB_Type0857_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode       *int64                         `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3,oneof" json:"group_code,omitempty"`              // "opt_uint64_group_code"
	Memberuins      []uint64                       `protobuf:"varint,2,rep,packed,name=memberuins,proto3" json:"memberuins,omitempty"`                            // "rpt_uint64_memberuins"
	Offline         *uint32                        `protobuf:"varint,3,opt,name=offline,proto3,oneof" json:"offline,omitempty"`                                   // "opt_uint32_offline"
	MessageInstCtrl *OIDB_Type0857_InstanceControl `protobuf:"bytes,4,opt,name=message_inst_ctrl,json=messageInstCtrl,proto3" json:"message_inst_ctrl,omitempty"` // "msg_inst_ctrl"
	Msg             []byte                         `protobuf:"bytes,5,opt,name=msg,proto3,oneof" json:"msg,omitempty"`                                            // "opt_bytes_msg"
	BusiType        *uint32                        `protobuf:"varint,6,opt,name=busi_type,json=busiType,proto3,oneof" json:"busi_type,omitempty"`                 // "opt_uint32_busi_type"
}

func (x *OIDB_Type0857_Request) Reset() {
	*x = OIDB_Type0857_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_Request) ProtoMessage() {}

func (x *OIDB_Type0857_Request) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_Request.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_Request) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 26}
}

func (x *OIDB_Type0857_Request) GetGroupCode() int64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *OIDB_Type0857_Request) GetMemberuins() []uint64 {
	if x != nil {
		return x.Memberuins
	}
	return nil
}

func (x *OIDB_Type0857_Request) GetOffline() uint32 {
	if x != nil && x.Offline != nil {
		return *x.Offline
	}
	return 0
}

func (x *OIDB_Type0857_Request) GetMessageInstCtrl() *OIDB_Type0857_InstanceControl {
	if x != nil {
		return x.MessageInstCtrl
	}
	return nil
}

func (x *OIDB_Type0857_Request) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *OIDB_Type0857_Request) GetBusiType() uint32 {
	if x != nil && x.BusiType != nil {
		return *x.BusiType
	}
	return 0
}

// RevertGrayTipsMsgTraceless
type OIDB_Type0857_RevertGrayTipsMsgTraceless struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From      uint64 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`                              // "uint64_from"
	To        uint64 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`                                  // "uint64_to"
	GroupCode int64  `protobuf:"varint,3,opt,name=group_code,json=groupCode,proto3" json:"group_code,omitempty"`   // "group_code"
	BusiId    uint64 `protobuf:"varint,4,opt,name=busi_id,json=busiId,proto3" json:"busi_id,omitempty"`            // "uint64_busi_id"
	TipsSeqId uint64 `protobuf:"varint,5,opt,name=tips_seq_id,json=tipsSeqId,proto3" json:"tips_seq_id,omitempty"` // "uint64_tips_seq_id"
}

func (x *OIDB_Type0857_RevertGrayTipsMsgTraceless) Reset() {
	*x = OIDB_Type0857_RevertGrayTipsMsgTraceless{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_RevertGrayTipsMsgTraceless) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_RevertGrayTipsMsgTraceless) ProtoMessage() {}

func (x *OIDB_Type0857_RevertGrayTipsMsgTraceless) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_RevertGrayTipsMsgTraceless.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_RevertGrayTipsMsgTraceless) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 27}
}

func (x *OIDB_Type0857_RevertGrayTipsMsgTraceless) GetFrom() uint64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *OIDB_Type0857_RevertGrayTipsMsgTraceless) GetTo() uint64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *OIDB_Type0857_RevertGrayTipsMsgTraceless) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *OIDB_Type0857_RevertGrayTipsMsgTraceless) GetBusiId() uint64 {
	if x != nil {
		return x.BusiId
	}
	return 0
}

func (x *OIDB_Type0857_RevertGrayTipsMsgTraceless) GetTipsSeqId() uint64 {
	if x != nil {
		return x.TipsSeqId
	}
	return 0
}

// RspBody
type OIDB_Type0857_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode *int64 `protobuf:"varint,1,opt,name=group_code,json=groupCode,proto3,oneof" json:"group_code,omitempty"` // "opt_uint64_group_code"
}

func (x *OIDB_Type0857_Response) Reset() {
	*x = OIDB_Type0857_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_Response) ProtoMessage() {}

func (x *OIDB_Type0857_Response) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_Response.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_Response) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 28}
}

func (x *OIDB_Type0857_Response) GetGroupCode() int64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

// SingChangePushInfo
type OIDB_Type0857_SingChangePushInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq        uint64 `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`                                 // "uint64_seq"
	ActionType uint32 `protobuf:"varint,2,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"` // "uint32_action_type"
	GroupId    uint64 `protobuf:"varint,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`          // "uint64_group_id"
	OperUin    uint64 `protobuf:"varint,4,opt,name=oper_uin,json=operUin,proto3" json:"oper_uin,omitempty"`          // "uint64_oper_uin"
	GrayTips   []byte `protobuf:"bytes,5,opt,name=gray_tips,json=grayTips,proto3" json:"gray_tips,omitempty"`        // "bytes_gray_tips"
	JoinNums   uint32 `protobuf:"varint,6,opt,name=join_nums,json=joinNums,proto3" json:"join_nums,omitempty"`       // "uint32_join_nums"
}

func (x *OIDB_Type0857_SingChangePushInfo) Reset() {
	*x = OIDB_Type0857_SingChangePushInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_SingChangePushInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_SingChangePushInfo) ProtoMessage() {}

func (x *OIDB_Type0857_SingChangePushInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_SingChangePushInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_SingChangePushInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 29}
}

func (x *OIDB_Type0857_SingChangePushInfo) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *OIDB_Type0857_SingChangePushInfo) GetActionType() uint32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *OIDB_Type0857_SingChangePushInfo) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *OIDB_Type0857_SingChangePushInfo) GetOperUin() uint64 {
	if x != nil {
		return x.OperUin
	}
	return 0
}

func (x *OIDB_Type0857_SingChangePushInfo) GetGrayTips() []byte {
	if x != nil {
		return x.GrayTips
	}
	return nil
}

func (x *OIDB_Type0857_SingChangePushInfo) GetJoinNums() uint32 {
	if x != nil {
		return x.JoinNums
	}
	return 0
}

// StudyRoomMemberChangePush
type OIDB_Type0857_StudyRoomMemberChangePush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberCount uint32 `protobuf:"varint,1,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"` // "member_count"
}

func (x *OIDB_Type0857_StudyRoomMemberChangePush) Reset() {
	*x = OIDB_Type0857_StudyRoomMemberChangePush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_StudyRoomMemberChangePush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_StudyRoomMemberChangePush) ProtoMessage() {}

func (x *OIDB_Type0857_StudyRoomMemberChangePush) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_StudyRoomMemberChangePush.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_StudyRoomMemberChangePush) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 30}
}

func (x *OIDB_Type0857_StudyRoomMemberChangePush) GetMemberCount() uint32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

// TemplParam
type OIDB_Type0857_TemplParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  []byte `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`   // "bytes_name"
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // "bytes_value"
}

func (x *OIDB_Type0857_TemplParam) Reset() {
	*x = OIDB_Type0857_TemplParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_TemplParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_TemplParam) ProtoMessage() {}

func (x *OIDB_Type0857_TemplParam) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_TemplParam.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_TemplParam) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 31}
}

func (x *OIDB_Type0857_TemplParam) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *OIDB_Type0857_TemplParam) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// ThemeStateNotify
type OIDB_Type0857_ThemeStateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State     uint32 `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`                          // "uint32_state"
	FeedsId   []byte `protobuf:"bytes,2,opt,name=feeds_id,json=feedsId,proto3" json:"feeds_id,omitempty"`        // "bytes_feeds_id"
	ThemeName []byte `protobuf:"bytes,3,opt,name=theme_name,json=themeName,proto3" json:"theme_name,omitempty"`  // "bytes_theme_name"
	ActionUin uint64 `protobuf:"varint,4,opt,name=action_uin,json=actionUin,proto3" json:"action_uin,omitempty"` // "uint64_action_uin"
	CreateUin uint64 `protobuf:"varint,5,opt,name=create_uin,json=createUin,proto3" json:"create_uin,omitempty"` // "uint64_create_uin"
}

func (x *OIDB_Type0857_ThemeStateNotify) Reset() {
	*x = OIDB_Type0857_ThemeStateNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_ThemeStateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_ThemeStateNotify) ProtoMessage() {}

func (x *OIDB_Type0857_ThemeStateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_ThemeStateNotify.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_ThemeStateNotify) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 32}
}

func (x *OIDB_Type0857_ThemeStateNotify) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *OIDB_Type0857_ThemeStateNotify) GetFeedsId() []byte {
	if x != nil {
		return x.FeedsId
	}
	return nil
}

func (x *OIDB_Type0857_ThemeStateNotify) GetThemeName() []byte {
	if x != nil {
		return x.ThemeName
	}
	return nil
}

func (x *OIDB_Type0857_ThemeStateNotify) GetActionUin() uint64 {
	if x != nil {
		return x.ActionUin
	}
	return 0
}

func (x *OIDB_Type0857_ThemeStateNotify) GetCreateUin() uint64 {
	if x != nil {
		return x.CreateUin
	}
	return 0
}

// TroopFormGrayTipsInfo
type OIDB_Type0857_TroopFormGrayTipsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WriterUin   uint64 `protobuf:"varint,1,opt,name=writer_uin,json=writerUin,proto3" json:"writer_uin,omitempty"`      // "uint64_writer_uin"
	CreatorUin  uint64 `protobuf:"varint,2,opt,name=creator_uin,json=creatorUin,proto3" json:"creator_uin,omitempty"`   // "uint64_creator_uin"
	RichContent []byte `protobuf:"bytes,3,opt,name=rich_content,json=richContent,proto3" json:"rich_content,omitempty"` // "bytes_rich_content"
	Url         []byte `protobuf:"bytes,4,opt,name=url,proto3,oneof" json:"url,omitempty"`                              // "bytes_opt_bytes_url"
	CreatorNick []byte `protobuf:"bytes,5,opt,name=creator_nick,json=creatorNick,proto3" json:"creator_nick,omitempty"` // "bytes_creator_nick"
}

func (x *OIDB_Type0857_TroopFormGrayTipsInfo) Reset() {
	*x = OIDB_Type0857_TroopFormGrayTipsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_TroopFormGrayTipsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_TroopFormGrayTipsInfo) ProtoMessage() {}

func (x *OIDB_Type0857_TroopFormGrayTipsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_TroopFormGrayTipsInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_TroopFormGrayTipsInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 33}
}

func (x *OIDB_Type0857_TroopFormGrayTipsInfo) GetWriterUin() uint64 {
	if x != nil {
		return x.WriterUin
	}
	return 0
}

func (x *OIDB_Type0857_TroopFormGrayTipsInfo) GetCreatorUin() uint64 {
	if x != nil {
		return x.CreatorUin
	}
	return 0
}

func (x *OIDB_Type0857_TroopFormGrayTipsInfo) GetRichContent() []byte {
	if x != nil {
		return x.RichContent
	}
	return nil
}

func (x *OIDB_Type0857_TroopFormGrayTipsInfo) GetUrl() []byte {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *OIDB_Type0857_TroopFormGrayTipsInfo) GetCreatorNick() []byte {
	if x != nil {
		return x.CreatorNick
	}
	return nil
}

// VideoChangePushInfo
type OIDB_Type0857_VideoChangePushInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq        uint64 `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`                                 // "uint64_seq"
	ActionType uint32 `protobuf:"varint,2,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"` // "uint32_action_type"
	GroupId    uint64 `protobuf:"varint,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`          // "uint64_group_id"
	OperUin    uint64 `protobuf:"varint,4,opt,name=oper_uin,json=operUin,proto3" json:"oper_uin,omitempty"`          // "uint64_oper_uin"
	GrayTips   []byte `protobuf:"bytes,5,opt,name=gray_tips,json=grayTips,proto3" json:"gray_tips,omitempty"`        // "bytes_gray_tips"
	JoinNums   uint32 `protobuf:"varint,6,opt,name=join_nums,json=joinNums,proto3" json:"join_nums,omitempty"`       // "uint32_join_nums"
	JoinState  uint32 `protobuf:"varint,7,opt,name=join_state,json=joinState,proto3" json:"join_state,omitempty"`    // "uint32_join_state"
	ExtInfo    []byte `protobuf:"bytes,100,opt,name=ext_info,json=extInfo,proto3" json:"ext_info,omitempty"`         // "bytes_ext_info"
}

func (x *OIDB_Type0857_VideoChangePushInfo) Reset() {
	*x = OIDB_Type0857_VideoChangePushInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_VideoChangePushInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_VideoChangePushInfo) ProtoMessage() {}

func (x *OIDB_Type0857_VideoChangePushInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_VideoChangePushInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_VideoChangePushInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 34}
}

func (x *OIDB_Type0857_VideoChangePushInfo) GetSeq() uint64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *OIDB_Type0857_VideoChangePushInfo) GetActionType() uint32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *OIDB_Type0857_VideoChangePushInfo) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *OIDB_Type0857_VideoChangePushInfo) GetOperUin() uint64 {
	if x != nil {
		return x.OperUin
	}
	return 0
}

func (x *OIDB_Type0857_VideoChangePushInfo) GetGrayTips() []byte {
	if x != nil {
		return x.GrayTips
	}
	return nil
}

func (x *OIDB_Type0857_VideoChangePushInfo) GetJoinNums() uint32 {
	if x != nil {
		return x.JoinNums
	}
	return 0
}

func (x *OIDB_Type0857_VideoChangePushInfo) GetJoinState() uint32 {
	if x != nil {
		return x.JoinState
	}
	return 0
}

func (x *OIDB_Type0857_VideoChangePushInfo) GetExtInfo() []byte {
	if x != nil {
		return x.ExtInfo
	}
	return nil
}

// WereWolfPush
type OIDB_Type0857_WereWolfPush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushType      uint32                             `protobuf:"varint,1,opt,name=push_type,json=pushType,proto3" json:"push_type,omitempty"`                          // "uint32_push_type"
	GameRoom      uint64                             `protobuf:"varint,2,opt,name=game_room,json=gameRoom,proto3" json:"game_room,omitempty"`                          // "uint64_game_room"
	EnumGameState uint32                             `protobuf:"varint,3,opt,name=enum_game_state,json=enumGameState,proto3" json:"enum_game_state,omitempty"`         // "enum_game_state"
	GameRound     uint32                             `protobuf:"varint,4,opt,name=game_round,json=gameRound,proto3" json:"game_round,omitempty"`                       // "uint32_game_round"
	Roles         []*OIDB_Type0857_WereWolfPush_Role `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles,omitempty"`                                                 // "rpt_roles"
	Speaker       uint64                             `protobuf:"varint,6,opt,name=speaker,proto3" json:"speaker,omitempty"`                                            // "uint64_speaker"
	JudgeUin      uint64                             `protobuf:"varint,7,opt,name=judge_uin,json=judgeUin,proto3" json:"judge_uin,omitempty"`                          // "uint64_judge_uin"
	JudgeWords    []byte                             `protobuf:"bytes,8,opt,name=judge_words,json=judgeWords,proto3" json:"judge_words,omitempty"`                     // "bytes_judge_words"
	EnumOperation uint32                             `protobuf:"varint,9,opt,name=enum_operation,json=enumOperation,proto3" json:"enum_operation,omitempty"`           // "enum_operation"
	SrcUser       uint64                             `protobuf:"varint,10,opt,name=src_user,json=srcUser,proto3" json:"src_user,omitempty"`                            // "uint64_src_user"
	DstUser       uint64                             `protobuf:"varint,11,opt,name=dst_user,json=dstUser,proto3" json:"dst_user,omitempty"`                            // "uint64_dst_user"
	DeadUsers     []uint64                           `protobuf:"varint,12,rep,packed,name=dead_users,json=deadUsers,proto3" json:"dead_users,omitempty"`               // "rpt_dead_users"
	GameResult    uint32                             `protobuf:"varint,13,opt,name=game_result,json=gameResult,proto3" json:"game_result,omitempty"`                   // "uint32_game_result"
	TimeoutSec    uint32                             `protobuf:"varint,14,opt,name=timeout_sec,json=timeoutSec,proto3" json:"timeout_sec,omitempty"`                   // "uint32_timeout_sec"
	KillConfirmed uint32                             `protobuf:"varint,15,opt,name=kill_confirmed,json=killConfirmed,proto3" json:"kill_confirmed,omitempty"`          // "uint32_kill_confirmed"
	JudgeNickname []byte                             `protobuf:"bytes,16,opt,name=judge_nickname,json=judgeNickname,proto3" json:"judge_nickname,omitempty"`           // "bytes_judge_nickname"
	VotedTieUsers []uint64                           `protobuf:"varint,17,rep,packed,name=voted_tie_users,json=votedTieUsers,proto3" json:"voted_tie_users,omitempty"` // "rpt_voted_tie_users"
}

func (x *OIDB_Type0857_WereWolfPush) Reset() {
	*x = OIDB_Type0857_WereWolfPush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_WereWolfPush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_WereWolfPush) ProtoMessage() {}

func (x *OIDB_Type0857_WereWolfPush) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_WereWolfPush.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_WereWolfPush) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 35}
}

func (x *OIDB_Type0857_WereWolfPush) GetPushType() uint32 {
	if x != nil {
		return x.PushType
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush) GetGameRoom() uint64 {
	if x != nil {
		return x.GameRoom
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush) GetEnumGameState() uint32 {
	if x != nil {
		return x.EnumGameState
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush) GetGameRound() uint32 {
	if x != nil {
		return x.GameRound
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush) GetRoles() []*OIDB_Type0857_WereWolfPush_Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *OIDB_Type0857_WereWolfPush) GetSpeaker() uint64 {
	if x != nil {
		return x.Speaker
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush) GetJudgeUin() uint64 {
	if x != nil {
		return x.JudgeUin
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush) GetJudgeWords() []byte {
	if x != nil {
		return x.JudgeWords
	}
	return nil
}

func (x *OIDB_Type0857_WereWolfPush) GetEnumOperation() uint32 {
	if x != nil {
		return x.EnumOperation
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush) GetSrcUser() uint64 {
	if x != nil {
		return x.SrcUser
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush) GetDstUser() uint64 {
	if x != nil {
		return x.DstUser
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush) GetDeadUsers() []uint64 {
	if x != nil {
		return x.DeadUsers
	}
	return nil
}

func (x *OIDB_Type0857_WereWolfPush) GetGameResult() uint32 {
	if x != nil {
		return x.GameResult
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush) GetTimeoutSec() uint32 {
	if x != nil {
		return x.TimeoutSec
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush) GetKillConfirmed() uint32 {
	if x != nil {
		return x.KillConfirmed
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush) GetJudgeNickname() []byte {
	if x != nil {
		return x.JudgeNickname
	}
	return nil
}

func (x *OIDB_Type0857_WereWolfPush) GetVotedTieUsers() []uint64 {
	if x != nil {
		return x.VotedTieUsers
	}
	return nil
}

// PersonalSetting
type OIDB_Type0857_MediaChangePushInfo_PersonalSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThemeId  uint32 `protobuf:"varint,1,opt,name=theme_id,json=themeId,proto3" json:"theme_id,omitempty"`    // "uint32_theme_id"
	PlayerId uint32 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // "uint32_player_id"
	FontId   uint32 `protobuf:"varint,3,opt,name=font_id,json=fontId,proto3" json:"font_id,omitempty"`       // "uint32_font_id"
}

func (x *OIDB_Type0857_MediaChangePushInfo_PersonalSetting) Reset() {
	*x = OIDB_Type0857_MediaChangePushInfo_PersonalSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_MediaChangePushInfo_PersonalSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_MediaChangePushInfo_PersonalSetting) ProtoMessage() {}

func (x *OIDB_Type0857_MediaChangePushInfo_PersonalSetting) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_MediaChangePushInfo_PersonalSetting.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_MediaChangePushInfo_PersonalSetting) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 14, 0}
}

func (x *OIDB_Type0857_MediaChangePushInfo_PersonalSetting) GetThemeId() uint32 {
	if x != nil {
		return x.ThemeId
	}
	return 0
}

func (x *OIDB_Type0857_MediaChangePushInfo_PersonalSetting) GetPlayerId() uint32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *OIDB_Type0857_MediaChangePushInfo_PersonalSetting) GetFontId() uint32 {
	if x != nil {
		return x.FontId
	}
	return 0
}

// MessageMeta
type OIDB_Type0857_RecallReminder_MessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageSeq         int32  `protobuf:"varint,1,opt,name=message_seq,json=messageSeq,proto3" json:"message_seq,omitempty"`                           // "uint32_seq"
	MessageTime        int64  `protobuf:"varint,2,opt,name=message_time,json=messageTime,proto3" json:"message_time,omitempty"`                        // "uint32_time"
	MessageRandom      int32  `protobuf:"varint,3,opt,name=message_random,json=messageRandom,proto3" json:"message_random,omitempty"`                  // "uint32_msg_random"
	MessageType        int32  `protobuf:"varint,4,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`                        // "uint32_msg_type"
	MessageFlag        int32  `protobuf:"varint,5,opt,name=message_flag,json=messageFlag,proto3" json:"message_flag,omitempty"`                        // "uint32_msg_flag"
	FromUin            int64  `protobuf:"varint,6,opt,name=from_uin,json=fromUin,proto3" json:"from_uin,omitempty"`                                    // "uint64_author_uin"
	IsAnonymousMessage uint32 `protobuf:"varint,7,opt,name=is_anonymous_message,json=isAnonymousMessage,proto3" json:"is_anonymous_message,omitempty"` // "uint32_is_anony_msg"
}

func (x *OIDB_Type0857_RecallReminder_MessageInfo) Reset() {
	*x = OIDB_Type0857_RecallReminder_MessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_RecallReminder_MessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_RecallReminder_MessageInfo) ProtoMessage() {}

func (x *OIDB_Type0857_RecallReminder_MessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_RecallReminder_MessageInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_RecallReminder_MessageInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 16, 0}
}

func (x *OIDB_Type0857_RecallReminder_MessageInfo) GetMessageSeq() int32 {
	if x != nil {
		return x.MessageSeq
	}
	return 0
}

func (x *OIDB_Type0857_RecallReminder_MessageInfo) GetMessageTime() int64 {
	if x != nil {
		return x.MessageTime
	}
	return 0
}

func (x *OIDB_Type0857_RecallReminder_MessageInfo) GetMessageRandom() int32 {
	if x != nil {
		return x.MessageRandom
	}
	return 0
}

func (x *OIDB_Type0857_RecallReminder_MessageInfo) GetMessageType() int32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *OIDB_Type0857_RecallReminder_MessageInfo) GetMessageFlag() int32 {
	if x != nil {
		return x.MessageFlag
	}
	return 0
}

func (x *OIDB_Type0857_RecallReminder_MessageInfo) GetFromUin() int64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *OIDB_Type0857_RecallReminder_MessageInfo) GetIsAnonymousMessage() uint32 {
	if x != nil {
		return x.IsAnonymousMessage
	}
	return 0
}

// GameRecord
type OIDB_Type0857_WereWolfPush_GameRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` // "uint32_total"
	Win   uint32 `protobuf:"varint,2,opt,name=win,proto3" json:"win,omitempty"`     // "uint32_win"
	Lose  uint32 `protobuf:"varint,3,opt,name=lose,proto3" json:"lose,omitempty"`   // "uint32_lose"
	Draw  uint32 `protobuf:"varint,4,opt,name=draw,proto3" json:"draw,omitempty"`   // "uint32_draw"
}

func (x *OIDB_Type0857_WereWolfPush_GameRecord) Reset() {
	*x = OIDB_Type0857_WereWolfPush_GameRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_WereWolfPush_GameRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_WereWolfPush_GameRecord) ProtoMessage() {}

func (x *OIDB_Type0857_WereWolfPush_GameRecord) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_WereWolfPush_GameRecord.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_WereWolfPush_GameRecord) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 35, 0}
}

func (x *OIDB_Type0857_WereWolfPush_GameRecord) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_GameRecord) GetWin() uint32 {
	if x != nil {
		return x.Win
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_GameRecord) GetLose() uint32 {
	if x != nil {
		return x.Lose
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_GameRecord) GetDraw() uint32 {
	if x != nil {
		return x.Draw
	}
	return 0
}

// Role
type OIDB_Type0857_WereWolfPush_Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uin               uint64                                 `protobuf:"varint,1,opt,name=uin,proto3" json:"uin,omitempty"`                                                        // "uint64_uin"
	EnumType          uint32                                 `protobuf:"varint,2,opt,name=enum_type,json=enumType,proto3" json:"enum_type,omitempty"`                              // "enum_type"
	EnumState         uint32                                 `protobuf:"varint,3,opt,name=enum_state,json=enumState,proto3" json:"enum_state,omitempty"`                           // "enum_state"
	CanSpeak          uint32                                 `protobuf:"varint,4,opt,name=can_speak,json=canSpeak,proto3" json:"can_speak,omitempty"`                              // "uint32_can_speak"
	CanListen         uint32                                 `protobuf:"varint,5,opt,name=can_listen,json=canListen,proto3" json:"can_listen,omitempty"`                           // "uint32_can_listen"
	Position          uint32                                 `protobuf:"varint,6,opt,name=position,proto3" json:"position,omitempty"`                                              // "uint32_position"
	CanVote           uint32                                 `protobuf:"varint,7,opt,name=can_vote,json=canVote,proto3" json:"can_vote,omitempty"`                                 // "uint32_can_vote"
	CanVoted          uint32                                 `protobuf:"varint,8,opt,name=can_voted,json=canVoted,proto3" json:"can_voted,omitempty"`                              // "uint32_can_voted"
	AlreadyChecked    uint32                                 `protobuf:"varint,9,opt,name=already_checked,json=alreadyChecked,proto3" json:"already_checked,omitempty"`            // "uint32_already_checked"
	AlreadySaved      uint32                                 `protobuf:"varint,10,opt,name=already_saved,json=alreadySaved,proto3" json:"already_saved,omitempty"`                 // "uint32_already_saved"
	AlreadyPoisoned   uint32                                 `protobuf:"varint,11,opt,name=already_poisoned,json=alreadyPoisoned,proto3" json:"already_poisoned,omitempty"`        // "uint32_already_poisoned"
	PlayerState       uint32                                 `protobuf:"varint,12,opt,name=player_state,json=playerState,proto3" json:"player_state,omitempty"`                    // "uint32_player_state"
	EnumDeadOp        uint32                                 `protobuf:"varint,13,opt,name=enum_dead_op,json=enumDeadOp,proto3" json:"enum_dead_op,omitempty"`                     // "enum_dead_op"
	EnumOperation     uint32                                 `protobuf:"varint,14,opt,name=enum_operation,json=enumOperation,proto3" json:"enum_operation,omitempty"`              // "enum_operation"
	DstUser           uint64                                 `protobuf:"varint,15,opt,name=dst_user,json=dstUser,proto3" json:"dst_user,omitempty"`                                // "uint64_dst_user"
	OperationRound    uint32                                 `protobuf:"varint,16,opt,name=operation_round,json=operationRound,proto3" json:"operation_round,omitempty"`           // "uint32_operation_round"
	MessageGameRecord *OIDB_Type0857_WereWolfPush_GameRecord `protobuf:"bytes,17,opt,name=message_game_record,json=messageGameRecord,proto3" json:"message_game_record,omitempty"` // "msg_game_record"
	IsWerewolf        uint32                                 `protobuf:"varint,18,opt,name=is_werewolf,json=isWerewolf,proto3" json:"is_werewolf,omitempty"`                       // "uint32_is_werewolf"
	DefendedUser      uint64                                 `protobuf:"varint,19,opt,name=defended_user,json=defendedUser,proto3" json:"defended_user,omitempty"`                 // "uint64_defended_user"
	IsSheriff         uint32                                 `protobuf:"varint,20,opt,name=is_sheriff,json=isSheriff,proto3" json:"is_sheriff,omitempty"`                          // "uint32_is_sheriff"
}

func (x *OIDB_Type0857_WereWolfPush_Role) Reset() {
	*x = OIDB_Type0857_WereWolfPush_Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0857_WereWolfPush_Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0857_WereWolfPush_Role) ProtoMessage() {}

func (x *OIDB_Type0857_WereWolfPush_Role) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0857_WereWolfPush_Role.ProtoReflect.Descriptor instead.
func (*OIDB_Type0857_WereWolfPush_Role) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 0, 35, 1}
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetUin() uint64 {
	if x != nil {
		return x.Uin
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetEnumType() uint32 {
	if x != nil {
		return x.EnumType
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetEnumState() uint32 {
	if x != nil {
		return x.EnumState
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetCanSpeak() uint32 {
	if x != nil {
		return x.CanSpeak
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetCanListen() uint32 {
	if x != nil {
		return x.CanListen
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetCanVote() uint32 {
	if x != nil {
		return x.CanVote
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetCanVoted() uint32 {
	if x != nil {
		return x.CanVoted
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetAlreadyChecked() uint32 {
	if x != nil {
		return x.AlreadyChecked
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetAlreadySaved() uint32 {
	if x != nil {
		return x.AlreadySaved
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetAlreadyPoisoned() uint32 {
	if x != nil {
		return x.AlreadyPoisoned
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetPlayerState() uint32 {
	if x != nil {
		return x.PlayerState
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetEnumDeadOp() uint32 {
	if x != nil {
		return x.EnumDeadOp
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetEnumOperation() uint32 {
	if x != nil {
		return x.EnumOperation
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetDstUser() uint64 {
	if x != nil {
		return x.DstUser
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetOperationRound() uint32 {
	if x != nil {
		return x.OperationRound
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetMessageGameRecord() *OIDB_Type0857_WereWolfPush_GameRecord {
	if x != nil {
		return x.MessageGameRecord
	}
	return nil
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetIsWerewolf() uint32 {
	if x != nil {
		return x.IsWerewolf
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetDefendedUser() uint64 {
	if x != nil {
		return x.DefendedUser
	}
	return 0
}

func (x *OIDB_Type0857_WereWolfPush_Role) GetIsSheriff() uint32 {
	if x != nil {
		return x.IsSheriff
	}
	return 0
}

// ExtSnsFrdData
type OIDB_Type0D50_ExtraSNSFriendData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendUin                     uint64 `protobuf:"varint,1,opt,name=friend_uin,json=friendUin,proto3" json:"friend_uin,omitempty"`                                                                         // "frd_uin"
	Lovers                        []byte `protobuf:"bytes,11002,opt,name=lovers,proto3" json:"lovers,omitempty"`                                                                                             // "bytes_lovers"
	Confidante                    []byte `protobuf:"bytes,21002,opt,name=confidante,proto3" json:"confidante,omitempty"`                                                                                     // "bytes_confidante"
	Buddy                         []byte `protobuf:"bytes,31002,opt,name=buddy,proto3" json:"buddy,omitempty"`                                                                                               // "bytes_buddy"
	FriendTree                    []byte `protobuf:"bytes,41001,opt,name=friend_tree,json=friendTree,proto3" json:"friend_tree,omitempty"`                                                                   // "bytes_frd_tree"
	Chat                          []byte `protobuf:"bytes,51001,opt,name=chat,proto3" json:"chat,omitempty"`                                                                                                 // "bytes_chat"
	Praise                        []byte `protobuf:"bytes,61001,opt,name=praise,proto3" json:"praise,omitempty"`                                                                                             // "bytes_praise"
	QzoneLove                     []byte `protobuf:"bytes,71001,opt,name=qzone_love,json=qzoneLove,proto3" json:"qzone_love,omitempty"`                                                                      // "bytes_qzone_love"
	QzoneHouse                    []byte `protobuf:"bytes,81001,opt,name=qzone_house,json=qzoneHouse,proto3" json:"qzone_house,omitempty"`                                                                   // "bytes_qzone_house"
	MusicSwitch                   []byte `protobuf:"bytes,91001,opt,name=music_switch,json=musicSwitch,proto3" json:"music_switch,omitempty"`                                                                // "bytes_music_switch"
	MutualmarkAlienation          []byte `protobuf:"bytes,101001,opt,name=mutualmark_alienation,json=mutualmarkAlienation,proto3" json:"mutualmark_alienation,omitempty"`                                    // "bytes_mutualmark_alienation"
	UnreadMessage                 []byte `protobuf:"bytes,111001,opt,name=unread_message,json=unreadMessage,proto3" json:"unread_message,omitempty"`                                                         // "bytes_unread_message"
	Boat                          []byte `protobuf:"bytes,121001,opt,name=boat,proto3" json:"boat,omitempty"`                                                                                                // "bytes_boat"
	CloseFriend                   []byte `protobuf:"bytes,131001,opt,name=close_friend,json=closeFriend,proto3" json:"close_friend,omitempty"`                                                               // "bytes_close_frd"
	MutualmarkScore               []byte `protobuf:"bytes,141001,opt,name=mutualmark_score,json=mutualmarkScore,proto3" json:"mutualmark_score,omitempty"`                                                   // "bytes_mutualmark_score"
	KsingSwitch                   []byte `protobuf:"bytes,151001,opt,name=ksing_switch,json=ksingSwitch,proto3" json:"ksing_switch,omitempty"`                                                               // "bytes_ksing_switch"
	LbsShare                      []byte `protobuf:"bytes,181001,opt,name=lbs_share,json=lbsShare,proto3" json:"lbs_share,omitempty"`                                                                        // "bytes_lbs_share"
	DontForgetMe                  []byte `protobuf:"bytes,211001,opt,name=dont_forget_me,json=dontForgetMe,proto3" json:"dont_forget_me,omitempty"`                                                          // "bytes_dont_forget_me"
	MyOnlineStatusVisibleToFrd    []byte `protobuf:"bytes,221001,opt,name=my_online_status_visible_to_frd,json=myOnlineStatusVisibleToFrd,proto3" json:"my_online_status_visible_to_frd,omitempty"`          // "bytes_my_online_status_visible_to_frd"
	FriendOnlineStatusVisibleToMe []byte `protobuf:"bytes,221002,opt,name=friend_online_status_visible_to_me,json=friendOnlineStatusVisibleToMe,proto3" json:"friend_online_status_visible_to_me,omitempty"` // "bytes_frd_online_status_visible_to_me"
	VisitorRecord                 []byte `protobuf:"bytes,231001,opt,name=visitor_record,json=visitorRecord,proto3" json:"visitor_record,omitempty"`                                                         // "bytes_visitor_record"
	FriendStealRecord             []byte `protobuf:"bytes,231002,opt,name=friend_steal_record,json=friendStealRecord,proto3" json:"friend_steal_record,omitempty"`                                           // "bytes_frd_steal_record"
	MyStealRecord                 []byte `protobuf:"bytes,231003,opt,name=my_steal_record,json=myStealRecord,proto3" json:"my_steal_record,omitempty"`                                                       // "bytes_my_steal_record"
	Avgame                        []byte `protobuf:"bytes,241001,opt,name=avgame,proto3" json:"avgame,omitempty"`                                                                                            // "bytes_avgame"
	AioQuickApp                   []byte `protobuf:"bytes,251001,opt,name=aio_quick_app,json=aioQuickApp,proto3" json:"aio_quick_app,omitempty"`                                                             // "bytes_aio_quick_app"
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) Reset() {
	*x = OIDB_Type0D50_ExtraSNSFriendData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0D50_ExtraSNSFriendData) ProtoMessage() {}

func (x *OIDB_Type0D50_ExtraSNSFriendData) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0D50_ExtraSNSFriendData.ProtoReflect.Descriptor instead.
func (*OIDB_Type0D50_ExtraSNSFriendData) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 1, 0}
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetFriendUin() uint64 {
	if x != nil {
		return x.FriendUin
	}
	return 0
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetLovers() []byte {
	if x != nil {
		return x.Lovers
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetConfidante() []byte {
	if x != nil {
		return x.Confidante
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetBuddy() []byte {
	if x != nil {
		return x.Buddy
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetFriendTree() []byte {
	if x != nil {
		return x.FriendTree
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetChat() []byte {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetPraise() []byte {
	if x != nil {
		return x.Praise
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetQzoneLove() []byte {
	if x != nil {
		return x.QzoneLove
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetQzoneHouse() []byte {
	if x != nil {
		return x.QzoneHouse
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetMusicSwitch() []byte {
	if x != nil {
		return x.MusicSwitch
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetMutualmarkAlienation() []byte {
	if x != nil {
		return x.MutualmarkAlienation
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetUnreadMessage() []byte {
	if x != nil {
		return x.UnreadMessage
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetBoat() []byte {
	if x != nil {
		return x.Boat
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetCloseFriend() []byte {
	if x != nil {
		return x.CloseFriend
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetMutualmarkScore() []byte {
	if x != nil {
		return x.MutualmarkScore
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetKsingSwitch() []byte {
	if x != nil {
		return x.KsingSwitch
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetLbsShare() []byte {
	if x != nil {
		return x.LbsShare
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetDontForgetMe() []byte {
	if x != nil {
		return x.DontForgetMe
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetMyOnlineStatusVisibleToFrd() []byte {
	if x != nil {
		return x.MyOnlineStatusVisibleToFrd
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetFriendOnlineStatusVisibleToMe() []byte {
	if x != nil {
		return x.FriendOnlineStatusVisibleToMe
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetVisitorRecord() []byte {
	if x != nil {
		return x.VisitorRecord
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetFriendStealRecord() []byte {
	if x != nil {
		return x.FriendStealRecord
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetMyStealRecord() []byte {
	if x != nil {
		return x.MyStealRecord
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetAvgame() []byte {
	if x != nil {
		return x.Avgame
	}
	return nil
}

func (x *OIDB_Type0D50_ExtraSNSFriendData) GetAioQuickApp() []byte {
	if x != nil {
		return x.AioQuickApp
	}
	return nil
}

// KSingRelationInfo
type OIDB_Type0D50_KSingRelationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag uint32 `protobuf:"varint,1,opt,name=flag,proto3" json:"flag,omitempty"` // "flag"
}

func (x *OIDB_Type0D50_KSingRelationInfo) Reset() {
	*x = OIDB_Type0D50_KSingRelationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0D50_KSingRelationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0D50_KSingRelationInfo) ProtoMessage() {}

func (x *OIDB_Type0D50_KSingRelationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0D50_KSingRelationInfo.ProtoReflect.Descriptor instead.
func (*OIDB_Type0D50_KSingRelationInfo) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 1, 1}
}

func (x *OIDB_Type0D50_KSingRelationInfo) GetFlag() uint32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

// ReqBody
type OIDB_Type0D50_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId                            uint64   `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`                                                                                                 // "appid"
	MaxPkgSize                       uint32   `protobuf:"varint,2,opt,name=max_pkg_size,json=maxPkgSize,proto3" json:"max_pkg_size,omitempty"`                                                                                // "max_pkg_size"
	StartTime                        uint32   `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                                     // "start_time"
	StartIndex                       uint32   `protobuf:"varint,4,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"`                                                                                  // "start_index"
	ReqNum                           uint32   `protobuf:"varint,5,opt,name=req_num,json=reqNum,proto3" json:"req_num,omitempty"`                                                                                              // "req_num"
	UinList                          []uint64 `protobuf:"varint,6,rep,packed,name=uin_list,json=uinList,proto3" json:"uin_list,omitempty"`                                                                                    // "rpt_uin_list"
	ReqLovers                        uint32   `protobuf:"varint,11002,opt,name=req_lovers,json=reqLovers,proto3" json:"req_lovers,omitempty"`                                                                                 // "req_lovers"
	ReqConfidante                    uint32   `protobuf:"varint,21002,opt,name=req_confidante,json=reqConfidante,proto3" json:"req_confidante,omitempty"`                                                                     // "req_confidante"
	ReqBuddy                         uint32   `protobuf:"varint,31002,opt,name=req_buddy,json=reqBuddy,proto3" json:"req_buddy,omitempty"`                                                                                    // "req_buddy"
	ReqFriendTree                    uint32   `protobuf:"varint,41001,opt,name=req_friend_tree,json=reqFriendTree,proto3" json:"req_friend_tree,omitempty"`                                                                   // "req_frd_tree"
	ReqChat                          uint32   `protobuf:"varint,51001,opt,name=req_chat,json=reqChat,proto3" json:"req_chat,omitempty"`                                                                                       // "req_chat"
	ReqPraise                        uint32   `protobuf:"varint,61001,opt,name=req_praise,json=reqPraise,proto3" json:"req_praise,omitempty"`                                                                                 // "req_praise"
	ReqQzoneLove                     uint32   `protobuf:"varint,71001,opt,name=req_qzone_love,json=reqQzoneLove,proto3" json:"req_qzone_love,omitempty"`                                                                      // "req_qzone_love"
	ReqQzoneHouse                    uint32   `protobuf:"varint,81001,opt,name=req_qzone_house,json=reqQzoneHouse,proto3" json:"req_qzone_house,omitempty"`                                                                   // "req_qzone_house"
	ReqMusicSwitch                   uint32   `protobuf:"varint,91001,opt,name=req_music_switch,json=reqMusicSwitch,proto3" json:"req_music_switch,omitempty"`                                                                // "req_music_switch"
	ReqMutualmarkAlienation          uint32   `protobuf:"varint,101001,opt,name=req_mutualmark_alienation,json=reqMutualmarkAlienation,proto3" json:"req_mutualmark_alienation,omitempty"`                                    // "req_mutualmark_alienation"
	ReqUnreadMessage                 uint32   `protobuf:"varint,111001,opt,name=req_unread_message,json=reqUnreadMessage,proto3" json:"req_unread_message,omitempty"`                                                         // "req_unread_message"
	ReqBoat                          uint32   `protobuf:"varint,121001,opt,name=req_boat,json=reqBoat,proto3" json:"req_boat,omitempty"`                                                                                      // "req_boat"
	ReqCloseFriend                   uint32   `protobuf:"varint,131001,opt,name=req_close_friend,json=reqCloseFriend,proto3" json:"req_close_friend,omitempty"`                                                               // "req_close_frd"
	ReqMutualmarkScore               uint32   `protobuf:"varint,141001,opt,name=req_mutualmark_score,json=reqMutualmarkScore,proto3" json:"req_mutualmark_score,omitempty"`                                                   // "req_mutualmark_score"
	ReqKsingSwitch                   uint32   `protobuf:"varint,151001,opt,name=req_ksing_switch,json=reqKsingSwitch,proto3" json:"req_ksing_switch,omitempty"`                                                               // "req_ksing_switch"
	ReqMutualmarkLbsshare            uint32   `protobuf:"varint,181001,opt,name=req_mutualmark_lbsshare,json=reqMutualmarkLbsshare,proto3" json:"req_mutualmark_lbsshare,omitempty"`                                          // "req_mutualmark_lbsshare"
	ReqDontForgetMe                  uint32   `protobuf:"varint,211001,opt,name=req_dont_forget_me,json=reqDontForgetMe,proto3" json:"req_dont_forget_me,omitempty"`                                                          // "req_dont_forget_me"
	ReqMyOnlineStatusVisibleToFrd    uint32   `protobuf:"varint,221001,opt,name=req_my_online_status_visible_to_frd,json=reqMyOnlineStatusVisibleToFrd,proto3" json:"req_my_online_status_visible_to_frd,omitempty"`          // "req_my_online_status_visible_to_frd"
	ReqFriendOnlineStatusVisibleToMe uint32   `protobuf:"varint,221002,opt,name=req_friend_online_status_visible_to_me,json=reqFriendOnlineStatusVisibleToMe,proto3" json:"req_friend_online_status_visible_to_me,omitempty"` // "req_frd_online_status_visible_to_me"
	ReqVisitorRecord                 uint32   `protobuf:"varint,231001,opt,name=req_visitor_record,json=reqVisitorRecord,proto3" json:"req_visitor_record,omitempty"`                                                         // "req_visitor_record"
	ReqFriendStealRecord             uint32   `protobuf:"varint,231002,opt,name=req_friend_steal_record,json=reqFriendStealRecord,proto3" json:"req_friend_steal_record,omitempty"`                                           // "req_frd_steal_record"
	ReqMyStealRecord                 uint32   `protobuf:"varint,231003,opt,name=req_my_steal_record,json=reqMyStealRecord,proto3" json:"req_my_steal_record,omitempty"`                                                       // "req_my_steal_record"
	ReqAvgame                        uint32   `protobuf:"varint,241001,opt,name=req_avgame,json=reqAvgame,proto3" json:"req_avgame,omitempty"`                                                                                // "req_avgame"
	ReqAioQuickApp                   uint32   `protobuf:"varint,251001,opt,name=req_aio_quick_app,json=reqAioQuickApp,proto3" json:"req_aio_quick_app,omitempty"`                                                             // "req_aio_quick_app"
}

func (x *OIDB_Type0D50_Request) Reset() {
	*x = OIDB_Type0D50_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0D50_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0D50_Request) ProtoMessage() {}

func (x *OIDB_Type0D50_Request) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0D50_Request.ProtoReflect.Descriptor instead.
func (*OIDB_Type0D50_Request) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 1, 2}
}

func (x *OIDB_Type0D50_Request) GetAppId() uint64 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetMaxPkgSize() uint32 {
	if x != nil {
		return x.MaxPkgSize
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetStartIndex() uint32 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqNum() uint32 {
	if x != nil {
		return x.ReqNum
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetUinList() []uint64 {
	if x != nil {
		return x.UinList
	}
	return nil
}

func (x *OIDB_Type0D50_Request) GetReqLovers() uint32 {
	if x != nil {
		return x.ReqLovers
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqConfidante() uint32 {
	if x != nil {
		return x.ReqConfidante
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqBuddy() uint32 {
	if x != nil {
		return x.ReqBuddy
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqFriendTree() uint32 {
	if x != nil {
		return x.ReqFriendTree
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqChat() uint32 {
	if x != nil {
		return x.ReqChat
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqPraise() uint32 {
	if x != nil {
		return x.ReqPraise
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqQzoneLove() uint32 {
	if x != nil {
		return x.ReqQzoneLove
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqQzoneHouse() uint32 {
	if x != nil {
		return x.ReqQzoneHouse
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqMusicSwitch() uint32 {
	if x != nil {
		return x.ReqMusicSwitch
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqMutualmarkAlienation() uint32 {
	if x != nil {
		return x.ReqMutualmarkAlienation
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqUnreadMessage() uint32 {
	if x != nil {
		return x.ReqUnreadMessage
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqBoat() uint32 {
	if x != nil {
		return x.ReqBoat
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqCloseFriend() uint32 {
	if x != nil {
		return x.ReqCloseFriend
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqMutualmarkScore() uint32 {
	if x != nil {
		return x.ReqMutualmarkScore
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqKsingSwitch() uint32 {
	if x != nil {
		return x.ReqKsingSwitch
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqMutualmarkLbsshare() uint32 {
	if x != nil {
		return x.ReqMutualmarkLbsshare
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqDontForgetMe() uint32 {
	if x != nil {
		return x.ReqDontForgetMe
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqMyOnlineStatusVisibleToFrd() uint32 {
	if x != nil {
		return x.ReqMyOnlineStatusVisibleToFrd
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqFriendOnlineStatusVisibleToMe() uint32 {
	if x != nil {
		return x.ReqFriendOnlineStatusVisibleToMe
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqVisitorRecord() uint32 {
	if x != nil {
		return x.ReqVisitorRecord
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqFriendStealRecord() uint32 {
	if x != nil {
		return x.ReqFriendStealRecord
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqMyStealRecord() uint32 {
	if x != nil {
		return x.ReqMyStealRecord
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqAvgame() uint32 {
	if x != nil {
		return x.ReqAvgame
	}
	return 0
}

func (x *OIDB_Type0D50_Request) GetReqAioQuickApp() uint32 {
	if x != nil {
		return x.ReqAioQuickApp
	}
	return 0
}

// RspBody
type OIDB_Type0D50_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageUpdateData []*OIDB_Type0D50_ExtraSNSFriendData `protobuf:"bytes,1,rep,name=message_update_data,json=messageUpdateData,proto3" json:"message_update_data,omitempty"` // "rpt_msg_update_data"
	Over              uint32                              `protobuf:"varint,11,opt,name=over,proto3" json:"over,omitempty"`                                                    // "uint32_over"
	NextStart         uint32                              `protobuf:"varint,12,opt,name=next_start,json=nextStart,proto3" json:"next_start,omitempty"`                         // "uint32_next_start"
	UnfinishedUins    []uint64                            `protobuf:"varint,13,rep,packed,name=unfinished_uins,json=unfinishedUins,proto3" json:"unfinished_uins,omitempty"`   // "rpt_uint64_unfinished_uins"
}

func (x *OIDB_Type0D50_Response) Reset() {
	*x = OIDB_Type0D50_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0D50_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0D50_Response) ProtoMessage() {}

func (x *OIDB_Type0D50_Response) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0D50_Response.ProtoReflect.Descriptor instead.
func (*OIDB_Type0D50_Response) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 1, 3}
}

func (x *OIDB_Type0D50_Response) GetMessageUpdateData() []*OIDB_Type0D50_ExtraSNSFriendData {
	if x != nil {
		return x.MessageUpdateData
	}
	return nil
}

func (x *OIDB_Type0D50_Response) GetOver() uint32 {
	if x != nil {
		return x.Over
	}
	return 0
}

func (x *OIDB_Type0D50_Response) GetNextStart() uint32 {
	if x != nil {
		return x.NextStart
	}
	return 0
}

func (x *OIDB_Type0D50_Response) GetUnfinishedUins() []uint64 {
	if x != nil {
		return x.UnfinishedUins
	}
	return nil
}

// MutualMarkData
type OIDB_Type0D6B_MutualMarkData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendUin         uint64                   `protobuf:"varint,1,opt,name=friend_uin,json=friendUin,proto3" json:"friend_uin,omitempty"`                               // "uint64_frd_uin"
	Result            uint32                   `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`                                                      // "uint32_result"
	IsGrayForChatMove uint32                   `protobuf:"varint,3,opt,name=is_gray_for_chat_move,json=isGrayForChatMove,proto3" json:"is_gray_for_chat_move,omitempty"` // "uint32_is_gray_for_chat_move"
	MutualMarkInfo    []*MutualMark_MutualMark `protobuf:"bytes,11,rep,name=mutual_mark_info,json=mutualMarkInfo,proto3" json:"mutual_mark_info,omitempty"`              // "mutualmark_info"
}

func (x *OIDB_Type0D6B_MutualMarkData) Reset() {
	*x = OIDB_Type0D6B_MutualMarkData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0D6B_MutualMarkData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0D6B_MutualMarkData) ProtoMessage() {}

func (x *OIDB_Type0D6B_MutualMarkData) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0D6B_MutualMarkData.ProtoReflect.Descriptor instead.
func (*OIDB_Type0D6B_MutualMarkData) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 2, 0}
}

func (x *OIDB_Type0D6B_MutualMarkData) GetFriendUin() uint64 {
	if x != nil {
		return x.FriendUin
	}
	return 0
}

func (x *OIDB_Type0D6B_MutualMarkData) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *OIDB_Type0D6B_MutualMarkData) GetIsGrayForChatMove() uint32 {
	if x != nil {
		return x.IsGrayForChatMove
	}
	return 0
}

func (x *OIDB_Type0D6B_MutualMarkData) GetMutualMarkInfo() []*MutualMark_MutualMark {
	if x != nil {
		return x.MutualMarkInfo
	}
	return nil
}

// ReqBody
type OIDB_Type0D6B_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxPkgSize uint32   `protobuf:"varint,1,opt,name=max_pkg_size,json=maxPkgSize,proto3" json:"max_pkg_size,omitempty"` // "max_pkg_size"
	StartTime  uint32   `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`      // "start_time"
	UinList    []uint64 `protobuf:"varint,11,rep,packed,name=uin_list,json=uinList,proto3" json:"uin_list,omitempty"`    // "rpt_uin_list"
}

func (x *OIDB_Type0D6B_Request) Reset() {
	*x = OIDB_Type0D6B_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0D6B_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0D6B_Request) ProtoMessage() {}

func (x *OIDB_Type0D6B_Request) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0D6B_Request.ProtoReflect.Descriptor instead.
func (*OIDB_Type0D6B_Request) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 2, 1}
}

func (x *OIDB_Type0D6B_Request) GetMaxPkgSize() uint32 {
	if x != nil {
		return x.MaxPkgSize
	}
	return 0
}

func (x *OIDB_Type0D6B_Request) GetStartTime() uint32 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *OIDB_Type0D6B_Request) GetUinList() []uint64 {
	if x != nil {
		return x.UinList
	}
	return nil
}

// RspBody
type OIDB_Type0D6B_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageMutualmarkData []*OIDB_Type0D6B_MutualMarkData `protobuf:"bytes,11,rep,name=message_mutualmark_data,json=messageMutualmarkData,proto3" json:"message_mutualmark_data,omitempty"` // "rpt_msg_mutualmark_data"
	UnfinishedUins        []uint64                        `protobuf:"varint,12,rep,packed,name=unfinished_uins,json=unfinishedUins,proto3" json:"unfinished_uins,omitempty"`                // "rpt_uint64_unfinished_uins"
}

func (x *OIDB_Type0D6B_Response) Reset() {
	*x = OIDB_Type0D6B_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDB_Type0D6B_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDB_Type0D6B_Response) ProtoMessage() {}

func (x *OIDB_Type0D6B_Response) ProtoReflect() protoreflect.Message {
	mi := &file_oidb_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDB_Type0D6B_Response.ProtoReflect.Descriptor instead.
func (*OIDB_Type0D6B_Response) Descriptor() ([]byte, []int) {
	return file_oidb_proto_rawDescGZIP(), []int{1, 2, 2}
}

func (x *OIDB_Type0D6B_Response) GetMessageMutualmarkData() []*OIDB_Type0D6B_MutualMarkData {
	if x != nil {
		return x.MessageMutualmarkData
	}
	return nil
}

func (x *OIDB_Type0D6B_Response) GetUnfinishedUins() []uint64 {
	if x != nil {
		return x.UnfinishedUins
	}
	return nil
}

var File_oidb_proto protoreflect.FileDescriptor

var file_oidb_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6f, 0x69, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x12, 0x0a, 0x0a,
	0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x1a, 0x4b, 0x0a, 0x0f, 0x4d, 0x75,
	0x74, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x8d, 0x0a, 0x0a, 0x0a, 0x4d, 0x75, 0x74, 0x75,
	0x61, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x72, 0x63, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x73, 0x72, 0x63, 0x55, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x73, 0x74,
	0x5f, 0x75, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x73, 0x74, 0x55,
	0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x63, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x69, 0x63, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x63,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x69, 0x63, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x11, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x76,
	0x65, 0x72, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x56, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x65, 0x72, 0x18, 0xc9, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x56, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x11, 0x6d,
	0x75, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79,
	0x18, 0xe8, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c,
	0x4d, 0x61, 0x72, 0x6b, 0x2e, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x79, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0xe9,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x4c, 0x61, 0x73, 0x74,
	0x57, 0x65, 0x65, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x64, 0x64,
	0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x88, 0x27, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x89, 0x27, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x61, 0x64,
	0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x3d, 0x0a, 0x1b, 0x61,
	0x64, 0x64, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x8a, 0x27, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x17, 0x61, 0x64, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0xf0, 0x2e, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x64, 0x65, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x32, 0x63, 0x5f,
	0x35, 0x30, 0x18, 0x98, 0x75, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x75, 0x73, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x43, 0x32, 0x63, 0x35, 0x30, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x32, 0x63, 0x5f, 0x31, 0x30, 0x30, 0x18, 0x99, 0x75,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x70, 0x75, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x43, 0x32,
	0x63, 0x31, 0x30, 0x30, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x74, 0x61, 0x6c, 0x6b, 0x18, 0x9a, 0x75, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70,
	0x75, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x6c, 0x6b, 0x12, 0x2e, 0x0a, 0x13, 0x70,
	0x75, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x32,
	0x30, 0x30, 0x18, 0x80, 0x7d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x70, 0x75, 0x73, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x32, 0x30, 0x30, 0x12, 0x2e, 0x0a, 0x13, 0x70,
	0x75, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x34,
	0x30, 0x30, 0x18, 0x81, 0x7d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x70, 0x75, 0x73, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x34, 0x30, 0x30, 0x12, 0x2e, 0x0a, 0x13, 0x70,
	0x75, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x36,
	0x30, 0x30, 0x18, 0x82, 0x7d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x70, 0x75, 0x73, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x36, 0x30, 0x30, 0x12, 0x2e, 0x0a, 0x13, 0x70,
	0x75, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x38,
	0x30, 0x30, 0x18, 0x83, 0x7d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x70, 0x75, 0x73, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x38, 0x30, 0x30, 0x12, 0x30, 0x0a, 0x14, 0x70,
	0x75, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x31,
	0x30, 0x30, 0x30, 0x18, 0x84, 0x7d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x70, 0x75, 0x73, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x31, 0x30, 0x30, 0x30, 0x12, 0x30, 0x0a,
	0x14, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x5f, 0x31, 0x32, 0x30, 0x30, 0x18, 0x85, 0x7d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x70, 0x75,
	0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x31, 0x32, 0x30, 0x30, 0x12,
	0x36, 0x0a, 0x16, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0xe8, 0x84, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x14, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x57, 0x6f, 0x72, 0x64, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x1a, 0xc7, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x74,
	0x6f, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63,
	0x61, 0x72, 0x74, 0x6f, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72,
	0x74, 0x6f, 0x6f, 0x6e, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x63, 0x61, 0x72, 0x74, 0x6f, 0x6f, 0x6e, 0x4d, 0x64, 0x35, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x77, 0x6f, 0x72,
	0x64, 0x1a, 0xca, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x5f, 0x31, 0x37, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x6f, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x74,
	0x6f, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x74, 0x6f, 0x6f,
	0x6e, 0x5f, 0x6d, 0x64, 0x35, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x61, 0x72,
	0x74, 0x6f, 0x6f, 0x6e, 0x4d, 0x64, 0x35, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x63, 0x61, 0x72, 0x74, 0x6f, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70,
	0x6c, 0x61, 0x79, 0x43, 0x61, 0x72, 0x74, 0x6f, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0xea,
	0x03, 0x0a, 0x14, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x57, 0x6f, 0x72, 0x64, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x73, 0x65, 0x74, 0x55, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x66, 0x66, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x75, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f,
	0x77, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x55, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x74, 0x0a, 0x26, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x2e, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x69, 0x6e, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x74, 0x0a, 0x26, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x77, 0x6f, 0x72,
	0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61,
	0x72, 0x6b, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4d, 0x61, 0x78, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x57, 0x6f, 0x72, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x86, 0x01, 0x0a, 0x16,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x2b, 0x0a, 0x12, 0x63, 0x61, 0x6e, 0x5f,
	0x67, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x67, 0x69,
	0x76, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x47, 0x69, 0x76, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xf6, 0x77, 0x0a, 0x04, 0x4f, 0x49, 0x44, 0x42, 0x1a, 0xd9, 0x60,
	0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x1a, 0xbd, 0x02, 0x0a, 0x0c, 0x47,
	0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0b, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x00, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x02, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x62, 0x72, 0x69, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x03, 0x52, 0x05,
	0x62, 0x72, 0x69, 0x65, 0x66, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x72,
	0x65, 0x6c, 0x69, 0x61, 0x6f, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x72, 0x65, 0x6c, 0x69, 0x61, 0x6f,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x1a, 0xb8, 0x02, 0x0a, 0x0b, 0x54,
	0x6f, 0x70, 0x54, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x02, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x03, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x04, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12,
	0x1a, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x05, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x49, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x06, 0x52, 0x05, 0x64,
	0x61, 0x74, 0x61, 0x41, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x07, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x50,
	0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x70, 0x1a, 0x3c, 0x0a, 0x0f, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x1a, 0xe2, 0x02, 0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x47,
	0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75,
	0x73, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62,
	0x75, 0x73, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x73, 0x69, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x62, 0x75, 0x73, 0x69, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x74, 0x72, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x74, 0x72, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x32, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x63, 0x32, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30,
	0x38, 0x35, 0x37, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x11,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x74,
	0x69, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x74, 0x69, 0x70, 0x73, 0x53, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x62, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x1a, 0xe1, 0x01, 0x0a, 0x0f, 0x47, 0x6f, 0x6c,
	0x64, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x70, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x6e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x03, 0x75, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3e, 0x0a, 0x08,
	0x47, 0x72, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x6c, 0x5f,
	0x72, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x61, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x49, 0x64, 0x1a, 0x64, 0x0a, 0x14,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x54, 0x42, 0x43,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x65, 0x65, 0x64, 0x73, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x56, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x73, 0x79, 0x6e, 0x63,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x71, 0x1a, 0xe5, 0x02, 0x0a, 0x0f, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x68, 0x6f, 0x6e, 0x6f, 0x72, 0x5f, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x39, 0x0a, 0x19,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x16, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x65, 0x78, 0x74, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x65, 0x78, 0x74, 0x34, 0x12, 0x27,
	0x0a, 0x0f, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x44,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x66, 0x6c, 0x61, 0x67, 0x65, 0x78, 0x74, 0x33, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x65, 0x78, 0x74, 0x33, 0x12, 0x26, 0x0a,
	0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x45, 0x78, 0x74, 0x12, 0x2b, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x53,
	0x65, 0x71, 0x1a, 0x7c, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x70, 0x75,
	0x6c, 0x6c, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x0c, 0x61, 0x75, 0x74, 0x6f, 0x50, 0x75, 0x6c, 0x6c, 0x46, 0x6c, 0x61, 0x67, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x01, 0x52, 0x07, 0x66, 0x65, 0x65, 0x64, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x66,
	0x6c, 0x61, 0x67, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x69, 0x64,
	0x1a, 0xf7, 0x01, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x12, 0x4c, 0x0a, 0x14, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38,
	0x35, 0x37, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x49, 0x6e,
	0x73, 0x74, 0x12, 0x4d, 0x0a, 0x14, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x12, 0x47, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4f,
	0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x1a, 0xf6, 0x01, 0x0a, 0x0c, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x70, 0x70,
	0x70, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x5f,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x70, 0x65,
	0x6e, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x73, 0x6f, 0x5f, 0x62, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x73, 0x6f, 0x42, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x67, 0x75, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x76, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x65, 0x72,
	0x4d, 0x61, 0x78, 0x1a, 0xca, 0x02, 0x0a, 0x16, 0x4c, 0x62, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x74, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x74, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x67, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x67, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6a,
	0x6f, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6a, 0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x75, 0x73,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x33, 0x0a, 0x0e, 0x4c, 0x75, 0x63, 0x6b, 0x79, 0x42, 0x61, 0x67, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x69, 0x70, 0x73, 0x1a, 0xdb, 0x04, 0x0a, 0x13, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x74, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x74, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x08, 0x67, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f,
	0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6a,
	0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x62, 0x0a, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x30, 0x38, 0x35, 0x37, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x50, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x6a,
	0x6f, 0x69, 0x6e, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x57, 0x68, 0x65, 0x6e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x62, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6f,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x6f, 0x6e,
	0x74, 0x49, 0x64, 0x1a, 0x88, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x6f, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x02, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x1a, 0xf3,
	0x04, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x45, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35,
	0x37, 0x2e, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x55, 0x69, 0x6e, 0x12, 0x3d, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x77,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0x8b, 0x02, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x66, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x75, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55,
	0x69, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f,
	0x75, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x12, 0x69, 0x73, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x21, 0x0a, 0x0d, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x1a, 0xf8, 0x19, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x17, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2c,
	0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x3d, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30,
	0x38, 0x35, 0x37, 0x2e, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x04, 0x52, 0x08, 0x67, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x43, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f, 0x78, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x30, 0x38, 0x35, 0x37, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x78, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f,
	0x78, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4f, 0x49, 0x44,
	0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x06, 0x52, 0x0b, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x70, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x08,
	0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x54,
	0x6f, 0x70, 0x54, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x07, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x54, 0x69, 0x70, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x70, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4f, 0x49, 0x44,
	0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x52, 0x65, 0x64, 0x47, 0x72,
	0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x08, 0x52, 0x07, 0x72, 0x65,
	0x64, 0x54, 0x69, 0x70, 0x73, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x09,
	0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x3a, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37,
	0x2e, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x48,
	0x0a, 0x52, 0x06, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x0c,
	0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38,
	0x35, 0x37, 0x2e, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x48, 0x0b, 0x52, 0x0b, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x61, 0x0a, 0x15, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x0c, 0x52, 0x13, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0d, 0x77,
	0x65, 0x72, 0x65, 0x77, 0x6f, 0x6c, 0x66, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38,
	0x35, 0x37, 0x2e, 0x57, 0x65, 0x72, 0x65, 0x57, 0x6f, 0x6c, 0x66, 0x50, 0x75, 0x73, 0x68, 0x48,
	0x0d, 0x52, 0x0c, 0x77, 0x65, 0x72, 0x65, 0x77, 0x6f, 0x6c, 0x66, 0x50, 0x75, 0x73, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x40, 0x0a, 0x09, 0x67, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x47, 0x6f, 0x6c, 0x64, 0x4d, 0x73, 0x67, 0x54, 0x69, 0x70,
	0x73, 0x45, 0x6c, 0x65, 0x6d, 0x48, 0x0e, 0x52, 0x08, 0x67, 0x6f, 0x6c, 0x64, 0x54, 0x69, 0x70,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x4d, 0x69,
	0x6e, 0x69, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x0f, 0x52, 0x0d, 0x6d,
	0x69, 0x6e, 0x69, 0x41, 0x70, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x10, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x69, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x10, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x5f, 0x62, 0x61, 0x67,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x4c, 0x75,
	0x63, 0x6b, 0x79, 0x42, 0x61, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x11, 0x52, 0x0e,
	0x6c, 0x75, 0x63, 0x6b, 0x79, 0x42, 0x61, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x5a, 0x0a, 0x14, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x74, 0x69, 0x70, 0x73, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e,
	0x54, 0x72, 0x6f, 0x6f, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x12, 0x52, 0x11, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x46, 0x6f,
	0x72, 0x6d, 0x54, 0x69, 0x70, 0x73, 0x50, 0x75, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a,
	0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35,
	0x37, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x13, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x75,
	0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a, 0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x5f, 0x67, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x14, 0x52, 0x0e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x47, 0x72, 0x61,
	0x79, 0x54, 0x69, 0x70, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x5f, 0x70, 0x75, 0x73, 0x68, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x4f, 0x49,
	0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x15, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12,
	0x66, 0x0a, 0x1a, 0x6c, 0x62, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30,
	0x38, 0x35, 0x37, 0x2e, 0x4c, 0x62, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x16, 0x52, 0x16, 0x6c, 0x62,
	0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6c, 0x75, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x09, 0x73, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x75, 0x73, 0x68, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x4f, 0x49, 0x44,
	0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x17, 0x52,
	0x08, 0x73, 0x69, 0x6e, 0x67, 0x50, 0x75, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x4f, 0x0a, 0x11,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x18, 0x52, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x5f, 0x0a,
	0x17, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f,
	0x74, 0x62, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x54, 0x42, 0x43, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x19, 0x52, 0x14, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6e, 0x6e, 0x6f,
	0x75, 0x6e, 0x63, 0x65, 0x54, 0x62, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x5d,
	0x0a, 0x17, 0x71, 0x71, 0x5f, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x70, 0x75, 0x73, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e,
	0x51, 0x51, 0x56, 0x65, 0x64, 0x69, 0x6f, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x1a, 0x52, 0x13, 0x71, 0x71, 0x56, 0x65, 0x64, 0x69, 0x6f, 0x47, 0x61,
	0x6d, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x5b, 0x0a,
	0x17, 0x71, 0x71, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x51,
	0x51, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x48,
	0x1b, 0x52, 0x14, 0x71, 0x71, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x68, 0x0a, 0x19, 0x73, 0x74,
	0x75, 0x64, 0x79, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x53, 0x74,
	0x75, 0x64, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x48, 0x1c, 0x52, 0x16, 0x73, 0x74, 0x75, 0x64, 0x79,
	0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x0e, 0x71, 0x71, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4f,
	0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x51, 0x51, 0x56,
	0x61, 0x4c, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4d, 0x73, 0x67, 0x48, 0x1d,
	0x52, 0x0c, 0x71, 0x71, 0x4c, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x52, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x64, 0x79, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x48, 0x1e,
	0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x4e, 0x6f, 0x74, 0x69,
	0x64, 0x79, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x19, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x65, 0x71, 0x18, 0x25, 0x20, 0x01, 0x28, 0x04, 0x48, 0x1f, 0x52, 0x16, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x71, 0x88, 0x01, 0x01, 0x12, 0x6c, 0x0a, 0x1c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4f, 0x49,
	0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x51, 0x51, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x48, 0x20, 0x52, 0x19, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x73, 0x79, 0x73, 0x64, 0x62, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x27, 0x20, 0x01, 0x28, 0x04, 0x48, 0x21, 0x52,
	0x0e, 0x73, 0x79, 0x73, 0x64, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x6b, 0x0a, 0x1a, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x5f, 0x67, 0x72, 0x61,
	0x79, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x73,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x47, 0x72, 0x61,
	0x79, 0x54, 0x69, 0x70, 0x73, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x63, 0x65, 0x6c, 0x65, 0x73,
	0x73, 0x48, 0x22, 0x52, 0x17, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x47, 0x72, 0x61, 0x79, 0x54,
	0x69, 0x70, 0x73, 0x54, 0x72, 0x61, 0x63, 0x65, 0x6c, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x67, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f, 0x78, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x66,
	0x6c, 0x6f, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x74, 0x6f, 0x70, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x70, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x63, 0x61, 0x6c,
	0x6c, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x77, 0x65, 0x72, 0x65, 0x77, 0x6f, 0x6c, 0x66, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x67, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x42, 0x12, 0x0a, 0x10,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x42,
	0x13, 0x0a, 0x11, 0x5f, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x5f, 0x62, 0x61, 0x67, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x74, 0x72, 0x6f, 0x6f, 0x70, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x69,
	0x70, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x75, 0x73, 0x68,
	0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x6c, 0x62, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x42, 0x14, 0x0a,
	0x12, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x62, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42,
	0x1a, 0x0a, 0x18, 0x5f, 0x71, 0x71, 0x5f, 0x76, 0x65, 0x64, 0x69, 0x6f, 0x5f, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x1a, 0x0a, 0x18, 0x5f,
	0x71, 0x71, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x73, 0x74, 0x75, 0x64,
	0x79, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x71, 0x71, 0x5f, 0x6c, 0x69, 0x76,
	0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x64, 0x79, 0x42,
	0x1c, 0x0a, 0x1a, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x42, 0x1f, 0x0a,
	0x1d, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x42, 0x13,
	0x0a, 0x11, 0x5f, 0x73, 0x79, 0x73, 0x64, 0x62, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x5f, 0x67,
	0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x6c, 0x65,
	0x73, 0x73, 0x1a, 0x87, 0x01, 0x0a, 0x19, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x62, 0x6a, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6f, 0x62, 0x6a, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0xf4, 0x02, 0x0a,
	0x10, 0x51, 0x51, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4d, 0x73,
	0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65,
	0x71, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x73,
	0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6c, 0x61, 0x73,
	0x74, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x78, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0xf4, 0x01, 0x0a, 0x17, 0x51, 0x51, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x69, 0x63,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x4e,
	0x69, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x63, 0x63, 0x5f, 0x63, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x43, 0x6e, 0x74, 0x12, 0x4a,
	0x0a, 0x0c, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x30, 0x38, 0x35, 0x37, 0x2e, 0x51, 0x51, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x81, 0x01, 0x0a, 0x18, 0x51,
	0x51, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x82,
	0x01, 0x0a, 0x11, 0x51, 0x51, 0x56, 0x61, 0x4c, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x74, 0x31, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x65, 0x78, 0x74, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x65,
	0x78, 0x74, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x65, 0x78, 0x74, 0x32, 0x12,
	0x12, 0x0a, 0x04, 0x65, 0x78, 0x74, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x65,
	0x78, 0x74, 0x33, 0x1a, 0xb0, 0x01, 0x0a, 0x13, 0x51, 0x51, 0x56, 0x65, 0x64, 0x69, 0x6f, 0x47,
	0x61, 0x6d, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x74, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x74, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65,
	0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xb7, 0x05, 0x0a, 0x0f, 0x52, 0x65, 0x64, 0x47, 0x72,
	0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0c, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x00, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x69,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x55, 0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x72,
	0x69, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x69, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x72, 0x69, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x69, 0x63,
	0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68,
	0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6b,
	0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6c, 0x75, 0x63, 0x6b, 0x79, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x68,
	0x69, 0x64, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x68, 0x69, 0x64, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x63, 0x5f, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x63, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x5f, 0x75,
	0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x75, 0x63, 0x6b, 0x79, 0x55,
	0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x34,
	0x0a, 0x16, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x69, 0x63, 0x68,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x69, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x64, 0x69, 0x6f, 0x6d, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x64, 0x69, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64,
	0x69, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69,
	0x64, 0x69, 0x6f, 0x6d, 0x53, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x69, 0x6f, 0x6d,
	0x5f, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x69, 0x64,
	0x69, 0x6f, 0x6d, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x75, 0x6d, 0x70,
	0x75, 0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x75,
	0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x65, 0x6d, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x6f, 0x65, 0x6d, 0x52, 0x75, 0x6c, 0x65, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x65, 0x73, 0x74,
	0x1a, 0xa2, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x75, 0x69, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x75, 0x69, 0x6e, 0x73,
	0x12, 0x1d, 0x0a, 0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x01, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x4a, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x5f,
	0x63, 0x74, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4f, 0x49, 0x44,
	0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x43, 0x74, 0x72, 0x6c, 0x12, 0x15, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x02, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x62, 0x75, 0x73, 0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x42,
	0x06, 0x0a, 0x04, 0x5f, 0x6d, 0x73, 0x67, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x62, 0x75, 0x73, 0x69,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x98, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74,
	0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x4d, 0x73, 0x67, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x6c, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x73, 0x69, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x62, 0x75, 0x73, 0x69, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x69, 0x70, 0x73, 0x5f, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x70, 0x73, 0x53, 0x65, 0x71, 0x49, 0x64,
	0x1a, 0x3d, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x1a,
	0xb7, 0x01, 0x0a, 0x12, 0x53, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x67, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x73, 0x1a, 0x3e, 0x0a, 0x19, 0x53, 0x74, 0x75,
	0x64, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x36, 0x0a, 0x0a, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x1a, 0xa0, 0x01, 0x0a, 0x10, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x66, 0x65, 0x65, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x6d, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x74, 0x68, 0x65,
	0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x75, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x75, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x69, 0x6e, 0x1a, 0xbc, 0x01, 0x0a, 0x15, 0x54, 0x72, 0x6f, 0x6f, 0x70, 0x46, 0x6f,
	0x72, 0x6d, 0x47, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x69, 0x63, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x69, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x75, 0x72, 0x6c, 0x1a, 0xf2, 0x01, 0x0a, 0x13, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x70, 0x65,
	0x72, 0x55, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x70,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x72, 0x61, 0x79, 0x54, 0x69, 0x70,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xfe, 0x0a, 0x0a, 0x0c, 0x57, 0x65, 0x72,
	0x65, 0x57, 0x6f, 0x6c, 0x66, 0x50, 0x75, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x75, 0x73,
	0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x75,
	0x73, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72,
	0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x65, 0x6e,
	0x75, 0x6d, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x67, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x4f, 0x49, 0x44, 0x42,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x57, 0x65, 0x72, 0x65, 0x57, 0x6f,
	0x6c, 0x66, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x6a, 0x75, 0x64, 0x67, 0x65, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x55, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x6a, 0x75, 0x64, 0x67, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e,
	0x75, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x65, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x72, 0x63, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x72, 0x63, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x64, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x64, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x61, 0x64, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09, 0x64, 0x65, 0x61,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x67, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x12, 0x25, 0x0a, 0x0e, 0x6b, 0x69, 0x6c, 0x6c,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x6f, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x0d, 0x76, 0x6f, 0x74, 0x65, 0x64, 0x54, 0x69, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x5c,
	0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x77, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x72, 0x61, 0x77,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x72, 0x61, 0x77, 0x1a, 0xca, 0x05, 0x0a,
	0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x75, 0x6d,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x53, 0x70, 0x65, 0x61, 0x6b,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x61, 0x6e, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63,
	0x61, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x76, 0x6f,
	0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x56, 0x6f,
	0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x61, 0x6c,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x53, 0x61, 0x76, 0x65,
	0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x70, 0x6f, 0x69,
	0x73, 0x6f, 0x6e, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x6c, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x50, 0x6f, 0x69, 0x73, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x20, 0x0a, 0x0c, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x5f, 0x6f, 0x70, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x44, 0x65, 0x61, 0x64, 0x4f,
	0x70, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x65, 0x6e, 0x75, 0x6d, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x64, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x56, 0x0a, 0x13,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x4f, 0x49, 0x44, 0x42,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x38, 0x35, 0x37, 0x2e, 0x57, 0x65, 0x72, 0x65, 0x57, 0x6f,
	0x6c, 0x66, 0x50, 0x75, 0x73, 0x68, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x77, 0x65, 0x72, 0x65, 0x77,
	0x6f, 0x6c, 0x66, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x73, 0x57, 0x65, 0x72,
	0x65, 0x77, 0x6f, 0x6c, 0x66, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65,
	0x66, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x73, 0x68, 0x65, 0x72, 0x69, 0x66, 0x66, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x69, 0x73, 0x53, 0x68, 0x65, 0x72, 0x69, 0x66, 0x66, 0x1a, 0xd2, 0x13, 0x0a, 0x08, 0x54, 0x79,
	0x70, 0x65, 0x30, 0x44, 0x35, 0x30, 0x1a, 0xcf, 0x07, 0x0a, 0x12, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x53, 0x4e, 0x53, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x06,
	0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0xfa, 0x55, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6c,
	0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x61,
	0x6e, 0x74, 0x65, 0x18, 0x8a, 0xa4, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x64, 0x61, 0x6e, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x62, 0x75, 0x64, 0x64, 0x79,
	0x18, 0x9a, 0xf2, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x75, 0x64, 0x64, 0x79, 0x12,
	0x21, 0x0a, 0x0b, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0xa9,
	0xc0, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x72,
	0x65, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0xb9, 0x8e, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x06, 0x70, 0x72, 0x61, 0x69,
	0x73, 0x65, 0x18, 0xc9, 0xdc, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x72, 0x61, 0x69,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x71, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65,
	0x18, 0xd9, 0xaa, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x71, 0x7a, 0x6f, 0x6e, 0x65, 0x4c,
	0x6f, 0x76, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x71, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x18, 0xe9, 0xf8, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x71, 0x7a, 0x6f, 0x6e,
	0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f,
	0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0xf9, 0xc6, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x35, 0x0a, 0x15, 0x6d,
	0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x61, 0x6c, 0x69, 0x65, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x89, 0x95, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x6d, 0x75,
	0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72, 0x6b, 0x41, 0x6c, 0x69, 0x65, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0e, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x99, 0xe3, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x75, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x62,
	0x6f, 0x61, 0x74, 0x18, 0xa9, 0xb1, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x61,
	0x74, 0x12, 0x23, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x18, 0xb9, 0xff, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12, 0x2b, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c,
	0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0xc9, 0xcd, 0x08, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72, 0x6b, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x6b, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x18, 0xd9, 0x9b, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6b, 0x73, 0x69,
	0x6e, 0x67, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x1d, 0x0a, 0x09, 0x6c, 0x62, 0x73, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x89, 0x86, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6c,
	0x62, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x6f, 0x6e, 0x74, 0x5f,
	0x66, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x18, 0xb9, 0xf0, 0x0c, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x64, 0x6f, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x12,
	0x45, 0x0a, 0x1f, 0x6d, 0x79, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x66,
	0x72, 0x64, 0x18, 0xc9, 0xbe, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1a, 0x6d, 0x79, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x54, 0x6f, 0x46, 0x72, 0x64, 0x12, 0x4b, 0x0a, 0x22, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x65, 0x18, 0xca, 0xbe, 0x0d,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x1d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54,
	0x6f, 0x4d, 0x65, 0x12, 0x27, 0x0a, 0x0e, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0xd9, 0x8c, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x76,
	0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x30, 0x0a, 0x13,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x18, 0xda, 0x8c, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x6d, 0x79, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x18, 0xdb, 0x8c, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6d, 0x79, 0x53, 0x74, 0x65,
	0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x06, 0x61, 0x76, 0x67, 0x61,
	0x6d, 0x65, 0x18, 0xe9, 0xda, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x76, 0x67, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x69, 0x6f, 0x5f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f,
	0x61, 0x70, 0x70, 0x18, 0xf9, 0xa8, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x69, 0x6f,
	0x51, 0x75, 0x69, 0x63, 0x6b, 0x41, 0x70, 0x70, 0x1a, 0x27, 0x0a, 0x11, 0x4b, 0x53, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x6c, 0x61,
	0x67, 0x1a, 0x8e, 0x0a, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6b, 0x67, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50,
	0x6b, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x71, 0x4e, 0x75, 0x6d, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x07, 0x75, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0xfa, 0x55, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x4c, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0e, 0x72, 0x65,
	0x71, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x61, 0x6e, 0x74, 0x65, 0x18, 0x8a, 0xa4, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x61,
	0x6e, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x5f, 0x62, 0x75, 0x64, 0x64, 0x79,
	0x18, 0x9a, 0xf2, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x71, 0x42, 0x75, 0x64,
	0x64, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0xa9, 0xc0, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72,
	0x65, 0x71, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x65, 0x65, 0x12, 0x1b, 0x0a, 0x08,
	0x72, 0x65, 0x71, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x18, 0xb9, 0x8e, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x5f, 0x70, 0x72, 0x61, 0x69, 0x73, 0x65, 0x18, 0xc9, 0xdc, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x50, 0x72, 0x61, 0x69, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65,
	0x71, 0x5f, 0x71, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x6c, 0x6f, 0x76, 0x65, 0x18, 0xd9, 0xaa, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x51, 0x7a, 0x6f, 0x6e, 0x65, 0x4c, 0x6f,
	0x76, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x5f, 0x71, 0x7a, 0x6f, 0x6e, 0x65, 0x5f,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0xe9, 0xf8, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72,
	0x65, 0x71, 0x51, 0x7a, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x72, 0x65, 0x71, 0x5f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x18, 0xf9, 0xc6, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x4d, 0x75, 0x73,
	0x69, 0x63, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x3c, 0x0a, 0x19, 0x72, 0x65, 0x71, 0x5f,
	0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x61, 0x6c, 0x69, 0x65, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x89, 0x95, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x72,
	0x65, 0x71, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72, 0x6b, 0x41, 0x6c, 0x69, 0x65,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x5f, 0x75, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x99, 0xe3, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72, 0x65, 0x71, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x5f, 0x62, 0x6f,
	0x61, 0x74, 0x18, 0xa9, 0xb1, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x71, 0x42,
	0x6f, 0x61, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0xb9, 0xff, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x72, 0x65, 0x71, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x12,
	0x32, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72,
	0x6b, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0xc9, 0xcd, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x72, 0x65, 0x71, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72, 0x6b, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x5f, 0x6b, 0x73, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0xd9, 0x9b, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x72, 0x65, 0x71, 0x4b, 0x73, 0x69, 0x6e, 0x67, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12,
	0x38, 0x0a, 0x17, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72,
	0x6b, 0x5f, 0x6c, 0x62, 0x73, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x89, 0x86, 0x0b, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x15, 0x72, 0x65, 0x71, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72,
	0x6b, 0x4c, 0x62, 0x73, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x71,
	0x5f, 0x64, 0x6f, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x18,
	0xb9, 0xf0, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x44, 0x6f, 0x6e, 0x74,
	0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x65, 0x12, 0x4c, 0x0a, 0x23, 0x72, 0x65, 0x71, 0x5f,
	0x6d, 0x79, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x66, 0x72, 0x64, 0x18,
	0xc9, 0xbe, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1d, 0x72, 0x65, 0x71, 0x4d, 0x79, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x54, 0x6f, 0x46, 0x72, 0x64, 0x12, 0x52, 0x0a, 0x26, 0x72, 0x65, 0x71, 0x5f, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x65,
	0x18, 0xca, 0xbe, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x20, 0x72, 0x65, 0x71, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x4d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65,
	0x71, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x18, 0xd9, 0x8c, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72, 0x65, 0x71, 0x56, 0x69, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x37, 0x0a, 0x17, 0x72, 0x65,
	0x71, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x65, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0xda, 0x8c, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x72,
	0x65, 0x71, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x5f, 0x6d, 0x79, 0x5f, 0x73, 0x74,
	0x65, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0xdb, 0x8c, 0x0e, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x72, 0x65, 0x71, 0x4d, 0x79, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x5f, 0x61, 0x76, 0x67, 0x61,
	0x6d, 0x65, 0x18, 0xe9, 0xda, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x71, 0x41,
	0x76, 0x67, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x5f, 0x61, 0x69, 0x6f,
	0x5f, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x61, 0x70, 0x70, 0x18, 0xf9, 0xa8, 0x0f, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x41, 0x69, 0x6f, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x41,
	0x70, 0x70, 0x1a, 0xb9, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x13, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x4f,
	0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x44, 0x35, 0x30, 0x2e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x53, 0x4e, 0x53, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0e,
	0x75, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x55, 0x69, 0x6e, 0x73, 0x1a, 0xbc,
	0x03, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x30, 0x44, 0x36, 0x42, 0x1a, 0xbb, 0x01, 0x0a, 0x0e,
	0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x69, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x15, 0x69, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x79,
	0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x69, 0x73, 0x47, 0x72, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x40, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x2e, 0x4d,
	0x75, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x0e, 0x6d, 0x75, 0x74, 0x75, 0x61,
	0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x65, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6b, 0x67, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50,
	0x6b, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x75, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x1a, 0x8a, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a,
	0x17, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d,
	0x61, 0x72, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x4f, 0x49, 0x44, 0x42, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x30, 0x44, 0x36, 0x42, 0x2e, 0x4d,
	0x75, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x15, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x6d, 0x61, 0x72, 0x6b,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0e, 0x75,
	0x6e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x55, 0x69, 0x6e, 0x73, 0x42, 0x07, 0x5a,
	0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_oidb_proto_rawDescOnce sync.Once
	file_oidb_proto_rawDescData = file_oidb_proto_rawDesc
)

func file_oidb_proto_rawDescGZIP() []byte {
	file_oidb_proto_rawDescOnce.Do(func() {
		file_oidb_proto_rawDescData = protoimpl.X.CompressGZIP(file_oidb_proto_rawDescData)
	})
	return file_oidb_proto_rawDescData
}

var file_oidb_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_oidb_proto_goTypes = []interface{}{
	(*MutualMark)(nil),                                        // 0: MutualMark
	(*OIDB)(nil),                                              // 1: OIDB
	(*MutualMark_MutualActionDay)(nil),                        // 2: MutualMark.MutualActionDay
	(*MutualMark_MutualMark)(nil),                             // 3: MutualMark.MutualMark
	(*MutualMark_ResourceInfo)(nil),                           // 4: MutualMark.ResourceInfo
	(*MutualMark_ResourceInfo_17)(nil),                        // 5: MutualMark.ResourceInfo_17
	(*MutualMark_SpecialWordAttribute)(nil),                   // 6: MutualMark.SpecialWordAttribute
	(*MutualMark_SpecialWordCardGetInfo)(nil),                 // 7: MutualMark.SpecialWordCardGetInfo
	(*OIDB_Type0857)(nil),                                     // 8: OIDB.Type0857
	(*OIDB_Type0D50)(nil),                                     // 9: OIDB.Type0D50
	(*OIDB_Type0D6B)(nil),                                     // 10: OIDB.Type0D6B
	(*OIDB_Type0857_GrayTipsInfo)(nil),                        // 11: OIDB.Type0857.GrayTipsInfo
	(*OIDB_Type0857_TopTipsInfo)(nil),                         // 12: OIDB.Type0857.TopTipsInfo
	(*OIDB_Type0857_FloatedTipsInfo)(nil),                     // 13: OIDB.Type0857.FloatedTipsInfo
	(*OIDB_Type0857_GeneralGrayTipInfo)(nil),                  // 14: OIDB.Type0857.GeneralGrayTipInfo
	(*OIDB_Type0857_GoldMsgTipsElem)(nil),                     // 15: OIDB.Type0857.GoldMsgTipsElem
	(*OIDB_Type0857_GrayData)(nil),                            // 16: OIDB.Type0857.GrayData
	(*OIDB_Type0857_GroupAnnounceTBCInfo)(nil),                // 17: OIDB.Type0857.GroupAnnounceTBCInfo
	(*OIDB_Type0857_GroupAsyncNotify)(nil),                    // 18: OIDB.Type0857.GroupAsyncNotify
	(*OIDB_Type0857_GroupInfoChange)(nil),                     // 19: OIDB.Type0857.GroupInfoChange
	(*OIDB_Type0857_GroupNotifyInfo)(nil),                     // 20: OIDB.Type0857.GroupNotifyInfo
	(*OIDB_Type0857_InstanceControl)(nil),                     // 21: OIDB.Type0857.InstanceControl
	(*OIDB_Type0857_InstanceInfo)(nil),                        // 22: OIDB.Type0857.InstanceInfo
	(*OIDB_Type0857_LbsShareChangePushInfo)(nil),              // 23: OIDB.Type0857.LbsShareChangePushInfo
	(*OIDB_Type0857_LuckyBagNotify)(nil),                      // 24: OIDB.Type0857.LuckyBagNotify
	(*OIDB_Type0857_MediaChangePushInfo)(nil),                 // 25: OIDB.Type0857.MediaChangePushInfo
	(*OIDB_Type0857_MessageBoxInfo)(nil),                      // 26: OIDB.Type0857.MessageBoxInfo
	(*OIDB_Type0857_RecallReminder)(nil),                      // 27: OIDB.Type0857.RecallReminder
	(*OIDB_Type0857_MiniAppNotify)(nil),                       // 28: OIDB.Type0857.MiniAppNotify
	(*OIDB_Type0857_NotifyMessageBody)(nil),                   // 29: OIDB.Type0857.NotifyMessageBody
	(*OIDB_Type0857_NotifyObjectMessageUpdate)(nil),           // 30: OIDB.Type0857.NotifyObjectMessageUpdate
	(*OIDB_Type0857_QQGroupDigestMsg)(nil),                    // 31: OIDB.Type0857.QQGroupDigestMsg
	(*OIDB_Type0857_QQGroupDigestMsgSummary)(nil),             // 32: OIDB.Type0857.QQGroupDigestMsgSummary
	(*OIDB_Type0857_QQGroupDigestSummaryInfo)(nil),            // 33: OIDB.Type0857.QQGroupDigestSummaryInfo
	(*OIDB_Type0857_QQVaLiveNotifyMsg)(nil),                   // 34: OIDB.Type0857.QQVaLiveNotifyMsg
	(*OIDB_Type0857_QQVedioGamePushInfo)(nil),                 // 35: OIDB.Type0857.QQVedioGamePushInfo
	(*OIDB_Type0857_RedGrayTipsInfo)(nil),                     // 36: OIDB.Type0857.RedGrayTipsInfo
	(*OIDB_Type0857_Request)(nil),                             // 37: OIDB.Type0857.Request
	(*OIDB_Type0857_RevertGrayTipsMsgTraceless)(nil),          // 38: OIDB.Type0857.RevertGrayTipsMsgTraceless
	(*OIDB_Type0857_Response)(nil),                            // 39: OIDB.Type0857.Response
	(*OIDB_Type0857_SingChangePushInfo)(nil),                  // 40: OIDB.Type0857.SingChangePushInfo
	(*OIDB_Type0857_StudyRoomMemberChangePush)(nil),           // 41: OIDB.Type0857.StudyRoomMemberChangePush
	(*OIDB_Type0857_TemplParam)(nil),                          // 42: OIDB.Type0857.TemplParam
	(*OIDB_Type0857_ThemeStateNotify)(nil),                    // 43: OIDB.Type0857.ThemeStateNotify
	(*OIDB_Type0857_TroopFormGrayTipsInfo)(nil),               // 44: OIDB.Type0857.TroopFormGrayTipsInfo
	(*OIDB_Type0857_VideoChangePushInfo)(nil),                 // 45: OIDB.Type0857.VideoChangePushInfo
	(*OIDB_Type0857_WereWolfPush)(nil),                        // 46: OIDB.Type0857.WereWolfPush
	(*OIDB_Type0857_MediaChangePushInfo_PersonalSetting)(nil), // 47: OIDB.Type0857.MediaChangePushInfo.PersonalSetting
	(*OIDB_Type0857_RecallReminder_MessageInfo)(nil),          // 48: OIDB.Type0857.RecallReminder.MessageInfo
	(*OIDB_Type0857_WereWolfPush_GameRecord)(nil),             // 49: OIDB.Type0857.WereWolfPush.GameRecord
	(*OIDB_Type0857_WereWolfPush_Role)(nil),                   // 50: OIDB.Type0857.WereWolfPush.Role
	(*OIDB_Type0D50_ExtraSNSFriendData)(nil),                  // 51: OIDB.Type0D50.ExtraSNSFriendData
	(*OIDB_Type0D50_KSingRelationInfo)(nil),                   // 52: OIDB.Type0D50.KSingRelationInfo
	(*OIDB_Type0D50_Request)(nil),                             // 53: OIDB.Type0D50.Request
	(*OIDB_Type0D50_Response)(nil),                            // 54: OIDB.Type0D50.Response
	(*OIDB_Type0D6B_MutualMarkData)(nil),                      // 55: OIDB.Type0D6B.MutualMarkData
	(*OIDB_Type0D6B_Request)(nil),                             // 56: OIDB.Type0D6B.Request
	(*OIDB_Type0D6B_Response)(nil),                            // 57: OIDB.Type0D6B.Response
	(*MessageService_WithdrawWordingInfo)(nil),                // 58: MessageService.WithdrawWordingInfo
}
var file_oidb_proto_depIdxs = []int32{
	2,  // 0: MutualMark.MutualMark.mutual_action_day:type_name -> MutualMark.MutualActionDay
	7,  // 1: MutualMark.SpecialWordAttribute.message_min_special_word_card_get_info:type_name -> MutualMark.SpecialWordCardGetInfo
	7,  // 2: MutualMark.SpecialWordAttribute.message_max_special_word_card_get_info:type_name -> MutualMark.SpecialWordCardGetInfo
	42, // 3: OIDB.Type0857.GeneralGrayTipInfo.message_templ_param:type_name -> OIDB.Type0857.TemplParam
	22, // 4: OIDB.Type0857.InstanceControl.message_send_to_inst:type_name -> OIDB.Type0857.InstanceInfo
	22, // 5: OIDB.Type0857.InstanceControl.message_exclude_inst:type_name -> OIDB.Type0857.InstanceInfo
	22, // 6: OIDB.Type0857.InstanceControl.message_from_inst:type_name -> OIDB.Type0857.InstanceInfo
	47, // 7: OIDB.Type0857.MediaChangePushInfo.message_per_setting:type_name -> OIDB.Type0857.MediaChangePushInfo.PersonalSetting
	48, // 8: OIDB.Type0857.RecallReminder.messages:type_name -> OIDB.Type0857.RecallReminder.MessageInfo
	58, // 9: OIDB.Type0857.RecallReminder.wording:type_name -> MessageService.WithdrawWordingInfo
	11, // 10: OIDB.Type0857.NotifyMessageBody.gray_tips:type_name -> OIDB.Type0857.GrayTipsInfo
	26, // 11: OIDB.Type0857.NotifyMessageBody.message_box:type_name -> OIDB.Type0857.MessageBoxInfo
	13, // 12: OIDB.Type0857.NotifyMessageBody.floated_tips:type_name -> OIDB.Type0857.FloatedTipsInfo
	12, // 13: OIDB.Type0857.NotifyMessageBody.top_tips:type_name -> OIDB.Type0857.TopTipsInfo
	36, // 14: OIDB.Type0857.NotifyMessageBody.red_tips:type_name -> OIDB.Type0857.RedGrayTipsInfo
	20, // 15: OIDB.Type0857.NotifyMessageBody.group_notify:type_name -> OIDB.Type0857.GroupNotifyInfo
	27, // 16: OIDB.Type0857.NotifyMessageBody.recall:type_name -> OIDB.Type0857.RecallReminder
	43, // 17: OIDB.Type0857.NotifyMessageBody.theme_notify:type_name -> OIDB.Type0857.ThemeStateNotify
	30, // 18: OIDB.Type0857.NotifyMessageBody.object_message_update:type_name -> OIDB.Type0857.NotifyObjectMessageUpdate
	46, // 19: OIDB.Type0857.NotifyMessageBody.werewolf_push:type_name -> OIDB.Type0857.WereWolfPush
	15, // 20: OIDB.Type0857.NotifyMessageBody.gold_tips:type_name -> OIDB.Type0857.GoldMsgTipsElem
	28, // 21: OIDB.Type0857.NotifyMessageBody.mini_app_notify:type_name -> OIDB.Type0857.MiniAppNotify
	24, // 22: OIDB.Type0857.NotifyMessageBody.lucky_bag_notify:type_name -> OIDB.Type0857.LuckyBagNotify
	44, // 23: OIDB.Type0857.NotifyMessageBody.troop_form_tips_push:type_name -> OIDB.Type0857.TroopFormGrayTipsInfo
	25, // 24: OIDB.Type0857.NotifyMessageBody.media_push:type_name -> OIDB.Type0857.MediaChangePushInfo
	14, // 25: OIDB.Type0857.NotifyMessageBody.general_gray_tip:type_name -> OIDB.Type0857.GeneralGrayTipInfo
	45, // 26: OIDB.Type0857.NotifyMessageBody.video_push:type_name -> OIDB.Type0857.VideoChangePushInfo
	23, // 27: OIDB.Type0857.NotifyMessageBody.lbs_share_change_plus_info:type_name -> OIDB.Type0857.LbsShareChangePushInfo
	40, // 28: OIDB.Type0857.NotifyMessageBody.sing_push:type_name -> OIDB.Type0857.SingChangePushInfo
	19, // 29: OIDB.Type0857.NotifyMessageBody.group_info_change:type_name -> OIDB.Type0857.GroupInfoChange
	17, // 30: OIDB.Type0857.NotifyMessageBody.group_announce_tbc_info:type_name -> OIDB.Type0857.GroupAnnounceTBCInfo
	35, // 31: OIDB.Type0857.NotifyMessageBody.qq_vedio_game_push_info:type_name -> OIDB.Type0857.QQVedioGamePushInfo
	31, // 32: OIDB.Type0857.NotifyMessageBody.qq_group_digest_message:type_name -> OIDB.Type0857.QQGroupDigestMsg
	41, // 33: OIDB.Type0857.NotifyMessageBody.study_room_member_message:type_name -> OIDB.Type0857.StudyRoomMemberChangePush
	34, // 34: OIDB.Type0857.NotifyMessageBody.qq_live_notify:type_name -> OIDB.Type0857.QQVaLiveNotifyMsg
	18, // 35: OIDB.Type0857.NotifyMessageBody.group_async_notidy:type_name -> OIDB.Type0857.GroupAsyncNotify
	32, // 36: OIDB.Type0857.NotifyMessageBody.group_digest_message_summary:type_name -> OIDB.Type0857.QQGroupDigestMsgSummary
	38, // 37: OIDB.Type0857.NotifyMessageBody.revert_gray_tips_traceless:type_name -> OIDB.Type0857.RevertGrayTipsMsgTraceless
	33, // 38: OIDB.Type0857.QQGroupDigestMsgSummary.summary_info:type_name -> OIDB.Type0857.QQGroupDigestSummaryInfo
	21, // 39: OIDB.Type0857.Request.message_inst_ctrl:type_name -> OIDB.Type0857.InstanceControl
	50, // 40: OIDB.Type0857.WereWolfPush.roles:type_name -> OIDB.Type0857.WereWolfPush.Role
	49, // 41: OIDB.Type0857.WereWolfPush.Role.message_game_record:type_name -> OIDB.Type0857.WereWolfPush.GameRecord
	51, // 42: OIDB.Type0D50.Response.message_update_data:type_name -> OIDB.Type0D50.ExtraSNSFriendData
	3,  // 43: OIDB.Type0D6B.MutualMarkData.mutual_mark_info:type_name -> MutualMark.MutualMark
	55, // 44: OIDB.Type0D6B.Response.message_mutualmark_data:type_name -> OIDB.Type0D6B.MutualMarkData
	45, // [45:45] is the sub-list for method output_type
	45, // [45:45] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_oidb_proto_init() }
func file_oidb_proto_init() {
	if File_oidb_proto != nil {
		return
	}
	file_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_oidb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutualMark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutualMark_MutualActionDay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutualMark_MutualMark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutualMark_ResourceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutualMark_ResourceInfo_17); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutualMark_SpecialWordAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutualMark_SpecialWordCardGetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0D50); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0D6B); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_GrayTipsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_TopTipsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_FloatedTipsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_GeneralGrayTipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_GoldMsgTipsElem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_GrayData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_GroupAnnounceTBCInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_GroupAsyncNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_GroupInfoChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_GroupNotifyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_InstanceControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_InstanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_LbsShareChangePushInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_LuckyBagNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_MediaChangePushInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_MessageBoxInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_RecallReminder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_MiniAppNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_NotifyMessageBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_NotifyObjectMessageUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_QQGroupDigestMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_QQGroupDigestMsgSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_QQGroupDigestSummaryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_QQVaLiveNotifyMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_QQVedioGamePushInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_RedGrayTipsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_RevertGrayTipsMsgTraceless); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_SingChangePushInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_StudyRoomMemberChangePush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_TemplParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_ThemeStateNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_TroopFormGrayTipsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_VideoChangePushInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_WereWolfPush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_MediaChangePushInfo_PersonalSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_RecallReminder_MessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_WereWolfPush_GameRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0857_WereWolfPush_Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0D50_ExtraSNSFriendData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0D50_KSingRelationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0D50_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0D50_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0D6B_MutualMarkData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0D6B_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDB_Type0D6B_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_oidb_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_oidb_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_oidb_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_oidb_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_oidb_proto_msgTypes[26].OneofWrappers = []interface{}{}
	file_oidb_proto_msgTypes[29].OneofWrappers = []interface{}{}
	file_oidb_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_oidb_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_oidb_proto_msgTypes[39].OneofWrappers = []interface{}{}
	file_oidb_proto_msgTypes[44].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oidb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_oidb_proto_goTypes,
		DependencyIndexes: file_oidb_proto_depIdxs,
		MessageInfos:      file_oidb_proto_msgTypes,
	}.Build()
	File_oidb_proto = out.File
	file_oidb_proto_rawDesc = nil
	file_oidb_proto_goTypes = nil
	file_oidb_proto_depIdxs = nil
}
